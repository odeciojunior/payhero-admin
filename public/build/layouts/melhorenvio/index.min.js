function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

$(function () {
  index();

  function index() {
    loadingOnScreen();
    $.ajax({
      url: "/api/apps/melhorenvio",
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      success: function success(resp) {
        if (resp.data.length) {
          $("#content").html("");

          var _iterator = _createForOfIteratorHelper(resp.data),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var integration = _step.value;
              var data = "<div class=\"col-sm-6 col-md-4 col-lg-3\" id=\"integration-".concat(integration.id, "\">\n                                       <div class=\"card shadow\">\n                                           <img class=\"card-img-top img-fluid w-full\" src=\"/build/global/img/melhorenvio-mono.png\" alt=\"\"/>\n                                           ").concat(!integration.completed ? "<div class=\"btn-authorize\" data-id=\"".concat(integration.id, "\"><b>INTEGRA\xC7\xC3O N\xC3O AUTORIZADA.</b> <br> Clique para autorizar </div>") : "", "\n                                           <div class=\"card-body\">\n                                               <div class='row'>\n                                                   <div class='col-md-10'>\n                                                       <h4 class=\"card-title\">").concat(integration.name, "</h4>\n                                                       <span class=\"card-text\">Criado em ").concat(integration.created_at, "</span>\n                                                   </div>\n                                                   <div class='col-md-2'>\n                                                       <a role=\"button\" title=\"Excluir\" class=\"btn-delete\" data-id=\"").concat(integration.id, "\">\n                                                           <span class='o-bin-1 pointer'></span>\n                                                       </a>\n                                                   </div>\n                                               </div>\n                                           </div>\n                                       </div>\n                                   </div>");
              $("#content").append(data);
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          $("#no-integration-found").hide();
        } else {
          $("#no-integration-found").show();
        }

        loadingOnScreenRemove();
      },
      error: function error(resp) {
        errorAjaxResponse(resp);
        loadingOnScreenRemove();
      }
    });
  }

  $(document).on("click", ".btn-authorize", function () {
    var id = $(this).data("id");
    $.ajax({
      url: "/api/apps/melhorenvio/continue/" + id,
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      success: function success(resp) {
        window.location.href = resp.url;
      },
      error: function error(resp) {
        errorAjaxResponse(resp);
      }
    });
  });
  $(document).on("click", ".btn-delete", function () {
    var id = $(this).data("id");
    $("#btn-delete-confirm").data("id", id);
    $("#modal-delete-integration").modal("show");
  });
  $("#btn-delete-confirm").on("click", function () {
    var id = $(this).data("id");
    $.ajax({
      method: "POST",
      url: "/api/apps/melhorenvio/" + id,
      data: {
        _method: "DELETE"
      },
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      success: function success(resp) {
        $("#integration-" + id).remove();

        if ($("#content").length === 0) {
          $("#no-integration-found").show();
        }

        alertCustom("success", resp.message);
      },
      error: function error(resp) {
        errorAjaxResponse(resp);
      }
    });
  });
  $("#btn-save").on("click", function () {
    var name = $("#name").val();

    if (name) {
      loadingOnScreen();
      $.ajax({
        method: "POST",
        url: "/api/apps/melhorenvio",
        headers: {
          Authorization: $('meta[name="access-token"]').attr("content"),
          Accept: "application/json"
        },
        data: {
          name: name
        },
        success: function success(resp) {
          window.location.href = resp.url;
        },
        error: function error(resp) {
          loadingOnScreenRemove();
          errorAjaxResponse(resp);
        }
      });
    }
  });
});
