<<<<<<< HEAD
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

var has_api_integration = false;
$('.company-navbar').change(function () {
  if (verifyIfCompanyIsDefault($(this).val())) return;
  $("#projeto").find('option').not(':first').remove();
  loadOnTable('#body-table-coupons', '.table-coupons');
  $("#projeto").html('');
  updateCompanyDefault().done(function (data1) {
    getCompaniesAndProjects().done(function (data2) {
      getProjects(data2, 'company-navbar');
    });
  });
});
var currentPage = null;
var atualizar = null;
$(document).ready(function () {
  changeCalendar();
  changeCompany();

  if (sessionStorage.info) {
    var info = JSON.parse(sessionStorage.getItem("info"));
    $("input[name=daterange]").val(info.calendar);
    $("#status").val(info.statusCompany);
    $("#status").find("option:selected").text(info.statusCompanyText);
  }

  $("#filtros").on("click", function () {
    if ($("#div_filtros").is(":visible")) {
      $("#div_filtros").slideUp();
    } else {
      $("#div_filtros").slideDown();
    }
  });
  $("#bt_filtro").on("click", function (event) {
    event.preventDefault();
    window.atualizar();
  });

  function getFilters() {
    var urlParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var data = {
      'project': $("#projeto").val(),
      'status': $("#status").val(),
      'company': $('.company-navbar').val(),
      'date_range': $("#date-filter").val()
    };
    updateStorage({
      statusCompany: data["status"],
      statusCompanyText: $("#status").find("option:selected").text()
    });

    if (urlParams) {
      var params = "";

      for (var param in data) {
        params += "&" + param + "=" + data[param];
      }

      return encodeURI(params);
    } else {
      return data;
    }
  }

  getCompaniesAndProjects().done(function (data) {
    getProjects(data);
  });

  window.fillProjectsSelect = function () {
    return $.ajax({
      method: "GET",
      url: "/api/projects?select=true",
      dataType: "json",
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      error: function error(response) {
        console.log('erro');
        console.log(response);
      },
      success: function success(response) {
        return response;
      }
    });
  };

  window.getProjects = function (data) {
    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    loadingOnScreen();
    $.ajax({
      method: "GET",
      url: "/api/sales/projects-with-sales",
      dataType: "json",
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      error: function error(response) {
        console.log('erro');
        console.log(response);
        loadingOnScreenRemove();
      },
      success: function success(response) {
        if (!isEmpty(response) || data.has_api_integration) {
          $(".div-filters").hide();
          $("#project-empty").hide();
          $("#project-not-empty").show();
          $("#export-excel > div >").show();
          $.each(response, function (c, project) {
            $("#projeto").append($("<option>", {
              value: project.project_id,
              text: project.name
            }));
          }); // if(data.has_api_integration)
          //     $("#projeto").append($("<option>", {value: 'API-TOKEN',text: 'Vendas por API'}));

          $("#projeto option:first").attr('selected', 'selected');

          if (sessionStorage.info) {
            $("#projeto").val(JSON.parse(sessionStorage.getItem('info')).company);
            $("#projeto").find('option:selected').text(JSON.parse(sessionStorage.getItem('info')).companyName);
          }

          company = $("#projeto").val();
          window.atualizar();
          $(".div-filters").show();
          if ($('#select_projects option').length == 0) $('#select_projects').next().css('display', 'none');
          loadingOnScreenRemove();
        } else {
          if (!isEmpty(data.company_default_projects)) {
            $(".div-filters").hide();
            $("#project-empty").hide();
            $("#project-not-empty").show();
            $("#export-excel > div >").show(); // $.each(data.company_default_projects, function (i, project) {
            //     $("#projeto").append($("<option>", {value: project.project_id,text: project.name,}));
            // });

            if (data.has_api_integration) $("#projeto").append($("<option>", {
              value: 'API-TOKEN',
              text: 'Vendas por API'
            }));
            $("#projeto option:first").attr('selected', 'selected');
            if ($('#select_projects option').length == 0) $('#select_projects').next().css('display', 'none');
            window.atualizar();
            $(".div-filters").show();
            loadingOnScreenRemove();
          } else {
            loadingOnScreenRemove();
            $(".div-filters").hide();
            $("#project-empty").show();
            $("#project-not-empty").hide();
          }
        }
      }
    });
    loadingOnScreenRemove();
  };

  window.atualizar = function () {
    var link = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    currentPage = link;
    var updateResume = true;
    loadOnTable("#body-table-coupons", ".table-coupons"); //$('#body-table-coupons').html(skeLoad);

    if (link == null) {
      link = "/api/reports/coupons?" + getFilters(true).substr(1);
    } else {
      link = "/api/reports/coupons" + link + getFilters(true);
    }

    $.ajax({
      method: "GET",
      url: link,
      dataType: "json",
      headers: {
        Authorization: $('meta[name="access-token"]').attr("content"),
        Accept: "application/json"
      },
      error: function error(response) {
        $('#body-table-coupons').html('');
        $('.table-coupons').addClass('table-striped');
        $('#body-table-coupons').html("<tr class='text-center'><td colspan='10' style='vertical-align: middle;height:257px;'><img style='width:124px;margin-right:12px;' src='" + $("#body-table-coupons").attr("img-empty") + "'> Nenhum cupom encontrado</td></tr>");
        errorAjaxResponse(response);
      },
      success: function success(response) {
        $("#body-table-coupons").html("");
        $(".table-coupons").addClass("table-striped");

        if (!isEmpty(response.data)) {
          $.each(response.data, function (index, value) {
            dados = "  <tr>\n                                    <td>".concat(value.cupom_code, "</td>\n                                    <td>").concat(value.project, "</td>\n                                    <td>").concat(value.amount, "</td>\n                                </tr>");
            $("#body-table-coupons").append(dados);
          });
          $("#date").val(moment(new Date()).add(3, "days").format("YYYY-MM-DD"));
          $("#date").attr("min", moment(new Date()).format("YYYY-MM-DD"));
        } else {
          $("#body-table-coupons").html("<tr class='text-center'><td colspan='10' style='vertical-align: middle;height:257px;'><img style='width:124px;margin-right:12px;' src='" + $("#body-table-coupons").attr("img-empty") + "'> Nenhum cupom encontrado</td></tr>");
        }

        pagination(response, "coupons", atualizar);
      }
    }); // if(updateResume) {
    //     resumePending();
    // }
  };

  $(document).on("keypress", function (e) {
    if (e.keyCode == 13) {
      window.atualizar();
    }
  });
});

function changeCalendar() {
  var startDate = moment().subtract(30, "days").format("DD/MM/YYYY");
  var endDate = moment().format("DD/MM/YYYY");
  $('input[name="daterange"]').attr("value", "".concat(startDate, "-").concat(endDate));
  $('input[name="daterange"]').dateRangePicker({
    setValue: function setValue(s) {
      if (s) {
        var normalize = s.replace(/(\d{2}\/\d{2}\/)(\d{2}) Ã  (\d{2}\/\d{2}\/)(\d{2})/, "$120$2-$320$4");
        $(this).html(s).data("value", normalize);
        $('input[name="daterange"]').attr("value", normalize);
        $('input[name="daterange"]').val(normalize);
      } else {
        $('input[name="daterange"]').attr("value", "".concat(startDate, "-").concat(endDate));
        $('input[name="daterange"]').val("".concat(startDate, "-").concat(endDate));
      }
    }
  }).on("datepicker-change", function () {
    updateStorage({
      calendar: $(this).val()
    });
  }).on("datepicker-open", function () {
    $(".filter-badge-input").removeClass("show");
  }).on("datepicker-close", function () {
    $(this).removeClass("focused");

    if ($(this).data("value")) {
      $(this).addClass("active");
    }
  });
}

function updateStorage(v) {
  var existing = sessionStorage.getItem("info");
  existing = existing ? JSON.parse(existing) : {};
  Object.keys(v).forEach(function (val, key) {
    existing[val] = v[val];
  });
  sessionStorage.setItem("info", JSON.stringify(existing));
}

function changeCompany() {
  $("#projeto").on("change", function () {
    // $('.onPreLoad *, .onPreLoadBig *').remove();
    // $('.onPreLoad').html(skeLoad);
    // $('.onPreLoadBig').html(skeLoadBig);
    $.ajaxQ.abortAll();
    updateStorage({
      company: $(this).val(),
      companyName: $(this).find('option:selected').text()
    });
    atualizar();
  });
}

function resumePending() {
  $("#total_sales").html(skeLoadMini);
  $.ajax({
    method: "GET",
    url: "/api/reports/resume-pending-balance",
    data: getFilters(),
    dataType: "json",
    headers: {
      Authorization: $('meta[name="access-token"]').attr("content"),
      Accept: "application/json"
    },
    error: function error(response) {
      errorAjaxResponse(response);
    },
    success: function success(response) {
      if (response.total_sales) {
        $("#total_sales, #total-pending, #total").text("");
        $("#total_sales").text(response.total_sales);
        var comission = response.commission.split(/\s/g);
        $("#total-pending").html(comission[0] + ' <span class="font-size-30 bold">' + comission[1] + "</span>");
      } else {
        $("#total-pending, #total").html('R$ <strong class="font-size-30">0,00</strong>');
      }
    }
  });
} // abort all ajax


$.ajaxQ = function () {
  var id = 0,
      Q = {};
  $(document).ajaxSend(function (e, jqx) {
    jqx._id = ++id;
    Q[jqx._id] = jqx;
  });
  $(document).ajaxComplete(function (e, jqx) {
    delete Q[jqx._id];
  });
  return {
    abortAll: function abortAll() {
      var r = [];
      $.each(Q, function (i, jqx) {
        r.push(jqx._id);
        jqx.abort();
      });
      return r;
    }
  };
}();

var skeLoad = "\n    <div class=\"ske-load\">\n        <div class=\"px-20 py-0\">\n            <div class=\"skeleton skeleton-gateway-logo\" style=\"height: 30px\"></div>\n        </div>\n        <div class=\"px-20 py-0\">\n            <div class=\"row align-items-center mx-0 py-10\">\n                <div class=\"skeleton skeleton-circle\"></div>\n                <div class=\"skeleton skeleton-text mb-0\" style=\"height: 15px; width:50%\"></div>\n            </div>\n            <div class=\"skeleton skeleton-text ske\"></div>\n        </div>\n    </div>\n";
var skeLoadBig = "\n    <div class=\"ske-load\">\n        <div class=\"px-20 py-0\">\n            <div class=\"skeleton skeleton-gateway-logo\" style=\"height: 30px\"></div>\n        </div>\n        <div class=\"px-20 py-0\">\n            <div class=\"row align-items-center mx-0 py-10\">\n                <div class=\"skeleton skeleton-circle\"></div>\n                <div class=\"skeleton skeleton-text mb-0\" style=\"height: 15px; width:50%\"></div>\n            </div>\n            <div class=\"skeleton skeleton-text ske\"></div>\n        </div>\n\n        <div class=\"px-20 py-0\">\n            <div class=\"row align-items-center mx-0 py-10\">\n                <div class=\"skeleton skeleton-circle\"></div>\n                <div class=\"skeleton skeleton-text mb-0\" style=\"height: 15px; width:50%\"></div>\n            </div>\n            <div class=\"skeleton skeleton-text ske\"></div>\n        </div>\n\n        <div class=\"px-20 py-0\">\n            <div class=\"row align-items-center mx-0 py-10\">\n                <div class=\"skeleton skeleton-circle\"></div>\n                <div class=\"skeleton skeleton-text mb-0\" style=\"height: 15px; width:50%\"></div>\n            </div>\n            <div class=\"skeleton skeleton-text ske\"></div>\n        </div>\n    </div>\n";
var skeLoadMini = "\n    <div class=\"ske-load\">\n        <div class=\"px-20 py-0\">\n            <div class=\"row align-items-center mx-0 py-10\">\n                <div class=\"skeleton skeleton-circle\"></div>\n                <div class=\"skeleton skeleton-text mb-0\" style=\"height: 15px; width:50%\"></div>\n            </div>\n        </div>\n    </div>\n"; //! moment.js
//! version : 2.18.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

!function (a, b) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define(b) : a.moment = b();
}(this, function () {
  "use strict";

  function a() {
    return sd.apply(null, arguments);
  }

  function b(a) {
    sd = a;
  }

  function c(a) {
    return a instanceof Array || "[object Array]" === Object.prototype.toString.call(a);
  }

  function d(a) {
    return null != a && "[object Object]" === Object.prototype.toString.call(a);
  }

  function e(a) {
    var b;

    for (b in a) {
      return !1;
    }

    return !0;
  }

  function f(a) {
    return void 0 === a;
  }

  function g(a) {
    return "number" == typeof a || "[object Number]" === Object.prototype.toString.call(a);
  }

  function h(a) {
    return a instanceof Date || "[object Date]" === Object.prototype.toString.call(a);
  }

  function i(a, b) {
    var c,
        d = [];

    for (c = 0; c < a.length; ++c) {
      d.push(b(a[c], c));
    }

    return d;
  }

  function j(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }

  function k(a, b) {
    for (var c in b) {
      j(b, c) && (a[c] = b[c]);
    }

    return j(b, "toString") && (a.toString = b.toString), j(b, "valueOf") && (a.valueOf = b.valueOf), a;
  }

  function l(a, b, c, d) {
    return sb(a, b, c, d, !0).utc();
  }

  function m() {
    return {
      empty: !1,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: !1,
      invalidMonth: null,
      invalidFormat: !1,
      userInvalidated: !1,
      iso: !1,
      parsedDateParts: [],
      meridiem: null,
      rfc2822: !1,
      weekdayMismatch: !1
    };
  }

  function n(a) {
    return null == a._pf && (a._pf = m()), a._pf;
  }

  function o(a) {
    if (null == a._isValid) {
      var b = n(a),
          c = ud.call(b.parsedDateParts, function (a) {
        return null != a;
      }),
          d = !isNaN(a._d.getTime()) && b.overflow < 0 && !b.empty && !b.invalidMonth && !b.invalidWeekday && !b.nullInput && !b.invalidFormat && !b.userInvalidated && (!b.meridiem || b.meridiem && c);
      if (a._strict && (d = d && 0 === b.charsLeftOver && 0 === b.unusedTokens.length && void 0 === b.bigHour), null != Object.isFrozen && Object.isFrozen(a)) return d;
      a._isValid = d;
    }

    return a._isValid;
  }

  function p(a) {
    var b = l(NaN);
    return null != a ? k(n(b), a) : n(b).userInvalidated = !0, b;
  }

  function q(a, b) {
    var c, d, e;
    if (f(b._isAMomentObject) || (a._isAMomentObject = b._isAMomentObject), f(b._i) || (a._i = b._i), f(b._f) || (a._f = b._f), f(b._l) || (a._l = b._l), f(b._strict) || (a._strict = b._strict), f(b._tzm) || (a._tzm = b._tzm), f(b._isUTC) || (a._isUTC = b._isUTC), f(b._offset) || (a._offset = b._offset), f(b._pf) || (a._pf = n(b)), f(b._locale) || (a._locale = b._locale), vd.length > 0) for (c = 0; c < vd.length; c++) {
      d = vd[c], e = b[d], f(e) || (a[d] = e);
    }
    return a;
  }

  function r(b) {
    q(this, b), this._d = new Date(null != b._d ? b._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), wd === !1 && (wd = !0, a.updateOffset(this), wd = !1);
  }

  function s(a) {
    return a instanceof r || null != a && null != a._isAMomentObject;
  }

  function t(a) {
    return a < 0 ? Math.ceil(a) || 0 : Math.floor(a);
  }

  function u(a) {
    var b = +a,
        c = 0;
    return 0 !== b && isFinite(b) && (c = t(b)), c;
  }

  function v(a, b, c) {
    var d,
        e = Math.min(a.length, b.length),
        f = Math.abs(a.length - b.length),
        g = 0;

    for (d = 0; d < e; d++) {
      (c && a[d] !== b[d] || !c && u(a[d]) !== u(b[d])) && g++;
    }

    return g + f;
  }

  function w(b) {
    a.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + b);
  }

  function x(b, c) {
    var d = !0;
    return k(function () {
      if (null != a.deprecationHandler && a.deprecationHandler(null, b), d) {
        for (var e, f = [], g = 0; g < arguments.length; g++) {
          if (e = "", "object" == _typeof(arguments[g])) {
            e += "\n[" + g + "] ";

            for (var h in arguments[0]) {
              e += h + ": " + arguments[0][h] + ", ";
            }

            e = e.slice(0, -2);
          } else e = arguments[g];

          f.push(e);
        }

        w(b + "\nArguments: " + Array.prototype.slice.call(f).join("") + "\n" + new Error().stack), d = !1;
      }

      return c.apply(this, arguments);
    }, c);
  }

  function y(b, c) {
    null != a.deprecationHandler && a.deprecationHandler(b, c), xd[b] || (w(c), xd[b] = !0);
  }

  function z(a) {
    return a instanceof Function || "[object Function]" === Object.prototype.toString.call(a);
  }

  function A(a) {
    var b, c;

    for (c in a) {
      b = a[c], z(b) ? this[c] = b : this["_" + c] = b;
    }

    this._config = a, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
  }

  function B(a, b) {
    var c,
        e = k({}, a);

    for (c in b) {
      j(b, c) && (d(a[c]) && d(b[c]) ? (e[c] = {}, k(e[c], a[c]), k(e[c], b[c])) : null != b[c] ? e[c] = b[c] : delete e[c]);
    }

    for (c in a) {
      j(a, c) && !j(b, c) && d(a[c]) && (e[c] = k({}, e[c]));
    }

    return e;
  }

  function C(a) {
    null != a && this.set(a);
  }

  function D(a, b, c) {
    var d = this._calendar[a] || this._calendar.sameElse;
    return z(d) ? d.call(b, c) : d;
  }

  function E(a) {
    var b = this._longDateFormat[a],
        c = this._longDateFormat[a.toUpperCase()];

    return b || !c ? b : (this._longDateFormat[a] = c.replace(/MMMM|MM|DD|dddd/g, function (a) {
      return a.slice(1);
    }), this._longDateFormat[a]);
  }

  function F() {
    return this._invalidDate;
  }

  function G(a) {
    return this._ordinal.replace("%d", a);
  }

  function H(a, b, c, d) {
    var e = this._relativeTime[c];
    return z(e) ? e(a, b, c, d) : e.replace(/%d/i, a);
  }

  function I(a, b) {
    var c = this._relativeTime[a > 0 ? "future" : "past"];
    return z(c) ? c(b) : c.replace(/%s/i, b);
  }

  function J(a, b) {
    var c = a.toLowerCase();
    Hd[c] = Hd[c + "s"] = Hd[b] = a;
  }

  function K(a) {
    return "string" == typeof a ? Hd[a] || Hd[a.toLowerCase()] : void 0;
  }

  function L(a) {
    var b,
        c,
        d = {};

    for (c in a) {
      j(a, c) && (b = K(c), b && (d[b] = a[c]));
    }

    return d;
  }

  function M(a, b) {
    Id[a] = b;
  }

  function N(a) {
    var b = [];

    for (var c in a) {
      b.push({
        unit: c,
        priority: Id[c]
      });
    }

    return b.sort(function (a, b) {
      return a.priority - b.priority;
    }), b;
  }

  function O(b, c) {
    return function (d) {
      return null != d ? (Q(this, b, d), a.updateOffset(this, c), this) : P(this, b);
    };
  }

  function P(a, b) {
    return a.isValid() ? a._d["get" + (a._isUTC ? "UTC" : "") + b]() : NaN;
  }

  function Q(a, b, c) {
    a.isValid() && a._d["set" + (a._isUTC ? "UTC" : "") + b](c);
  }

  function R(a) {
    return a = K(a), z(this[a]) ? this[a]() : this;
  }

  function S(a, b) {
    if ("object" == _typeof(a)) {
      a = L(a);

      for (var c = N(a), d = 0; d < c.length; d++) {
        this[c[d].unit](a[c[d].unit]);
      }
    } else if (a = K(a), z(this[a])) return this[a](b);

    return this;
  }

  function T(a, b, c) {
    var d = "" + Math.abs(a),
        e = b - d.length,
        f = a >= 0;
    return (f ? c ? "+" : "" : "-") + Math.pow(10, Math.max(0, e)).toString().substr(1) + d;
  }

  function U(a, b, c, d) {
    var e = d;
    "string" == typeof d && (e = function e() {
      return this[d]();
    }), a && (Md[a] = e), b && (Md[b[0]] = function () {
      return T(e.apply(this, arguments), b[1], b[2]);
    }), c && (Md[c] = function () {
      return this.localeData().ordinal(e.apply(this, arguments), a);
    });
  }

  function V(a) {
    return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "");
  }

  function W(a) {
    var b,
        c,
        d = a.match(Jd);

    for (b = 0, c = d.length; b < c; b++) {
      Md[d[b]] ? d[b] = Md[d[b]] : d[b] = V(d[b]);
    }

    return function (b) {
      var e,
          f = "";

      for (e = 0; e < c; e++) {
        f += z(d[e]) ? d[e].call(b, a) : d[e];
      }

      return f;
    };
  }

  function X(a, b) {
    return a.isValid() ? (b = Y(b, a.localeData()), Ld[b] = Ld[b] || W(b), Ld[b](a)) : a.localeData().invalidDate();
  }

  function Y(a, b) {
    function c(a) {
      return b.longDateFormat(a) || a;
    }

    var d = 5;

    for (Kd.lastIndex = 0; d >= 0 && Kd.test(a);) {
      a = a.replace(Kd, c), Kd.lastIndex = 0, d -= 1;
    }

    return a;
  }

  function Z(a, b, c) {
    ce[a] = z(b) ? b : function (a, d) {
      return a && c ? c : b;
    };
  }

  function $(a, b) {
    return j(ce, a) ? ce[a](b._strict, b._locale) : new RegExp(_(a));
  }

  function _(a) {
    return aa(a.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (a, b, c, d, e) {
      return b || c || d || e;
    }));
  }

  function aa(a) {
    return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
  }

  function ba(a, b) {
    var c,
        d = b;

    for ("string" == typeof a && (a = [a]), g(b) && (d = function d(a, c) {
      c[b] = u(a);
    }), c = 0; c < a.length; c++) {
      de[a[c]] = d;
    }
  }

  function ca(a, b) {
    ba(a, function (a, c, d, e) {
      d._w = d._w || {}, b(a, d._w, d, e);
    });
  }

  function da(a, b, c) {
    null != b && j(de, a) && de[a](b, c._a, c, a);
  }

  function ea(a, b) {
    return new Date(Date.UTC(a, b + 1, 0)).getUTCDate();
  }

  function fa(a, b) {
    return a ? c(this._months) ? this._months[a.month()] : this._months[(this._months.isFormat || oe).test(b) ? "format" : "standalone"][a.month()] : c(this._months) ? this._months : this._months.standalone;
  }

  function ga(a, b) {
    return a ? c(this._monthsShort) ? this._monthsShort[a.month()] : this._monthsShort[oe.test(b) ? "format" : "standalone"][a.month()] : c(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
  }

  function ha(a, b, c) {
    var d,
        e,
        f,
        g = a.toLocaleLowerCase();
    if (!this._monthsParse) for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], d = 0; d < 12; ++d) {
      f = l([2e3, d]), this._shortMonthsParse[d] = this.monthsShort(f, "").toLocaleLowerCase(), this._longMonthsParse[d] = this.months(f, "").toLocaleLowerCase();
    }
    return c ? "MMM" === b ? (e = ne.call(this._shortMonthsParse, g), e !== -1 ? e : null) : (e = ne.call(this._longMonthsParse, g), e !== -1 ? e : null) : "MMM" === b ? (e = ne.call(this._shortMonthsParse, g), e !== -1 ? e : (e = ne.call(this._longMonthsParse, g), e !== -1 ? e : null)) : (e = ne.call(this._longMonthsParse, g), e !== -1 ? e : (e = ne.call(this._shortMonthsParse, g), e !== -1 ? e : null));
  }

  function ia(a, b, c) {
    var d, e, f;
    if (this._monthsParseExact) return ha.call(this, a, b, c);

    for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), d = 0; d < 12; d++) {
      if (e = l([2e3, d]), c && !this._longMonthsParse[d] && (this._longMonthsParse[d] = new RegExp("^" + this.months(e, "").replace(".", "") + "$", "i"), this._shortMonthsParse[d] = new RegExp("^" + this.monthsShort(e, "").replace(".", "") + "$", "i")), c || this._monthsParse[d] || (f = "^" + this.months(e, "") + "|^" + this.monthsShort(e, ""), this._monthsParse[d] = new RegExp(f.replace(".", ""), "i")), c && "MMMM" === b && this._longMonthsParse[d].test(a)) return d;
      if (c && "MMM" === b && this._shortMonthsParse[d].test(a)) return d;
      if (!c && this._monthsParse[d].test(a)) return d;
    }
  }

  function ja(a, b) {
    var c;
    if (!a.isValid()) return a;
    if ("string" == typeof b) if (/^\d+$/.test(b)) b = u(b);else if (b = a.localeData().monthsParse(b), !g(b)) return a;
    return c = Math.min(a.date(), ea(a.year(), b)), a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c), a;
  }

  function ka(b) {
    return null != b ? (ja(this, b), a.updateOffset(this, !0), this) : P(this, "Month");
  }

  function la() {
    return ea(this.year(), this.month());
  }

  function ma(a) {
    return this._monthsParseExact ? (j(this, "_monthsRegex") || oa.call(this), a ? this._monthsShortStrictRegex : this._monthsShortRegex) : (j(this, "_monthsShortRegex") || (this._monthsShortRegex = re), this._monthsShortStrictRegex && a ? this._monthsShortStrictRegex : this._monthsShortRegex);
  }

  function na(a) {
    return this._monthsParseExact ? (j(this, "_monthsRegex") || oa.call(this), a ? this._monthsStrictRegex : this._monthsRegex) : (j(this, "_monthsRegex") || (this._monthsRegex = se), this._monthsStrictRegex && a ? this._monthsStrictRegex : this._monthsRegex);
  }

  function oa() {
    function a(a, b) {
      return b.length - a.length;
    }

    var b,
        c,
        d = [],
        e = [],
        f = [];

    for (b = 0; b < 12; b++) {
      c = l([2e3, b]), d.push(this.monthsShort(c, "")), e.push(this.months(c, "")), f.push(this.months(c, "")), f.push(this.monthsShort(c, ""));
    }

    for (d.sort(a), e.sort(a), f.sort(a), b = 0; b < 12; b++) {
      d[b] = aa(d[b]), e[b] = aa(e[b]);
    }

    for (b = 0; b < 24; b++) {
      f[b] = aa(f[b]);
    }

    this._monthsRegex = new RegExp("^(" + f.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + d.join("|") + ")", "i");
  }

  function pa(a) {
    return qa(a) ? 366 : 365;
  }

  function qa(a) {
    return a % 4 === 0 && a % 100 !== 0 || a % 400 === 0;
  }

  function ra() {
    return qa(this.year());
  }

  function sa(a, b, c, d, e, f, g) {
    var h = new Date(a, b, c, d, e, f, g);
    return a < 100 && a >= 0 && isFinite(h.getFullYear()) && h.setFullYear(a), h;
  }

  function ta(a) {
    var b = new Date(Date.UTC.apply(null, arguments));
    return a < 100 && a >= 0 && isFinite(b.getUTCFullYear()) && b.setUTCFullYear(a), b;
  }

  function ua(a, b, c) {
    var d = 7 + b - c,
        e = (7 + ta(a, 0, d).getUTCDay() - b) % 7;
    return -e + d - 1;
  }

  function va(a, b, c, d, e) {
    var f,
        g,
        h = (7 + c - d) % 7,
        i = ua(a, d, e),
        j = 1 + 7 * (b - 1) + h + i;
    return j <= 0 ? (f = a - 1, g = pa(f) + j) : j > pa(a) ? (f = a + 1, g = j - pa(a)) : (f = a, g = j), {
      year: f,
      dayOfYear: g
    };
  }

  function wa(a, b, c) {
    var d,
        e,
        f = ua(a.year(), b, c),
        g = Math.floor((a.dayOfYear() - f - 1) / 7) + 1;
    return g < 1 ? (e = a.year() - 1, d = g + xa(e, b, c)) : g > xa(a.year(), b, c) ? (d = g - xa(a.year(), b, c), e = a.year() + 1) : (e = a.year(), d = g), {
      week: d,
      year: e
    };
  }

  function xa(a, b, c) {
    var d = ua(a, b, c),
        e = ua(a + 1, b, c);
    return (pa(a) - d + e) / 7;
  }

  function ya(a) {
    return wa(a, this._week.dow, this._week.doy).week;
  }

  function za() {
    return this._week.dow;
  }

  function Aa() {
    return this._week.doy;
  }

  function Ba(a) {
    var b = this.localeData().week(this);
    return null == a ? b : this.add(7 * (a - b), "d");
  }

  function Ca(a) {
    var b = wa(this, 1, 4).week;
    return null == a ? b : this.add(7 * (a - b), "d");
  }

  function Da(a, b) {
    return "string" != typeof a ? a : isNaN(a) ? (a = b.weekdaysParse(a), "number" == typeof a ? a : null) : parseInt(a, 10);
  }

  function Ea(a, b) {
    return "string" == typeof a ? b.weekdaysParse(a) % 7 || 7 : isNaN(a) ? null : a;
  }

  function Fa(a, b) {
    return a ? c(this._weekdays) ? this._weekdays[a.day()] : this._weekdays[this._weekdays.isFormat.test(b) ? "format" : "standalone"][a.day()] : c(this._weekdays) ? this._weekdays : this._weekdays.standalone;
  }

  function Ga(a) {
    return a ? this._weekdaysShort[a.day()] : this._weekdaysShort;
  }

  function Ha(a) {
    return a ? this._weekdaysMin[a.day()] : this._weekdaysMin;
  }

  function Ia(a, b, c) {
    var d,
        e,
        f,
        g = a.toLocaleLowerCase();
    if (!this._weekdaysParse) for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], d = 0; d < 7; ++d) {
      f = l([2e3, 1]).day(d), this._minWeekdaysParse[d] = this.weekdaysMin(f, "").toLocaleLowerCase(), this._shortWeekdaysParse[d] = this.weekdaysShort(f, "").toLocaleLowerCase(), this._weekdaysParse[d] = this.weekdays(f, "").toLocaleLowerCase();
    }
    return c ? "dddd" === b ? (e = ne.call(this._weekdaysParse, g), e !== -1 ? e : null) : "ddd" === b ? (e = ne.call(this._shortWeekdaysParse, g), e !== -1 ? e : null) : (e = ne.call(this._minWeekdaysParse, g), e !== -1 ? e : null) : "dddd" === b ? (e = ne.call(this._weekdaysParse, g), e !== -1 ? e : (e = ne.call(this._shortWeekdaysParse, g), e !== -1 ? e : (e = ne.call(this._minWeekdaysParse, g), e !== -1 ? e : null))) : "ddd" === b ? (e = ne.call(this._shortWeekdaysParse, g), e !== -1 ? e : (e = ne.call(this._weekdaysParse, g), e !== -1 ? e : (e = ne.call(this._minWeekdaysParse, g), e !== -1 ? e : null))) : (e = ne.call(this._minWeekdaysParse, g), e !== -1 ? e : (e = ne.call(this._weekdaysParse, g), e !== -1 ? e : (e = ne.call(this._shortWeekdaysParse, g), e !== -1 ? e : null)));
  }

  function Ja(a, b, c) {
    var d, e, f;
    if (this._weekdaysParseExact) return Ia.call(this, a, b, c);

    for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), d = 0; d < 7; d++) {
      if (e = l([2e3, 1]).day(d), c && !this._fullWeekdaysParse[d] && (this._fullWeekdaysParse[d] = new RegExp("^" + this.weekdays(e, "").replace(".", ".?") + "$", "i"), this._shortWeekdaysParse[d] = new RegExp("^" + this.weekdaysShort(e, "").replace(".", ".?") + "$", "i"), this._minWeekdaysParse[d] = new RegExp("^" + this.weekdaysMin(e, "").replace(".", ".?") + "$", "i")), this._weekdaysParse[d] || (f = "^" + this.weekdays(e, "") + "|^" + this.weekdaysShort(e, "") + "|^" + this.weekdaysMin(e, ""), this._weekdaysParse[d] = new RegExp(f.replace(".", ""), "i")), c && "dddd" === b && this._fullWeekdaysParse[d].test(a)) return d;
      if (c && "ddd" === b && this._shortWeekdaysParse[d].test(a)) return d;
      if (c && "dd" === b && this._minWeekdaysParse[d].test(a)) return d;
      if (!c && this._weekdaysParse[d].test(a)) return d;
    }
  }

  function Ka(a) {
    if (!this.isValid()) return null != a ? this : NaN;
    var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    return null != a ? (a = Da(a, this.localeData()), this.add(a - b, "d")) : b;
  }

  function La(a) {
    if (!this.isValid()) return null != a ? this : NaN;
    var b = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return null == a ? b : this.add(a - b, "d");
  }

  function Ma(a) {
    if (!this.isValid()) return null != a ? this : NaN;

    if (null != a) {
      var b = Ea(a, this.localeData());
      return this.day(this.day() % 7 ? b : b - 7);
    }

    return this.day() || 7;
  }

  function Na(a) {
    return this._weekdaysParseExact ? (j(this, "_weekdaysRegex") || Qa.call(this), a ? this._weekdaysStrictRegex : this._weekdaysRegex) : (j(this, "_weekdaysRegex") || (this._weekdaysRegex = ye), this._weekdaysStrictRegex && a ? this._weekdaysStrictRegex : this._weekdaysRegex);
  }

  function Oa(a) {
    return this._weekdaysParseExact ? (j(this, "_weekdaysRegex") || Qa.call(this), a ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (j(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = ze), this._weekdaysShortStrictRegex && a ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
  }

  function Pa(a) {
    return this._weekdaysParseExact ? (j(this, "_weekdaysRegex") || Qa.call(this), a ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (j(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Ae), this._weekdaysMinStrictRegex && a ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
  }

  function Qa() {
    function a(a, b) {
      return b.length - a.length;
    }

    var b,
        c,
        d,
        e,
        f,
        g = [],
        h = [],
        i = [],
        j = [];

    for (b = 0; b < 7; b++) {
      c = l([2e3, 1]).day(b), d = this.weekdaysMin(c, ""), e = this.weekdaysShort(c, ""), f = this.weekdays(c, ""), g.push(d), h.push(e), i.push(f), j.push(d), j.push(e), j.push(f);
    }

    for (g.sort(a), h.sort(a), i.sort(a), j.sort(a), b = 0; b < 7; b++) {
      h[b] = aa(h[b]), i[b] = aa(i[b]), j[b] = aa(j[b]);
    }

    this._weekdaysRegex = new RegExp("^(" + j.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + i.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + h.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + g.join("|") + ")", "i");
  }

  function Ra() {
    return this.hours() % 12 || 12;
  }

  function Sa() {
    return this.hours() || 24;
  }

  function Ta(a, b) {
    U(a, 0, 0, function () {
      return this.localeData().meridiem(this.hours(), this.minutes(), b);
    });
  }

  function Ua(a, b) {
    return b._meridiemParse;
  }

  function Va(a) {
    return "p" === (a + "").toLowerCase().charAt(0);
  }

  function Wa(a, b, c) {
    return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM";
  }

  function Xa(a) {
    return a ? a.toLowerCase().replace("_", "-") : a;
  }

  function Ya(a) {
    for (var b, c, d, e, f = 0; f < a.length;) {
      for (e = Xa(a[f]).split("-"), b = e.length, c = Xa(a[f + 1]), c = c ? c.split("-") : null; b > 0;) {
        if (d = Za(e.slice(0, b).join("-"))) return d;
        if (c && c.length >= b && v(e, c, !0) >= b - 1) break;
        b--;
      }

      f++;
    }

    return null;
  }

  function Za(a) {
    var b = null;
    if (!Fe[a] && "undefined" != typeof module && module && module.exports) try {
      b = Be._abbr, require("./locale/" + a), $a(b);
    } catch (a) {}
    return Fe[a];
  }

  function $a(a, b) {
    var c;
    return a && (c = f(b) ? bb(a) : _a(a, b), c && (Be = c)), Be._abbr;
  }

  function _a(a, b) {
    if (null !== b) {
      var c = Ee;
      if (b.abbr = a, null != Fe[a]) y("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), c = Fe[a]._config;else if (null != b.parentLocale) {
        if (null == Fe[b.parentLocale]) return Ge[b.parentLocale] || (Ge[b.parentLocale] = []), Ge[b.parentLocale].push({
          name: a,
          config: b
        }), null;
        c = Fe[b.parentLocale]._config;
      }
      return Fe[a] = new C(B(c, b)), Ge[a] && Ge[a].forEach(function (a) {
        _a(a.name, a.config);
      }), $a(a), Fe[a];
    }

    return delete Fe[a], null;
  }

  function ab(a, b) {
    if (null != b) {
      var c,
          d = Ee;
      null != Fe[a] && (d = Fe[a]._config), b = B(d, b), c = new C(b), c.parentLocale = Fe[a], Fe[a] = c, $a(a);
    } else null != Fe[a] && (null != Fe[a].parentLocale ? Fe[a] = Fe[a].parentLocale : null != Fe[a] && delete Fe[a]);

    return Fe[a];
  }

  function bb(a) {
    var b;
    if (a && a._locale && a._locale._abbr && (a = a._locale._abbr), !a) return Be;

    if (!c(a)) {
      if (b = Za(a)) return b;
      a = [a];
    }

    return Ya(a);
  }

  function cb() {
    return Ad(Fe);
  }

  function db(a) {
    var b,
        c = a._a;
    return c && n(a).overflow === -2 && (b = c[fe] < 0 || c[fe] > 11 ? fe : c[ge] < 1 || c[ge] > ea(c[ee], c[fe]) ? ge : c[he] < 0 || c[he] > 24 || 24 === c[he] && (0 !== c[ie] || 0 !== c[je] || 0 !== c[ke]) ? he : c[ie] < 0 || c[ie] > 59 ? ie : c[je] < 0 || c[je] > 59 ? je : c[ke] < 0 || c[ke] > 999 ? ke : -1, n(a)._overflowDayOfYear && (b < ee || b > ge) && (b = ge), n(a)._overflowWeeks && b === -1 && (b = le), n(a)._overflowWeekday && b === -1 && (b = me), n(a).overflow = b), a;
  }

  function eb(a) {
    var b,
        c,
        d,
        e,
        f,
        g,
        h = a._i,
        i = He.exec(h) || Ie.exec(h);

    if (i) {
      for (n(a).iso = !0, b = 0, c = Ke.length; b < c; b++) {
        if (Ke[b][1].exec(i[1])) {
          e = Ke[b][0], d = Ke[b][2] !== !1;
          break;
        }
      }

      if (null == e) return void (a._isValid = !1);

      if (i[3]) {
        for (b = 0, c = Le.length; b < c; b++) {
          if (Le[b][1].exec(i[3])) {
            f = (i[2] || " ") + Le[b][0];
            break;
          }
        }

        if (null == f) return void (a._isValid = !1);
      }

      if (!d && null != f) return void (a._isValid = !1);

      if (i[4]) {
        if (!Je.exec(i[4])) return void (a._isValid = !1);
        g = "Z";
      }

      a._f = e + (f || "") + (g || ""), lb(a);
    } else a._isValid = !1;
  }

  function fb(a) {
    var b,
        c,
        d,
        e,
        f,
        g,
        h,
        i,
        j = {
      " GMT": " +0000",
      " EDT": " -0400",
      " EST": " -0500",
      " CDT": " -0500",
      " CST": " -0600",
      " MDT": " -0600",
      " MST": " -0700",
      " PDT": " -0700",
      " PST": " -0800"
    },
        k = "YXWVUTSRQPONZABCDEFGHIKLM";

    if (b = a._i.replace(/\([^\)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s|\s$/g, ""), c = Ne.exec(b)) {
      if (d = c[1] ? "ddd" + (5 === c[1].length ? ", " : " ") : "", e = "D MMM " + (c[2].length > 10 ? "YYYY " : "YY "), f = "HH:mm" + (c[4] ? ":ss" : ""), c[1]) {
        var l = new Date(c[2]),
            m = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][l.getDay()];
        if (c[1].substr(0, 3) !== m) return n(a).weekdayMismatch = !0, void (a._isValid = !1);
      }

      switch (c[5].length) {
        case 2:
          0 === i ? h = " +0000" : (i = k.indexOf(c[5][1].toUpperCase()) - 12, h = (i < 0 ? " -" : " +") + ("" + i).replace(/^-?/, "0").match(/..$/)[0] + "00");
          break;

        case 4:
          h = j[c[5]];
          break;

        default:
          h = j[" GMT"];
      }

      c[5] = h, a._i = c.splice(1).join(""), g = " ZZ", a._f = d + e + f + g, lb(a), n(a).rfc2822 = !0;
    } else a._isValid = !1;
  }

  function gb(b) {
    var c = Me.exec(b._i);
    return null !== c ? void (b._d = new Date(+c[1])) : (eb(b), void (b._isValid === !1 && (delete b._isValid, fb(b), b._isValid === !1 && (delete b._isValid, a.createFromInputFallback(b)))));
  }

  function hb(a, b, c) {
    return null != a ? a : null != b ? b : c;
  }

  function ib(b) {
    var c = new Date(a.now());
    return b._useUTC ? [c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate()] : [c.getFullYear(), c.getMonth(), c.getDate()];
  }

  function jb(a) {
    var b,
        c,
        d,
        e,
        f = [];

    if (!a._d) {
      for (d = ib(a), a._w && null == a._a[ge] && null == a._a[fe] && kb(a), null != a._dayOfYear && (e = hb(a._a[ee], d[ee]), (a._dayOfYear > pa(e) || 0 === a._dayOfYear) && (n(a)._overflowDayOfYear = !0), c = ta(e, 0, a._dayOfYear), a._a[fe] = c.getUTCMonth(), a._a[ge] = c.getUTCDate()), b = 0; b < 3 && null == a._a[b]; ++b) {
        a._a[b] = f[b] = d[b];
      }

      for (; b < 7; b++) {
        a._a[b] = f[b] = null == a._a[b] ? 2 === b ? 1 : 0 : a._a[b];
      }

      24 === a._a[he] && 0 === a._a[ie] && 0 === a._a[je] && 0 === a._a[ke] && (a._nextDay = !0, a._a[he] = 0), a._d = (a._useUTC ? ta : sa).apply(null, f), null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() - a._tzm), a._nextDay && (a._a[he] = 24);
    }
  }

  function kb(a) {
    var b, c, d, e, f, g, h, i;
    if (b = a._w, null != b.GG || null != b.W || null != b.E) f = 1, g = 4, c = hb(b.GG, a._a[ee], wa(tb(), 1, 4).year), d = hb(b.W, 1), e = hb(b.E, 1), (e < 1 || e > 7) && (i = !0);else {
      f = a._locale._week.dow, g = a._locale._week.doy;
      var j = wa(tb(), f, g);
      c = hb(b.gg, a._a[ee], j.year), d = hb(b.w, j.week), null != b.d ? (e = b.d, (e < 0 || e > 6) && (i = !0)) : null != b.e ? (e = b.e + f, (b.e < 0 || b.e > 6) && (i = !0)) : e = f;
    }
    d < 1 || d > xa(c, f, g) ? n(a)._overflowWeeks = !0 : null != i ? n(a)._overflowWeekday = !0 : (h = va(c, d, e, f, g), a._a[ee] = h.year, a._dayOfYear = h.dayOfYear);
  }

  function lb(b) {
    if (b._f === a.ISO_8601) return void eb(b);
    if (b._f === a.RFC_2822) return void fb(b);
    b._a = [], n(b).empty = !0;
    var c,
        d,
        e,
        f,
        g,
        h = "" + b._i,
        i = h.length,
        j = 0;

    for (e = Y(b._f, b._locale).match(Jd) || [], c = 0; c < e.length; c++) {
      f = e[c], d = (h.match($(f, b)) || [])[0], d && (g = h.substr(0, h.indexOf(d)), g.length > 0 && n(b).unusedInput.push(g), h = h.slice(h.indexOf(d) + d.length), j += d.length), Md[f] ? (d ? n(b).empty = !1 : n(b).unusedTokens.push(f), da(f, d, b)) : b._strict && !d && n(b).unusedTokens.push(f);
    }

    n(b).charsLeftOver = i - j, h.length > 0 && n(b).unusedInput.push(h), b._a[he] <= 12 && n(b).bigHour === !0 && b._a[he] > 0 && (n(b).bigHour = void 0), n(b).parsedDateParts = b._a.slice(0), n(b).meridiem = b._meridiem, b._a[he] = mb(b._locale, b._a[he], b._meridiem), jb(b), db(b);
  }

  function mb(a, b, c) {
    var d;
    return null == c ? b : null != a.meridiemHour ? a.meridiemHour(b, c) : null != a.isPM ? (d = a.isPM(c), d && b < 12 && (b += 12), d || 12 !== b || (b = 0), b) : b;
  }

  function nb(a) {
    var b, c, d, e, f;
    if (0 === a._f.length) return n(a).invalidFormat = !0, void (a._d = new Date(NaN));

    for (e = 0; e < a._f.length; e++) {
      f = 0, b = q({}, a), null != a._useUTC && (b._useUTC = a._useUTC), b._f = a._f[e], lb(b), o(b) && (f += n(b).charsLeftOver, f += 10 * n(b).unusedTokens.length, n(b).score = f, (null == d || f < d) && (d = f, c = b));
    }

    k(a, c || b);
  }

  function ob(a) {
    if (!a._d) {
      var b = L(a._i);
      a._a = i([b.year, b.month, b.day || b.date, b.hour, b.minute, b.second, b.millisecond], function (a) {
        return a && parseInt(a, 10);
      }), jb(a);
    }
  }

  function pb(a) {
    var b = new r(db(qb(a)));
    return b._nextDay && (b.add(1, "d"), b._nextDay = void 0), b;
  }

  function qb(a) {
    var b = a._i,
        d = a._f;
    return a._locale = a._locale || bb(a._l), null === b || void 0 === d && "" === b ? p({
      nullInput: !0
    }) : ("string" == typeof b && (a._i = b = a._locale.preparse(b)), s(b) ? new r(db(b)) : (h(b) ? a._d = b : c(d) ? nb(a) : d ? lb(a) : rb(a), o(a) || (a._d = null), a));
  }

  function rb(b) {
    var e = b._i;
    f(e) ? b._d = new Date(a.now()) : h(e) ? b._d = new Date(e.valueOf()) : "string" == typeof e ? gb(b) : c(e) ? (b._a = i(e.slice(0), function (a) {
      return parseInt(a, 10);
    }), jb(b)) : d(e) ? ob(b) : g(e) ? b._d = new Date(e) : a.createFromInputFallback(b);
  }

  function sb(a, b, f, g, h) {
    var i = {};
    return f !== !0 && f !== !1 || (g = f, f = void 0), (d(a) && e(a) || c(a) && 0 === a.length) && (a = void 0), i._isAMomentObject = !0, i._useUTC = i._isUTC = h, i._l = f, i._i = a, i._f = b, i._strict = g, pb(i);
  }

  function tb(a, b, c, d) {
    return sb(a, b, c, d, !1);
  }

  function ub(a, b) {
    var d, e;
    if (1 === b.length && c(b[0]) && (b = b[0]), !b.length) return tb();

    for (d = b[0], e = 1; e < b.length; ++e) {
      b[e].isValid() && !b[e][a](d) || (d = b[e]);
    }

    return d;
  }

  function vb() {
    var a = [].slice.call(arguments, 0);
    return ub("isBefore", a);
  }

  function wb() {
    var a = [].slice.call(arguments, 0);
    return ub("isAfter", a);
  }

  function xb(a) {
    for (var b in a) {
      if (Re.indexOf(b) === -1 || null != a[b] && isNaN(a[b])) return !1;
    }

    for (var c = !1, d = 0; d < Re.length; ++d) {
      if (a[Re[d]]) {
        if (c) return !1;
        parseFloat(a[Re[d]]) !== u(a[Re[d]]) && (c = !0);
      }
    }

    return !0;
  }

  function yb() {
    return this._isValid;
  }

  function zb() {
    return Sb(NaN);
  }

  function Ab(a) {
    var b = L(a),
        c = b.year || 0,
        d = b.quarter || 0,
        e = b.month || 0,
        f = b.week || 0,
        g = b.day || 0,
        h = b.hour || 0,
        i = b.minute || 0,
        j = b.second || 0,
        k = b.millisecond || 0;
    this._isValid = xb(b), this._milliseconds = +k + 1e3 * j + 6e4 * i + 1e3 * h * 60 * 60, this._days = +g + 7 * f, this._months = +e + 3 * d + 12 * c, this._data = {}, this._locale = bb(), this._bubble();
  }

  function Bb(a) {
    return a instanceof Ab;
  }

  function Cb(a) {
    return a < 0 ? Math.round(-1 * a) * -1 : Math.round(a);
  }

  function Db(a, b) {
    U(a, 0, 0, function () {
      var a = this.utcOffset(),
          c = "+";
      return a < 0 && (a = -a, c = "-"), c + T(~~(a / 60), 2) + b + T(~~a % 60, 2);
    });
  }

  function Eb(a, b) {
    var c = (b || "").match(a);
    if (null === c) return null;
    var d = c[c.length - 1] || [],
        e = (d + "").match(Se) || ["-", 0, 0],
        f = +(60 * e[1]) + u(e[2]);
    return 0 === f ? 0 : "+" === e[0] ? f : -f;
  }

  function Fb(b, c) {
    var d, e;
    return c._isUTC ? (d = c.clone(), e = (s(b) || h(b) ? b.valueOf() : tb(b).valueOf()) - d.valueOf(), d._d.setTime(d._d.valueOf() + e), a.updateOffset(d, !1), d) : tb(b).local();
  }

  function Gb(a) {
    return 15 * -Math.round(a._d.getTimezoneOffset() / 15);
  }

  function Hb(b, c, d) {
    var e,
        f = this._offset || 0;
    if (!this.isValid()) return null != b ? this : NaN;

    if (null != b) {
      if ("string" == typeof b) {
        if (b = Eb(_d, b), null === b) return this;
      } else Math.abs(b) < 16 && !d && (b = 60 * b);

      return !this._isUTC && c && (e = Gb(this)), this._offset = b, this._isUTC = !0, null != e && this.add(e, "m"), f !== b && (!c || this._changeInProgress ? Xb(this, Sb(b - f, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, a.updateOffset(this, !0), this._changeInProgress = null)), this;
    }

    return this._isUTC ? f : Gb(this);
  }

  function Ib(a, b) {
    return null != a ? ("string" != typeof a && (a = -a), this.utcOffset(a, b), this) : -this.utcOffset();
  }

  function Jb(a) {
    return this.utcOffset(0, a);
  }

  function Kb(a) {
    return this._isUTC && (this.utcOffset(0, a), this._isUTC = !1, a && this.subtract(Gb(this), "m")), this;
  }

  function Lb() {
    if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);else if ("string" == typeof this._i) {
      var a = Eb($d, this._i);
      null != a ? this.utcOffset(a) : this.utcOffset(0, !0);
    }
    return this;
  }

  function Mb(a) {
    return !!this.isValid() && (a = a ? tb(a).utcOffset() : 0, (this.utcOffset() - a) % 60 === 0);
  }

  function Nb() {
    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
  }

  function Ob() {
    if (!f(this._isDSTShifted)) return this._isDSTShifted;
    var a = {};

    if (q(a, this), a = qb(a), a._a) {
      var b = a._isUTC ? l(a._a) : tb(a._a);
      this._isDSTShifted = this.isValid() && v(a._a, b.toArray()) > 0;
    } else this._isDSTShifted = !1;

    return this._isDSTShifted;
  }

  function Pb() {
    return !!this.isValid() && !this._isUTC;
  }

  function Qb() {
    return !!this.isValid() && this._isUTC;
  }

  function Rb() {
    return !!this.isValid() && this._isUTC && 0 === this._offset;
  }

  function Sb(a, b) {
    var c,
        d,
        e,
        f = a,
        h = null;
    return Bb(a) ? f = {
      ms: a._milliseconds,
      d: a._days,
      M: a._months
    } : g(a) ? (f = {}, b ? f[b] = a : f.milliseconds = a) : (h = Te.exec(a)) ? (c = "-" === h[1] ? -1 : 1, f = {
      y: 0,
      d: u(h[ge]) * c,
      h: u(h[he]) * c,
      m: u(h[ie]) * c,
      s: u(h[je]) * c,
      ms: u(Cb(1e3 * h[ke])) * c
    }) : (h = Ue.exec(a)) ? (c = "-" === h[1] ? -1 : 1, f = {
      y: Tb(h[2], c),
      M: Tb(h[3], c),
      w: Tb(h[4], c),
      d: Tb(h[5], c),
      h: Tb(h[6], c),
      m: Tb(h[7], c),
      s: Tb(h[8], c)
    }) : null == f ? f = {} : "object" == _typeof(f) && ("from" in f || "to" in f) && (e = Vb(tb(f.from), tb(f.to)), f = {}, f.ms = e.milliseconds, f.M = e.months), d = new Ab(f), Bb(a) && j(a, "_locale") && (d._locale = a._locale), d;
  }

  function Tb(a, b) {
    var c = a && parseFloat(a.replace(",", "."));
    return (isNaN(c) ? 0 : c) * b;
  }

  function Ub(a, b) {
    var c = {
      milliseconds: 0,
      months: 0
    };
    return c.months = b.month() - a.month() + 12 * (b.year() - a.year()), a.clone().add(c.months, "M").isAfter(b) && --c.months, c.milliseconds = +b - +a.clone().add(c.months, "M"), c;
  }

  function Vb(a, b) {
    var c;
    return a.isValid() && b.isValid() ? (b = Fb(b, a), a.isBefore(b) ? c = Ub(a, b) : (c = Ub(b, a), c.milliseconds = -c.milliseconds, c.months = -c.months), c) : {
      milliseconds: 0,
      months: 0
    };
  }

  function Wb(a, b) {
    return function (c, d) {
      var e, f;
      return null === d || isNaN(+d) || (y(b, "moment()." + b + "(period, number) is deprecated. Please use moment()." + b + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), f = c, c = d, d = f), c = "string" == typeof c ? +c : c, e = Sb(c, d), Xb(this, e, a), this;
    };
  }

  function Xb(b, c, d, e) {
    var f = c._milliseconds,
        g = Cb(c._days),
        h = Cb(c._months);
    b.isValid() && (e = null == e || e, f && b._d.setTime(b._d.valueOf() + f * d), g && Q(b, "Date", P(b, "Date") + g * d), h && ja(b, P(b, "Month") + h * d), e && a.updateOffset(b, g || h));
  }

  function Yb(a, b) {
    var c = a.diff(b, "days", !0);
    return c < -6 ? "sameElse" : c < -1 ? "lastWeek" : c < 0 ? "lastDay" : c < 1 ? "sameDay" : c < 2 ? "nextDay" : c < 7 ? "nextWeek" : "sameElse";
  }

  function Zb(b, c) {
    var d = b || tb(),
        e = Fb(d, this).startOf("day"),
        f = a.calendarFormat(this, e) || "sameElse",
        g = c && (z(c[f]) ? c[f].call(this, d) : c[f]);
    return this.format(g || this.localeData().calendar(f, this, tb(d)));
  }

  function $b() {
    return new r(this);
  }

  function _b(a, b) {
    var c = s(a) ? a : tb(a);
    return !(!this.isValid() || !c.isValid()) && (b = K(f(b) ? "millisecond" : b), "millisecond" === b ? this.valueOf() > c.valueOf() : c.valueOf() < this.clone().startOf(b).valueOf());
  }

  function ac(a, b) {
    var c = s(a) ? a : tb(a);
    return !(!this.isValid() || !c.isValid()) && (b = K(f(b) ? "millisecond" : b), "millisecond" === b ? this.valueOf() < c.valueOf() : this.clone().endOf(b).valueOf() < c.valueOf());
  }

  function bc(a, b, c, d) {
    return d = d || "()", ("(" === d[0] ? this.isAfter(a, c) : !this.isBefore(a, c)) && (")" === d[1] ? this.isBefore(b, c) : !this.isAfter(b, c));
  }

  function cc(a, b) {
    var c,
        d = s(a) ? a : tb(a);
    return !(!this.isValid() || !d.isValid()) && (b = K(b || "millisecond"), "millisecond" === b ? this.valueOf() === d.valueOf() : (c = d.valueOf(), this.clone().startOf(b).valueOf() <= c && c <= this.clone().endOf(b).valueOf()));
  }

  function dc(a, b) {
    return this.isSame(a, b) || this.isAfter(a, b);
  }

  function ec(a, b) {
    return this.isSame(a, b) || this.isBefore(a, b);
  }

  function fc(a, b, c) {
    var d, e, f, g;
    return this.isValid() ? (d = Fb(a, this), d.isValid() ? (e = 6e4 * (d.utcOffset() - this.utcOffset()), b = K(b), "year" === b || "month" === b || "quarter" === b ? (g = gc(this, d), "quarter" === b ? g /= 3 : "year" === b && (g /= 12)) : (f = this - d, g = "second" === b ? f / 1e3 : "minute" === b ? f / 6e4 : "hour" === b ? f / 36e5 : "day" === b ? (f - e) / 864e5 : "week" === b ? (f - e) / 6048e5 : f), c ? g : t(g)) : NaN) : NaN;
  }

  function gc(a, b) {
    var c,
        d,
        e = 12 * (b.year() - a.year()) + (b.month() - a.month()),
        f = a.clone().add(e, "months");
    return b - f < 0 ? (c = a.clone().add(e - 1, "months"), d = (b - f) / (f - c)) : (c = a.clone().add(e + 1, "months"), d = (b - f) / (c - f)), -(e + d) || 0;
  }

  function hc() {
    return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
  }

  function ic() {
    if (!this.isValid()) return null;
    var a = this.clone().utc();
    return a.year() < 0 || a.year() > 9999 ? X(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : z(Date.prototype.toISOString) ? this.toDate().toISOString() : X(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
  }

  function jc() {
    if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
    var a = "moment",
        b = "";
    this.isLocal() || (a = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone", b = "Z");
    var c = "[" + a + '("]',
        d = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY",
        e = "-MM-DD[T]HH:mm:ss.SSS",
        f = b + '[")]';
    return this.format(c + d + e + f);
  }

  function kc(b) {
    b || (b = this.isUtc() ? a.defaultFormatUtc : a.defaultFormat);
    var c = X(this, b);
    return this.localeData().postformat(c);
  }

  function lc(a, b) {
    return this.isValid() && (s(a) && a.isValid() || tb(a).isValid()) ? Sb({
      to: this,
      from: a
    }).locale(this.locale()).humanize(!b) : this.localeData().invalidDate();
  }

  function mc(a) {
    return this.from(tb(), a);
  }

  function nc(a, b) {
    return this.isValid() && (s(a) && a.isValid() || tb(a).isValid()) ? Sb({
      from: this,
      to: a
    }).locale(this.locale()).humanize(!b) : this.localeData().invalidDate();
  }

  function oc(a) {
    return this.to(tb(), a);
  }

  function pc(a) {
    var b;
    return void 0 === a ? this._locale._abbr : (b = bb(a), null != b && (this._locale = b), this);
  }

  function qc() {
    return this._locale;
  }

  function rc(a) {
    switch (a = K(a)) {
      case "year":
        this.month(0);

      case "quarter":
      case "month":
        this.date(1);

      case "week":
      case "isoWeek":
      case "day":
      case "date":
        this.hours(0);

      case "hour":
        this.minutes(0);

      case "minute":
        this.seconds(0);

      case "second":
        this.milliseconds(0);
    }

    return "week" === a && this.weekday(0), "isoWeek" === a && this.isoWeekday(1), "quarter" === a && this.month(3 * Math.floor(this.month() / 3)), this;
  }

  function sc(a) {
    return a = K(a), void 0 === a || "millisecond" === a ? this : ("date" === a && (a = "day"), this.startOf(a).add(1, "isoWeek" === a ? "week" : a).subtract(1, "ms"));
  }

  function tc() {
    return this._d.valueOf() - 6e4 * (this._offset || 0);
  }

  function uc() {
    return Math.floor(this.valueOf() / 1e3);
  }

  function vc() {
    return new Date(this.valueOf());
  }

  function wc() {
    var a = this;
    return [a.year(), a.month(), a.date(), a.hour(), a.minute(), a.second(), a.millisecond()];
  }

  function xc() {
    var a = this;
    return {
      years: a.year(),
      months: a.month(),
      date: a.date(),
      hours: a.hours(),
      minutes: a.minutes(),
      seconds: a.seconds(),
      milliseconds: a.milliseconds()
    };
  }

  function yc() {
    return this.isValid() ? this.toISOString() : null;
  }

  function zc() {
    return o(this);
  }

  function Ac() {
    return k({}, n(this));
  }

  function Bc() {
    return n(this).overflow;
  }

  function Cc() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict
    };
  }

  function Dc(a, b) {
    U(0, [a, a.length], 0, b);
  }

  function Ec(a) {
    return Ic.call(this, a, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
  }

  function Fc(a) {
    return Ic.call(this, a, this.isoWeek(), this.isoWeekday(), 1, 4);
  }

  function Gc() {
    return xa(this.year(), 1, 4);
  }

  function Hc() {
    var a = this.localeData()._week;

    return xa(this.year(), a.dow, a.doy);
  }

  function Ic(a, b, c, d, e) {
    var f;
    return null == a ? wa(this, d, e).year : (f = xa(a, d, e), b > f && (b = f), Jc.call(this, a, b, c, d, e));
  }

  function Jc(a, b, c, d, e) {
    var f = va(a, b, c, d, e),
        g = ta(f.year, 0, f.dayOfYear);
    return this.year(g.getUTCFullYear()), this.month(g.getUTCMonth()), this.date(g.getUTCDate()), this;
  }

  function Kc(a) {
    return null == a ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (a - 1) + this.month() % 3);
  }

  function Lc(a) {
    var b = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
    return null == a ? b : this.add(a - b, "d");
  }

  function Mc(a, b) {
    b[ke] = u(1e3 * ("0." + a));
  }

  function Nc() {
    return this._isUTC ? "UTC" : "";
  }

  function Oc() {
    return this._isUTC ? "Coordinated Universal Time" : "";
  }

  function Pc(a) {
    return tb(1e3 * a);
  }

  function Qc() {
    return tb.apply(null, arguments).parseZone();
  }

  function Rc(a) {
    return a;
  }

  function Sc(a, b, c, d) {
    var e = bb(),
        f = l().set(d, b);
    return e[c](f, a);
  }

  function Tc(a, b, c) {
    if (g(a) && (b = a, a = void 0), a = a || "", null != b) return Sc(a, b, c, "month");
    var d,
        e = [];

    for (d = 0; d < 12; d++) {
      e[d] = Sc(a, d, c, "month");
    }

    return e;
  }

  function Uc(a, b, c, d) {
    "boolean" == typeof a ? (g(b) && (c = b, b = void 0), b = b || "") : (b = a, c = b, a = !1, g(b) && (c = b, b = void 0), b = b || "");
    var e = bb(),
        f = a ? e._week.dow : 0;
    if (null != c) return Sc(b, (c + f) % 7, d, "day");
    var h,
        i = [];

    for (h = 0; h < 7; h++) {
      i[h] = Sc(b, (h + f) % 7, d, "day");
    }

    return i;
  }

  function Vc(a, b) {
    return Tc(a, b, "months");
  }

  function Wc(a, b) {
    return Tc(a, b, "monthsShort");
  }

  function Xc(a, b, c) {
    return Uc(a, b, c, "weekdays");
  }

  function Yc(a, b, c) {
    return Uc(a, b, c, "weekdaysShort");
  }

  function Zc(a, b, c) {
    return Uc(a, b, c, "weekdaysMin");
  }

  function $c() {
    var a = this._data;
    return this._milliseconds = df(this._milliseconds), this._days = df(this._days), this._months = df(this._months), a.milliseconds = df(a.milliseconds), a.seconds = df(a.seconds), a.minutes = df(a.minutes), a.hours = df(a.hours), a.months = df(a.months), a.years = df(a.years), this;
  }

  function _c(a, b, c, d) {
    var e = Sb(b, c);
    return a._milliseconds += d * e._milliseconds, a._days += d * e._days, a._months += d * e._months, a._bubble();
  }

  function ad(a, b) {
    return _c(this, a, b, 1);
  }

  function bd(a, b) {
    return _c(this, a, b, -1);
  }

  function cd(a) {
    return a < 0 ? Math.floor(a) : Math.ceil(a);
  }

  function dd() {
    var a,
        b,
        c,
        d,
        e,
        f = this._milliseconds,
        g = this._days,
        h = this._months,
        i = this._data;
    return f >= 0 && g >= 0 && h >= 0 || f <= 0 && g <= 0 && h <= 0 || (f += 864e5 * cd(fd(h) + g), g = 0, h = 0), i.milliseconds = f % 1e3, a = t(f / 1e3), i.seconds = a % 60, b = t(a / 60), i.minutes = b % 60, c = t(b / 60), i.hours = c % 24, g += t(c / 24), e = t(ed(g)), h += e, g -= cd(fd(e)), d = t(h / 12), h %= 12, i.days = g, i.months = h, i.years = d, this;
  }

  function ed(a) {
    return 4800 * a / 146097;
  }

  function fd(a) {
    return 146097 * a / 4800;
  }

  function gd(a) {
    if (!this.isValid()) return NaN;
    var b,
        c,
        d = this._milliseconds;
    if (a = K(a), "month" === a || "year" === a) return b = this._days + d / 864e5, c = this._months + ed(b), "month" === a ? c : c / 12;

    switch (b = this._days + Math.round(fd(this._months)), a) {
      case "week":
        return b / 7 + d / 6048e5;

      case "day":
        return b + d / 864e5;

      case "hour":
        return 24 * b + d / 36e5;

      case "minute":
        return 1440 * b + d / 6e4;

      case "second":
        return 86400 * b + d / 1e3;

      case "millisecond":
        return Math.floor(864e5 * b) + d;

      default:
        throw new Error("Unknown unit " + a);
    }
  }

  function hd() {
    return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * u(this._months / 12) : NaN;
  }

  function id(a) {
    return function () {
      return this.as(a);
    };
  }

  function jd(a) {
    return a = K(a), this.isValid() ? this[a + "s"]() : NaN;
  }

  function kd(a) {
    return function () {
      return this.isValid() ? this._data[a] : NaN;
    };
  }

  function ld() {
    return t(this.days() / 7);
  }

  function md(a, b, c, d, e) {
    return e.relativeTime(b || 1, !!c, a, d);
  }

  function nd(a, b, c) {
    var d = Sb(a).abs(),
        e = uf(d.as("s")),
        f = uf(d.as("m")),
        g = uf(d.as("h")),
        h = uf(d.as("d")),
        i = uf(d.as("M")),
        j = uf(d.as("y")),
        k = e <= vf.ss && ["s", e] || e < vf.s && ["ss", e] || f <= 1 && ["m"] || f < vf.m && ["mm", f] || g <= 1 && ["h"] || g < vf.h && ["hh", g] || h <= 1 && ["d"] || h < vf.d && ["dd", h] || i <= 1 && ["M"] || i < vf.M && ["MM", i] || j <= 1 && ["y"] || ["yy", j];
    return k[2] = b, k[3] = +a > 0, k[4] = c, md.apply(null, k);
  }

  function od(a) {
    return void 0 === a ? uf : "function" == typeof a && (uf = a, !0);
  }

  function pd(a, b) {
    return void 0 !== vf[a] && (void 0 === b ? vf[a] : (vf[a] = b, "s" === a && (vf.ss = b - 1), !0));
  }

  function qd(a) {
    if (!this.isValid()) return this.localeData().invalidDate();
    var b = this.localeData(),
        c = nd(this, !a, b);
    return a && (c = b.pastFuture(+this, c)), b.postformat(c);
  }

  function rd() {
    if (!this.isValid()) return this.localeData().invalidDate();
    var a,
        b,
        c,
        d = wf(this._milliseconds) / 1e3,
        e = wf(this._days),
        f = wf(this._months);
    a = t(d / 60), b = t(a / 60), d %= 60, a %= 60, c = t(f / 12), f %= 12;
    var g = c,
        h = f,
        i = e,
        j = b,
        k = a,
        l = d,
        m = this.asSeconds();
    return m ? (m < 0 ? "-" : "") + "P" + (g ? g + "Y" : "") + (h ? h + "M" : "") + (i ? i + "D" : "") + (j || k || l ? "T" : "") + (j ? j + "H" : "") + (k ? k + "M" : "") + (l ? l + "S" : "") : "P0D";
  }

  var sd, td;
  td = Array.prototype.some ? Array.prototype.some : function (a) {
    for (var b = Object(this), c = b.length >>> 0, d = 0; d < c; d++) {
      if (d in b && a.call(this, b[d], d, b)) return !0;
    }

    return !1;
  };
  var ud = td,
      vd = a.momentProperties = [],
      wd = !1,
      xd = {};
  a.suppressDeprecationWarnings = !1, a.deprecationHandler = null;
  var yd;
  yd = Object.keys ? Object.keys : function (a) {
    var b,
        c = [];

    for (b in a) {
      j(a, b) && c.push(b);
    }

    return c;
  };
  var zd,
      Ad = yd,
      Bd = {
    sameDay: "[Today at] LT",
    nextDay: "[Tomorrow at] LT",
    nextWeek: "dddd [at] LT",
    lastDay: "[Yesterday at] LT",
    lastWeek: "[Last] dddd [at] LT",
    sameElse: "L"
  },
      Cd = {
    LTS: "h:mm:ss A",
    LT: "h:mm A",
    L: "MM/DD/YYYY",
    LL: "MMMM D, YYYY",
    LLL: "MMMM D, YYYY h:mm A",
    LLLL: "dddd, MMMM D, YYYY h:mm A"
  },
      Dd = "Invalid date",
      Ed = "%d",
      Fd = /\d{1,2}/,
      Gd = {
    future: "in %s",
    past: "%s ago",
    s: "a few seconds",
    ss: "%d seconds",
    m: "a minute",
    mm: "%d minutes",
    h: "an hour",
    hh: "%d hours",
    d: "a day",
    dd: "%d days",
    M: "a month",
    MM: "%d months",
    y: "a year",
    yy: "%d years"
  },
      Hd = {},
      Id = {},
      Jd = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
      Kd = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
      Ld = {},
      Md = {},
      Nd = /\d/,
      Od = /\d\d/,
      Pd = /\d{3}/,
      Qd = /\d{4}/,
      Rd = /[+-]?\d{6}/,
      Sd = /\d\d?/,
      Td = /\d\d\d\d?/,
      Ud = /\d\d\d\d\d\d?/,
      Vd = /\d{1,3}/,
      Wd = /\d{1,4}/,
      Xd = /[+-]?\d{1,6}/,
      Yd = /\d+/,
      Zd = /[+-]?\d+/,
      $d = /Z|[+-]\d\d:?\d\d/gi,
      _d = /Z|[+-]\d\d(?::?\d\d)?/gi,
      ae = /[+-]?\d+(\.\d{1,3})?/,
      be = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
      ce = {},
      de = {},
      ee = 0,
      fe = 1,
      ge = 2,
      he = 3,
      ie = 4,
      je = 5,
      ke = 6,
      le = 7,
      me = 8;
  zd = Array.prototype.indexOf ? Array.prototype.indexOf : function (a) {
    var b;

    for (b = 0; b < this.length; ++b) {
      if (this[b] === a) return b;
    }

    return -1;
  };
  var ne = zd;
  U("M", ["MM", 2], "Mo", function () {
    return this.month() + 1;
  }), U("MMM", 0, 0, function (a) {
    return this.localeData().monthsShort(this, a);
  }), U("MMMM", 0, 0, function (a) {
    return this.localeData().months(this, a);
  }), J("month", "M"), M("month", 8), Z("M", Sd), Z("MM", Sd, Od), Z("MMM", function (a, b) {
    return b.monthsShortRegex(a);
  }), Z("MMMM", function (a, b) {
    return b.monthsRegex(a);
  }), ba(["M", "MM"], function (a, b) {
    b[fe] = u(a) - 1;
  }), ba(["MMM", "MMMM"], function (a, b, c, d) {
    var e = c._locale.monthsParse(a, d, c._strict);

    null != e ? b[fe] = e : n(c).invalidMonth = a;
  });
  var oe = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
      pe = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
      qe = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
      re = be,
      se = be;
  U("Y", 0, 0, function () {
    var a = this.year();
    return a <= 9999 ? "" + a : "+" + a;
  }), U(0, ["YY", 2], 0, function () {
    return this.year() % 100;
  }), U(0, ["YYYY", 4], 0, "year"), U(0, ["YYYYY", 5], 0, "year"), U(0, ["YYYYYY", 6, !0], 0, "year"), J("year", "y"), M("year", 1), Z("Y", Zd), Z("YY", Sd, Od), Z("YYYY", Wd, Qd), Z("YYYYY", Xd, Rd), Z("YYYYYY", Xd, Rd), ba(["YYYYY", "YYYYYY"], ee), ba("YYYY", function (b, c) {
    c[ee] = 2 === b.length ? a.parseTwoDigitYear(b) : u(b);
  }), ba("YY", function (b, c) {
    c[ee] = a.parseTwoDigitYear(b);
  }), ba("Y", function (a, b) {
    b[ee] = parseInt(a, 10);
  }), a.parseTwoDigitYear = function (a) {
    return u(a) + (u(a) > 68 ? 1900 : 2e3);
  };
  var te = O("FullYear", !0);
  U("w", ["ww", 2], "wo", "week"), U("W", ["WW", 2], "Wo", "isoWeek"), J("week", "w"), J("isoWeek", "W"), M("week", 5), M("isoWeek", 5), Z("w", Sd), Z("ww", Sd, Od), Z("W", Sd), Z("WW", Sd, Od), ca(["w", "ww", "W", "WW"], function (a, b, c, d) {
    b[d.substr(0, 1)] = u(a);
  });
  var ue = {
    dow: 0,
    doy: 6
  };
  U("d", 0, "do", "day"), U("dd", 0, 0, function (a) {
    return this.localeData().weekdaysMin(this, a);
  }), U("ddd", 0, 0, function (a) {
    return this.localeData().weekdaysShort(this, a);
  }), U("dddd", 0, 0, function (a) {
    return this.localeData().weekdays(this, a);
  }), U("e", 0, 0, "weekday"), U("E", 0, 0, "isoWeekday"), J("day", "d"), J("weekday", "e"), J("isoWeekday", "E"), M("day", 11), M("weekday", 11), M("isoWeekday", 11), Z("d", Sd), Z("e", Sd), Z("E", Sd), Z("dd", function (a, b) {
    return b.weekdaysMinRegex(a);
  }), Z("ddd", function (a, b) {
    return b.weekdaysShortRegex(a);
  }), Z("dddd", function (a, b) {
    return b.weekdaysRegex(a);
  }), ca(["dd", "ddd", "dddd"], function (a, b, c, d) {
    var e = c._locale.weekdaysParse(a, d, c._strict);

    null != e ? b.d = e : n(c).invalidWeekday = a;
  }), ca(["d", "e", "E"], function (a, b, c, d) {
    b[d] = u(a);
  });
  var ve = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
      we = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
      xe = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
      ye = be,
      ze = be,
      Ae = be;
  U("H", ["HH", 2], 0, "hour"), U("h", ["hh", 2], 0, Ra), U("k", ["kk", 2], 0, Sa), U("hmm", 0, 0, function () {
    return "" + Ra.apply(this) + T(this.minutes(), 2);
  }), U("hmmss", 0, 0, function () {
    return "" + Ra.apply(this) + T(this.minutes(), 2) + T(this.seconds(), 2);
  }), U("Hmm", 0, 0, function () {
    return "" + this.hours() + T(this.minutes(), 2);
  }), U("Hmmss", 0, 0, function () {
    return "" + this.hours() + T(this.minutes(), 2) + T(this.seconds(), 2);
  }), Ta("a", !0), Ta("A", !1), J("hour", "h"), M("hour", 13), Z("a", Ua), Z("A", Ua), Z("H", Sd), Z("h", Sd), Z("k", Sd), Z("HH", Sd, Od), Z("hh", Sd, Od), Z("kk", Sd, Od), Z("hmm", Td), Z("hmmss", Ud), Z("Hmm", Td), Z("Hmmss", Ud), ba(["H", "HH"], he), ba(["k", "kk"], function (a, b, c) {
    var d = u(a);
    b[he] = 24 === d ? 0 : d;
  }), ba(["a", "A"], function (a, b, c) {
    c._isPm = c._locale.isPM(a), c._meridiem = a;
  }), ba(["h", "hh"], function (a, b, c) {
    b[he] = u(a), n(c).bigHour = !0;
  }), ba("hmm", function (a, b, c) {
    var d = a.length - 2;
    b[he] = u(a.substr(0, d)), b[ie] = u(a.substr(d)), n(c).bigHour = !0;
  }), ba("hmmss", function (a, b, c) {
    var d = a.length - 4,
        e = a.length - 2;
    b[he] = u(a.substr(0, d)), b[ie] = u(a.substr(d, 2)), b[je] = u(a.substr(e)), n(c).bigHour = !0;
  }), ba("Hmm", function (a, b, c) {
    var d = a.length - 2;
    b[he] = u(a.substr(0, d)), b[ie] = u(a.substr(d));
  }), ba("Hmmss", function (a, b, c) {
    var d = a.length - 4,
        e = a.length - 2;
    b[he] = u(a.substr(0, d)), b[ie] = u(a.substr(d, 2)), b[je] = u(a.substr(e));
  });
  var Be,
      Ce = /[ap]\.?m?\.?/i,
      De = O("Hours", !0),
      Ee = {
    calendar: Bd,
    longDateFormat: Cd,
    invalidDate: Dd,
    ordinal: Ed,
    dayOfMonthOrdinalParse: Fd,
    relativeTime: Gd,
    months: pe,
    monthsShort: qe,
    week: ue,
    weekdays: ve,
    weekdaysMin: xe,
    weekdaysShort: we,
    meridiemParse: Ce
  },
      Fe = {},
      Ge = {},
      He = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
      Ie = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
      Je = /Z|[+-]\d\d(?::?\d\d)?/,
      Ke = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/]],
      Le = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]],
      Me = /^\/?Date\((\-?\d+)/i,
      Ne = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;
  a.createFromInputFallback = x("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function (a) {
    a._d = new Date(a._i + (a._useUTC ? " UTC" : ""));
  }), a.ISO_8601 = function () {}, a.RFC_2822 = function () {};

  var Oe = x("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
    var a = tb.apply(null, arguments);
    return this.isValid() && a.isValid() ? a < this ? this : a : p();
  }),
      Pe = x("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function () {
    var a = tb.apply(null, arguments);
    return this.isValid() && a.isValid() ? a > this ? this : a : p();
  }),
      Qe = function Qe() {
    return Date.now ? Date.now() : +new Date();
  },
      Re = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];

  Db("Z", ":"), Db("ZZ", ""), Z("Z", _d), Z("ZZ", _d), ba(["Z", "ZZ"], function (a, b, c) {
    c._useUTC = !0, c._tzm = Eb(_d, a);
  });
  var Se = /([\+\-]|\d\d)/gi;

  a.updateOffset = function () {};

  var Te = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
      Ue = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
  Sb.fn = Ab.prototype, Sb.invalid = zb;
  var Ve = Wb(1, "add"),
      We = Wb(-1, "subtract");
  a.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", a.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
  var Xe = x("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (a) {
    return void 0 === a ? this.localeData() : this.locale(a);
  });
  U(0, ["gg", 2], 0, function () {
    return this.weekYear() % 100;
  }), U(0, ["GG", 2], 0, function () {
    return this.isoWeekYear() % 100;
  }), Dc("gggg", "weekYear"), Dc("ggggg", "weekYear"), Dc("GGGG", "isoWeekYear"), Dc("GGGGG", "isoWeekYear"), J("weekYear", "gg"), J("isoWeekYear", "GG"), M("weekYear", 1), M("isoWeekYear", 1), Z("G", Zd), Z("g", Zd), Z("GG", Sd, Od), Z("gg", Sd, Od), Z("GGGG", Wd, Qd), Z("gggg", Wd, Qd), Z("GGGGG", Xd, Rd), Z("ggggg", Xd, Rd), ca(["gggg", "ggggg", "GGGG", "GGGGG"], function (a, b, c, d) {
    b[d.substr(0, 2)] = u(a);
  }), ca(["gg", "GG"], function (b, c, d, e) {
    c[e] = a.parseTwoDigitYear(b);
  }), U("Q", 0, "Qo", "quarter"), J("quarter", "Q"), M("quarter", 7), Z("Q", Nd), ba("Q", function (a, b) {
    b[fe] = 3 * (u(a) - 1);
  }), U("D", ["DD", 2], "Do", "date"), J("date", "D"), M("date", 9), Z("D", Sd), Z("DD", Sd, Od), Z("Do", function (a, b) {
    return a ? b._dayOfMonthOrdinalParse || b._ordinalParse : b._dayOfMonthOrdinalParseLenient;
  }), ba(["D", "DD"], ge), ba("Do", function (a, b) {
    b[ge] = u(a.match(Sd)[0], 10);
  });
  var Ye = O("Date", !0);
  U("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), J("dayOfYear", "DDD"), M("dayOfYear", 4), Z("DDD", Vd), Z("DDDD", Pd), ba(["DDD", "DDDD"], function (a, b, c) {
    c._dayOfYear = u(a);
  }), U("m", ["mm", 2], 0, "minute"), J("minute", "m"), M("minute", 14), Z("m", Sd), Z("mm", Sd, Od), ba(["m", "mm"], ie);
  var Ze = O("Minutes", !1);
  U("s", ["ss", 2], 0, "second"), J("second", "s"), M("second", 15), Z("s", Sd), Z("ss", Sd, Od), ba(["s", "ss"], je);
  var $e = O("Seconds", !1);
  U("S", 0, 0, function () {
    return ~~(this.millisecond() / 100);
  }), U(0, ["SS", 2], 0, function () {
    return ~~(this.millisecond() / 10);
  }), U(0, ["SSS", 3], 0, "millisecond"), U(0, ["SSSS", 4], 0, function () {
    return 10 * this.millisecond();
  }), U(0, ["SSSSS", 5], 0, function () {
    return 100 * this.millisecond();
  }), U(0, ["SSSSSS", 6], 0, function () {
    return 1e3 * this.millisecond();
  }), U(0, ["SSSSSSS", 7], 0, function () {
    return 1e4 * this.millisecond();
  }), U(0, ["SSSSSSSS", 8], 0, function () {
    return 1e5 * this.millisecond();
  }), U(0, ["SSSSSSSSS", 9], 0, function () {
    return 1e6 * this.millisecond();
  }), J("millisecond", "ms"), M("millisecond", 16), Z("S", Vd, Nd), Z("SS", Vd, Od), Z("SSS", Vd, Pd);

  var _e;

  for (_e = "SSSS"; _e.length <= 9; _e += "S") {
    Z(_e, Yd);
  }

  for (_e = "S"; _e.length <= 9; _e += "S") {
    ba(_e, Mc);
  }

  var af = O("Milliseconds", !1);
  U("z", 0, 0, "zoneAbbr"), U("zz", 0, 0, "zoneName");
  var bf = r.prototype;
  bf.add = Ve, bf.calendar = Zb, bf.clone = $b, bf.diff = fc, bf.endOf = sc, bf.format = kc, bf.from = lc, bf.fromNow = mc, bf.to = nc, bf.toNow = oc, bf.get = R, bf.invalidAt = Bc, bf.isAfter = _b, bf.isBefore = ac, bf.isBetween = bc, bf.isSame = cc, bf.isSameOrAfter = dc, bf.isSameOrBefore = ec, bf.isValid = zc, bf.lang = Xe, bf.locale = pc, bf.localeData = qc, bf.max = Pe, bf.min = Oe, bf.parsingFlags = Ac, bf.set = S, bf.startOf = rc, bf.subtract = We, bf.toArray = wc, bf.toObject = xc, bf.toDate = vc, bf.toISOString = ic, bf.inspect = jc, bf.toJSON = yc, bf.toString = hc, bf.unix = uc, bf.valueOf = tc, bf.creationData = Cc, bf.year = te, bf.isLeapYear = ra, bf.weekYear = Ec, bf.isoWeekYear = Fc, bf.quarter = bf.quarters = Kc, bf.month = ka, bf.daysInMonth = la, bf.week = bf.weeks = Ba, bf.isoWeek = bf.isoWeeks = Ca, bf.weeksInYear = Hc, bf.isoWeeksInYear = Gc, bf.date = Ye, bf.day = bf.days = Ka, bf.weekday = La, bf.isoWeekday = Ma, bf.dayOfYear = Lc, bf.hour = bf.hours = De, bf.minute = bf.minutes = Ze, bf.second = bf.seconds = $e, bf.millisecond = bf.milliseconds = af, bf.utcOffset = Hb, bf.utc = Jb, bf.local = Kb, bf.parseZone = Lb, bf.hasAlignedHourOffset = Mb, bf.isDST = Nb, bf.isLocal = Pb, bf.isUtcOffset = Qb, bf.isUtc = Rb, bf.isUTC = Rb, bf.zoneAbbr = Nc, bf.zoneName = Oc, bf.dates = x("dates accessor is deprecated. Use date instead.", Ye), bf.months = x("months accessor is deprecated. Use month instead", ka), bf.years = x("years accessor is deprecated. Use year instead", te), bf.zone = x("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", Ib), bf.isDSTShifted = x("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Ob);
  var cf = C.prototype;
  cf.calendar = D, cf.longDateFormat = E, cf.invalidDate = F, cf.ordinal = G, cf.preparse = Rc, cf.postformat = Rc, cf.relativeTime = H, cf.pastFuture = I, cf.set = A, cf.months = fa, cf.monthsShort = ga, cf.monthsParse = ia, cf.monthsRegex = na, cf.monthsShortRegex = ma, cf.week = ya, cf.firstDayOfYear = Aa, cf.firstDayOfWeek = za, cf.weekdays = Fa, cf.weekdaysMin = Ha, cf.weekdaysShort = Ga, cf.weekdaysParse = Ja, cf.weekdaysRegex = Na, cf.weekdaysShortRegex = Oa, cf.weekdaysMinRegex = Pa, cf.isPM = Va, cf.meridiem = Wa, $a("en", {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(a) {
      var b = a % 10,
          c = 1 === u(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
      return a + c;
    }
  }), a.lang = x("moment.lang is deprecated. Use moment.locale instead.", $a), a.langData = x("moment.langData is deprecated. Use moment.localeData instead.", bb);
  var df = Math.abs,
      ef = id("ms"),
      ff = id("s"),
      gf = id("m"),
      hf = id("h"),
      jf = id("d"),
      kf = id("w"),
      lf = id("M"),
      mf = id("y"),
      nf = kd("milliseconds"),
      of = kd("seconds"),
      pf = kd("minutes"),
      qf = kd("hours"),
      rf = kd("days"),
      sf = kd("months"),
      tf = kd("years"),
      uf = Math.round,
      vf = {
    ss: 44,
    s: 45,
    m: 45,
    h: 22,
    d: 26,
    M: 11
  },
      wf = Math.abs,
      xf = Ab.prototype;
  return xf.isValid = yb, xf.abs = $c, xf.add = ad, xf.subtract = bd, xf.as = gd, xf.asMilliseconds = ef, xf.asSeconds = ff, xf.asMinutes = gf, xf.asHours = hf, xf.asDays = jf, xf.asWeeks = kf, xf.asMonths = lf, xf.asYears = mf, xf.valueOf = hd, xf._bubble = dd, xf.get = jd, xf.milliseconds = nf, xf.seconds = of, xf.minutes = pf, xf.hours = qf, xf.days = rf, xf.weeks = ld, xf.months = sf, xf.years = tf, xf.humanize = qd, xf.toISOString = rd, xf.toString = rd, xf.toJSON = rd, xf.locale = pc, xf.localeData = qc, xf.toIsoString = x("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", rd), xf.lang = Xe, U("X", 0, 0, "unix"), U("x", 0, 0, "valueOf"), Z("x", Zd), Z("X", ae), ba("X", function (a, b, c) {
    c._d = new Date(1e3 * parseFloat(a, 10));
  }), ba("x", function (a, b, c) {
    c._d = new Date(u(a));
  }), a.version = "2.18.1", b(tb), a.fn = bf, a.min = vb, a.max = wb, a.now = Qe, a.utc = l, a.unix = Pc, a.months = Vc, a.isDate = h, a.locale = $a, a.invalid = p, a.duration = Sb, a.isMoment = s, a.weekdays = Xc, a.parseZone = Qc, a.localeData = bb, a.isDuration = Bb, a.monthsShort = Wc, a.weekdaysMin = Zc, a.defineLocale = _a, a.updateLocale = ab, a.locales = cb, a.weekdaysShort = Yc, a.normalizeUnits = K, a.relativeTimeRounding = od, a.relativeTimeThreshold = pd, a.calendarFormat = Yb, a.prototype = bf, a;
}); // daterangepicker.js
// author : Chunlong Liu
// license : MIT
// www.jszen.com

(function (factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['jquery', 'moment'], factory);
  } else if ((typeof exports === "undefined" ? "undefined" : _typeof(exports)) === 'object' && typeof module !== 'undefined') {
    // CommonJS. Register as a module
    module.exports = factory(require('jquery'), require('moment'));
  } else {
    // Browser globals
    factory(jQuery, moment);
  }
})(function ($, moment) {
  'use strict';

  $.dateRangePickerLanguages = {
    "default": //default language: English
    {
      "selected": "Selected:",
      "day": "Day",
      "days": "Days",
      "apply": "Close",
      "week-1": "mo",
      "week-2": "tu",
      "week-3": "we",
      "week-4": "th",
      "week-5": "fr",
      "week-6": "sa",
      "week-7": "su",
      "week-number": "W",
      "month-name": ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"],
      "shortcuts": "Shortcuts",
      "custom-values": "Custom Values",
      "past": "Past",
      "following": "Following",
      "previous": "Previous",
      "prev-week": "Week",
      "prev-month": "Month",
      "prev-year": "Year",
      "next": "Next",
      "next-week": "Week",
      "next-month": "Month",
      "next-year": "Year",
      "less-than": "Date range should not be more than %d days",
      "more-than": "Date range should not be less than %d days",
      "default-more": "Please select a date range longer than %d days",
      "default-single": "Please select a date",
      "default-less": "Please select a date range less than %d days",
      "default-range": "Please select a date range between %d and %d days",
      "default-default": "Please select a date range",
      "time": "Time",
      "hour": "Hour",
      "minute": "Minute"
    },
    "id": {
      "selected": "Terpilih:",
      "day": "Hari",
      "days": "Hari",
      "apply": "Tutup",
      "week-1": "sen",
      "week-2": "sel",
      "week-3": "rab",
      "week-4": "kam",
      "week-5": "jum",
      "week-6": "sab",
      "week-7": "min",
      "week-number": "W",
      "month-name": ["januari", "februari", "maret", "april", "mei", "juni", "juli", "agustus", "september", "oktober", "november", "desember"],
      "shortcuts": "Pintas",
      "custom-values": "Nilai yang ditentukan",
      "past": "Yang Lalu",
      "following": "Mengikuti",
      "previous": "Sebelumnya",
      "prev-week": "Minggu",
      "prev-month": "Bulan",
      "prev-year": "Tahun",
      "next": "Selanjutnya",
      "next-week": "Minggu",
      "next-month": "Bulan",
      "next-year": "Tahun",
      "less-than": "Tanggal harus lebih dari %d hari",
      "more-than": "Tanggal harus kurang dari %d hari",
      "default-more": "Jarak tanggal harus lebih lama dari %d hari",
      "default-single": "Silakan pilih tanggal",
      "default-less": "Jarak rentang tanggal tidak boleh lebih lama dari %d hari",
      "default-range": "Rentang tanggal harus antara %d dan %d hari",
      "default-default": "Silakan pilih rentang tanggal",
      "time": "Waktu",
      "hour": "Jam",
      "minute": "Menit"
    },
    "az": {
      "selected": "SeÃ§ildi:",
      "day": " gÃ¼n",
      "days": " gÃ¼n",
      "apply": "tÉtbiq",
      "week-1": "1",
      "week-2": "2",
      "week-3": "3",
      "week-4": "4",
      "week-5": "5",
      "week-6": "6",
      "week-7": "7",
      "month-name": ["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"],
      "shortcuts": "QÄ±sayollar",
      "past": "KeÃ§miÅ",
      "following": "NÃ¶vbÉti",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "ÃncÉki hÉftÉ",
      "prev-month": "ÃncÉki ay",
      "prev-year": "ÃncÉki il",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "NÃ¶vbÉti hÉftÉ",
      "next-month": "NÃ¶vbÉti ay",
      "next-year": "NÃ¶vbÉti il",
      "less-than": "Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn Ã§ox olmamalÄ±dÄ±r",
      "more-than": "Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn az olmamalÄ±dÄ±r",
      "default-more": "%d gÃ¼ndÉn Ã§ox bir tarix seÃ§in",
      "default-single": "Tarix seÃ§in",
      "default-less": "%d gÃ¼ndÉn az bir tarix seÃ§in",
      "default-range": "%d vÉ %d gÃ¼n aralÄ±ÄÄ±nda tarixlÉr seÃ§in",
      "default-default": "Tarix aralÄ±ÄÄ± seÃ§in"
    },
    "bg": {
      "selected": "ÐÐ·Ð±ÑÐ°Ð½Ð¾:",
      "day": "ÐÐµÐ½",
      "days": "ÐÐ½Ð¸",
      "apply": "ÐÐ°ÑÐ²Ð¾ÑÐ¸",
      "week-1": "Ð¿Ð½",
      "week-2": "Ð²Ñ",
      "week-3": "ÑÑ",
      "week-4": "ÑÑ",
      "week-5": "Ð¿Ñ",
      "week-6": "ÑÐ±",
      "week-7": "Ð½Ð´",
      "week-number": "Ð¡",
      "month-name": ["ÑÐ½ÑÐ°ÑÐ¸", "ÑÐµÐ²ÑÑÐ°ÑÐ¸", "Ð¼Ð°ÑÑ", "Ð°Ð¿ÑÐ¸Ð»", "Ð¼Ð°Ð¹", "ÑÐ½Ð¸", "ÑÐ»Ð¸", "Ð°Ð²Ð³ÑÑÑ", "ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸", "Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸", "Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸", "Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸"],
      "shortcuts": "ÐÑÐµÐºÐ¸ Ð¿ÑÑÐ¸ÑÐ°",
      "custom-values": "ÐÐµÑÑÐ¾Ð½Ð°Ð»Ð¸Ð·Ð¸ÑÐ°Ð½Ð¸ ÑÑÐ¾Ð¹Ð½Ð¾ÑÑÐ¸",
      "past": "ÐÐ¸Ð½Ð°Ð»",
      "following": "Ð¡Ð»ÐµÐ´Ð²Ð°Ñ",
      "previous": "ÐÑÐµÐ´Ð¸ÑÐµÐ½",
      "prev-week": "Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°",
      "prev-month": "ÐÐµÑÐµÑ",
      "prev-year": "ÐÐ¾Ð´Ð¸Ð½Ð°",
      "next": "Ð¡Ð»ÐµÐ´Ð²Ð°Ñ",
      "next-week": "Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°",
      "next-month": "ÐÐµÑÐµÑ",
      "next-year": "ÐÐ¾Ð´Ð¸Ð½Ð°",
      "less-than": "ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾Ð²ÐµÑÐµ Ð¾Ñ %d Ð´Ð½Ð¸",
      "more-than": "ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ %d Ð´Ð½Ð¸",
      "default-more": "ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-Ð´ÑÐ»ÑÐ³ Ð¾Ñ %d Ð´Ð½Ð¸",
      "default-single": "ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð´Ð°ÑÐ°",
      "default-less": "ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-ÐºÑÑ Ð¾Ñ %d Ð´Ð½Ð¸",
      "default-range": "ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½Ð¸",
      "default-default": "ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´",
      "time": "ÐÑÐµÐ¼Ðµ",
      "hour": "Ð§Ð°Ñ",
      "minute": "ÐÐ¸Ð½ÑÑÐ°"
    },
    "cn": //simplified chinese
    {
      "selected": "å·²éæ©:",
      "day": "å¤©",
      "days": "å¤©",
      "apply": "ç¡®å®",
      "week-1": "ä¸",
      "week-2": "äº",
      "week-3": "ä¸",
      "week-4": "å",
      "week-5": "äº",
      "week-6": "å­",
      "week-7": "æ¥",
      "week-number": "å¨",
      "month-name": ["ä¸æ", "äºæ", "ä¸æ", "åæ", "äºæ", "å­æ", "ä¸æ", "å«æ", "ä¹æ", "åæ", "åä¸æ", "åäºæ"],
      "shortcuts": "å¿«æ·éæ©",
      "past": "è¿å»",
      "following": "å°æ¥",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "ä¸å¨",
      "prev-month": "ä¸ä¸ªæ",
      "prev-year": "å»å¹´",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "ä¸å¨",
      "next-month": "ä¸ä¸ªæ",
      "next-year": "æå¹´",
      "less-than": "æéæ¥æèå´ä¸è½å¤§äº%då¤©",
      "more-than": "æéæ¥æèå´ä¸è½å°äº%då¤©",
      "default-more": "è¯·éæ©å¤§äº%då¤©çæ¥æèå´",
      "default-less": "è¯·éæ©å°äº%då¤©çæ¥æèå´",
      "default-range": "è¯·éæ©%då¤©å°%då¤©çæ¥æèå´",
      "default-single": "è¯·éæ©ä¸ä¸ªæ¥æ",
      "default-default": "è¯·éæ©ä¸ä¸ªæ¥æèå´",
      "time": "æ¶é´",
      "hour": "å°æ¶",
      "minute": "åé"
    },
    "cz": {
      "selected": "VybrÃ¡no:",
      "day": "Den",
      "days": "Dny",
      "apply": "ZavÅÃ­t",
      "week-1": "po",
      "week-2": "Ãºt",
      "week-3": "st",
      "week-4": "Ät",
      "week-5": "pÃ¡",
      "week-6": "so",
      "week-7": "ne",
      "month-name": ["leden", "Ãºnor", "bÅezen", "duben", "kvÄten", "Äerven", "Äervenec", "srpen", "zÃ¡ÅÃ­", "ÅÃ­jen", "listopad", "prosinec"],
      "shortcuts": "Zkratky",
      "past": "po",
      "following": "nÃ¡sledujÃ­cÃ­",
      "previous": "pÅedchozÃ­",
      "prev-week": "tÃ½den",
      "prev-month": "mÄsÃ­c",
      "prev-year": "rok",
      "next": "dalÅ¡Ã­",
      "next-week": "tÃ½den",
      "next-month": "mÄsÃ­c",
      "next-year": "rok",
      "less-than": "Rozsah data by nemÄl bÃ½t vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯",
      "more-than": "Rozsah data by nemÄl bÃ½t menÅ¡Ã­ neÅ¾ %d dnÅ¯",
      "default-more": "ProsÃ­m zvolte rozsah data vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯",
      "default-single": "ProsÃ­m zvolte datum",
      "default-less": "ProsÃ­m zvolte rozsah data menÅ¡Ã­ neÅ¾ %d dnÅ¯",
      "default-range": "ProsÃ­m zvolte rozsah data mezi %d a %d dny",
      "default-default": "ProsÃ­m zvolte rozsah data"
    },
    "de": {
      "selected": "Auswahl:",
      "day": "Tag",
      "days": "Tage",
      "apply": "SchlieÃen",
      "week-1": "mo",
      "week-2": "di",
      "week-3": "mi",
      "week-4": "do",
      "week-5": "fr",
      "week-6": "sa",
      "week-7": "so",
      "month-name": ["januar", "februar", "mÃ¤rz", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "dezember"],
      "shortcuts": "Schnellwahl",
      "past": "Vorherige",
      "following": "Folgende",
      "previous": "Vorherige",
      "prev-week": "Woche",
      "prev-month": "Monat",
      "prev-year": "Jahr",
      "next": "NÃ¤chste",
      "next-week": "Woche",
      "next-month": "Monat",
      "next-year": "Jahr",
      "less-than": "Datumsbereich darf nicht grÃ¶Ãer sein als %d Tage",
      "more-than": "Datumsbereich darf nicht kleiner sein als %d Tage",
      "default-more": "Bitte mindestens %d Tage auswÃ¤hlen",
      "default-single": "Bitte ein Datum auswÃ¤hlen",
      "default-less": "Bitte weniger als %d Tage auswÃ¤hlen",
      "default-range": "Bitte einen Datumsbereich zwischen %d und %d Tagen auswÃ¤hlen",
      "default-default": "Bitte ein Start- und Enddatum auswÃ¤hlen",
      "Time": "Zeit",
      "hour": "Stunde",
      "minute": "Minute"
    },
    "es": {
      "selected": "Seleccionado:",
      "day": "DÃ­a",
      "days": "DÃ­as",
      "apply": "Cerrar",
      "week-1": "lu",
      "week-2": "ma",
      "week-3": "mi",
      "week-4": "ju",
      "week-5": "vi",
      "week-6": "sa",
      "week-7": "do",
      "month-name": ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
      "shortcuts": "Accesos directos",
      "past": "Pasado",
      "following": "Siguiente",
      "previous": "Anterior",
      "prev-week": "Semana",
      "prev-month": "Mes",
      "prev-year": "AÃ±o",
      "next": "Siguiente",
      "next-week": "Semana",
      "next-month": "Mes",
      "next-year": "AÃ±o",
      "less-than": "El rango no deberÃ­a ser mayor de %d dÃ­as",
      "more-than": "El rango no deberÃ­a ser menor de %d dÃ­as",
      "default-more": "Por favor selecciona un rango mayor a %d dÃ­as",
      "default-single": "Por favor selecciona un dÃ­a",
      "default-less": "Por favor selecciona un rango menor a %d dÃ­as",
      "default-range": "Por favor selecciona un rango entre %d y %d dÃ­as",
      "default-default": "Por favor selecciona un rango de fechas."
    },
    "fr": {
      "selected": "SÃ©lection:",
      "day": "Jour",
      "days": "Jours",
      "apply": "Fermer",
      "week-1": "lu",
      "week-2": "ma",
      "week-3": "me",
      "week-4": "je",
      "week-5": "ve",
      "week-6": "sa",
      "week-7": "di",
      "month-name": ["janvier", "fÃ©vrier", "mars", "avril", "mai", "juin", "juillet", "aoÃ»t", "septembre", "octobre", "novembre", "dÃ©cembre"],
      "shortcuts": "Raccourcis",
      "past": "PassÃ©",
      "following": "Suivant",
      "previous": "PrÃ©cÃ©dent",
      "prev-week": "Semaine",
      "prev-month": "Mois",
      "prev-year": "AnnÃ©e",
      "next": "Suivant",
      "next-week": "Semaine",
      "next-month": "Mois",
      "next-year": "AnnÃ©e",
      "less-than": "L'intervalle ne doit pas Ãªtre supÃ©rieure Ã  %d jours",
      "more-than": "L'intervalle ne doit pas Ãªtre infÃ©rieure Ã  %d jours",
      "default-more": "Merci de choisir une intervalle supÃ©rieure Ã  %d jours",
      "default-single": "Merci de choisir une date",
      "default-less": "Merci de choisir une intervalle infÃ©rieure %d jours",
      "default-range": "Merci de choisir une intervalle comprise entre %d et %d jours",
      "default-default": "Merci de choisir une date"
    },
    "hu": {
      "selected": "KivÃ¡lasztva:",
      "day": "Nap",
      "days": "Nap",
      "apply": "Ok",
      "week-1": "h",
      "week-2": "k",
      "week-3": "sz",
      "week-4": "cs",
      "week-5": "p",
      "week-6": "sz",
      "week-7": "v",
      "month-name": ["januÃ¡r", "februÃ¡r", "mÃ¡rcius", "Ã¡prilis", "mÃ¡jus", "jÃºnius", "jÃºlius", "augusztus", "szeptember", "oktÃ³ber", "november", "december"],
      "shortcuts": "GyorsvÃ¡lasztÃ³",
      "past": "MÃºlt",
      "following": "KÃ¶vetkezÅ",
      "previous": "ElÅzÅ",
      "prev-week": "HÃ©t",
      "prev-month": "HÃ³nap",
      "prev-year": "Ãv",
      "next": "KÃ¶vetkezÅ",
      "next-week": "HÃ©t",
      "next-month": "HÃ³nap",
      "next-year": "Ãv",
      "less-than": "A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l",
      "more-than": "A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l",
      "default-more": "VÃ¡lassz ki egy idÅszakot ami hosszabb mint %d nap",
      "default-single": "VÃ¡lassz egy napot",
      "default-less": "VÃ¡lassz ki egy idÅszakot ami rÃ¶videbb mint %d nap",
      "default-range": "VÃ¡lassz ki egy %d - %d nap hosszÃº idÅszakot",
      "default-default": "VÃ¡lassz ki egy idÅszakot"
    },
    "it": {
      "selected": "Selezionati:",
      "day": "Giorno",
      "days": "Giorni",
      "apply": "Chiudi",
      "week-1": "lu",
      "week-2": "ma",
      "week-3": "me",
      "week-4": "gi",
      "week-5": "ve",
      "week-6": "sa",
      "week-7": "do",
      "month-name": ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"],
      "shortcuts": "Scorciatoie",
      "past": "Scorso",
      "following": "Successivo",
      "previous": "Precedente",
      "prev-week": "Settimana",
      "prev-month": "Mese",
      "prev-year": "Anno",
      "next": "Prossimo",
      "next-week": "Settimana",
      "next-month": "Mese",
      "next-year": "Anno",
      "less-than": "L'intervallo non dev'essere maggiore di %d giorni",
      "more-than": "L'intervallo non dev'essere minore di %d giorni",
      "default-more": "Seleziona un intervallo maggiore di %d giorni",
      "default-single": "Seleziona una data",
      "default-less": "Seleziona un intervallo minore di %d giorni",
      "default-range": "Seleziona un intervallo compreso tra i %d e i %d giorni",
      "default-default": "Seleziona un intervallo di date"
    },
    "ko": {
      "selected": "ê¸°ê°:",
      "day": "ì¼",
      "days": "ì¼ê°",
      "apply": "ë«ê¸°",
      "week-1": "ì",
      "week-2": "í",
      "week-3": "ì",
      "week-4": "ëª©",
      "week-5": "ê¸",
      "week-6": "í ",
      "week-7": "ì¼",
      "week-number": "ì£¼",
      "month-name": ["1ì", "2ì", "3ì", "4ì", "5ì", "6ì", "7ì", "8ì", "9ì", "10ì", "11ì", "12ì"],
      "shortcuts": "ë¨ì¶í¤ë¤",
      "past": "ì§ë(ì¤ëê¸°ì¤)",
      "following": "ì´í(ì¤ëê¸°ì¤)",
      "previous": "ì´ì ",
      "prev-week": "1ì£¼",
      "prev-month": "1ë¬",
      "prev-year": "1ë",
      "next": "ë¤ì",
      "next-week": "1ì£¼",
      "next-month": "1ë¬",
      "next-year": "1ë",
      "less-than": "ë ì§ ë²ìë %d ì¼ë³´ë¤ ë§ì ì ììµëë¤",
      "more-than": "ë ì§ ë²ìë %d ì¼ë³´ë¤ ìì ì ììµëë¤",
      "default-more": "ë ì§ ë²ìë¥¼ %d ì¼ë³´ë¤ ê¸¸ê² ì íí´ ì£¼ì¸ì",
      "default-single": "ë ì§ë¥¼ ì íí´ ì£¼ì¸ì",
      "default-less": "%d ì¼ë³´ë¤ ìì ë ì§ë¥¼ ì íí´ ì£¼ì¸ì",
      "default-range": "%dì %d ì¼ ì¬ì´ì ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì",
      "default-default": "ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì",
      "time": "ìê°",
      "hour": "ì",
      "minute": "ë¶"
    },
    "no": {
      "selected": "Valgt:",
      "day": "Dag",
      "days": "Dager",
      "apply": "Lukk",
      "week-1": "ma",
      "week-2": "ti",
      "week-3": "on",
      "week-4": "to",
      "week-5": "fr",
      "week-6": "lÃ¸",
      "week-7": "sÃ¸",
      "month-name": ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"],
      "shortcuts": "Snarveier",
      "custom-values": "Egendefinerte Verdier",
      "past": "Over",
      // Not quite sure about the context of this one
      "following": "FÃ¸lger",
      "previous": "Forrige",
      "prev-week": "Uke",
      "prev-month": "MÃ¥ned",
      "prev-year": "Ãr",
      "next": "Neste",
      "next-week": "Uke",
      "next-month": "MÃ¥ned",
      "next-year": "Ãr",
      "less-than": "Datoperioden skal ikkje vÃ¦re lengre enn %d dager",
      "more-than": "Datoperioden skal ikkje vÃ¦re kortere enn %d dager",
      "default-more": "Vennligst velg ein datoperiode lengre enn %d dager",
      "default-single": "Vennligst velg ein dato",
      "default-less": "Vennligst velg ein datoperiode mindre enn %d dager",
      "default-range": "Vennligst velg ein datoperiode mellom %d og %d dager",
      "default-default": "Vennligst velg ein datoperiode",
      "time": "Tid",
      "hour": "Time",
      "minute": "Minutter"
    },
    "nl": {
      "selected": "Geselecteerd:",
      "day": "Dag",
      "days": "Dagen",
      "apply": "Ok",
      "week-1": "ma",
      "week-2": "di",
      "week-3": "wo",
      "week-4": "do",
      "week-5": "vr",
      "week-6": "za",
      "week-7": "zo",
      "month-name": ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
      "shortcuts": "Snelkoppelingen",
      "custom-values": "Aangepaste waarden",
      "past": "Verleden",
      "following": "Komend",
      "previous": "Vorige",
      "prev-week": "Week",
      "prev-month": "Maand",
      "prev-year": "Jaar",
      "next": "Volgende",
      "next-week": "Week",
      "next-month": "Maand",
      "next-year": "Jaar",
      "less-than": "Interval moet langer dan %d dagen zijn",
      "more-than": "Interval mag niet minder dan %d dagen zijn",
      "default-more": "Selecteer een interval langer dan %dagen",
      "default-single": "Selecteer een datum",
      "default-less": "Selecteer een interval minder dan %d dagen",
      "default-range": "Selecteer een interval tussen %d en %d dagen",
      "default-default": "Selecteer een interval",
      "time": "Tijd",
      "hour": "Uur",
      "minute": "Minuut"
    },
    "ru": {
      "selected": "ÐÑÐ±ÑÐ°Ð½Ð¾:",
      "day": "ÐÐµÐ½Ñ",
      "days": "ÐÐ½ÐµÐ¹",
      "apply": "ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ",
      "week-1": "Ð¿Ð½",
      "week-2": "Ð²Ñ",
      "week-3": "ÑÑ",
      "week-4": "ÑÑ",
      "week-5": "Ð¿Ñ",
      "week-6": "ÑÐ±",
      "week-7": "Ð²Ñ",
      "month-name": ["ÑÐ½Ð²Ð°ÑÑ", "ÑÐµÐ²ÑÐ°Ð»Ñ", "Ð¼Ð°ÑÑ", "Ð°Ð¿ÑÐµÐ»Ñ", "Ð¼Ð°Ð¹", "Ð¸ÑÐ½Ñ", "Ð¸ÑÐ»Ñ", "Ð°Ð²Ð³ÑÑÑ", "ÑÐµÐ½ÑÑÐ±ÑÑ", "Ð¾ÐºÑÑÐ±ÑÑ", "Ð½Ð¾ÑÐ±ÑÑ", "Ð´ÐµÐºÐ°Ð±ÑÑ"],
      "shortcuts": "ÐÑÑÑÑÑÐ¹ Ð²ÑÐ±Ð¾Ñ",
      "custom-values": "ÐÐ¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ",
      "past": "ÐÑÐ¾ÑÐµÐ´ÑÐ¸Ðµ",
      "following": "Ð¡Ð»ÐµÐ´ÑÑÑÐ¸Ðµ",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "ÐÐµÐ´ÐµÐ»Ñ",
      "prev-month": "ÐÐµÑÑÑ",
      "prev-year": "ÐÐ¾Ð´",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "ÐÐµÐ´ÐµÐ»Ñ",
      "next-month": "ÐÐµÑÑÑ",
      "next-year": "ÐÐ¾Ð´",
      "less-than": "ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹",
      "more-than": "ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹",
      "default-more": "ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹",
      "default-single": "ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð°ÑÑ",
      "default-less": "ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹",
      "default-range": "ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½ÑÐ¼Ð¸",
      "default-default": "ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½",
      "time": "ÐÑÐµÐ¼Ñ",
      "hour": "Ð§Ð°ÑÑ",
      "minute": "ÐÐ¸Ð½ÑÑÑ"
    },
    "uk": {
      "selected": "ÐÐ¸Ð±ÑÐ°Ð½Ð¾:",
      "day": "ÐÐµÐ½Ñ",
      "days": "ÐÐ½ÑÐ²",
      "apply": "ÐÐ°ÑÑÐ¾ÑÑÐ²Ð°ÑÐ¸",
      "week-1": "Ð¿Ð½",
      "week-2": "Ð²Ñ",
      "week-3": "ÑÑ",
      "week-4": "ÑÑ",
      "week-5": "Ð¿Ñ",
      "week-6": "ÑÐ±",
      "week-7": "Ð½Ð´",
      "month-name": ["ÑÑÑÐµÐ½Ñ", "Ð»ÑÑÐ¸Ð¹", "Ð±ÐµÑÐµÐ·ÐµÐ½Ñ", "ÐºÐ²ÑÑÐµÐ½Ñ", "ÑÑÐ°Ð²ÐµÐ½Ñ", "ÑÐµÑÐ²ÐµÐ½Ñ", "Ð»Ð¸Ð¿ÐµÐ½Ñ", "ÑÐµÑÐ¿ÐµÐ½Ñ", "Ð²ÐµÑÐµÑÐµÐ½Ñ", "Ð¶Ð¾Ð²ÑÐµÐ½Ñ", "Ð»Ð¸ÑÑÐ¾Ð¿Ð°Ð´", "Ð³ÑÑÐ´ÐµÐ½Ñ"],
      "shortcuts": "Ð¨Ð²Ð¸Ð´ÐºÐ¸Ð¹ Ð²Ð¸Ð±ÑÑ",
      "custom-values": "ÐÐ½Ð°ÑÐµÐ½Ð½Ñ ÐºÐ¾ÑÐ¸ÑÑÑÐ²Ð°ÑÐ°",
      "past": "ÐÐ¸Ð½ÑÐ»Ñ",
      "following": "ÐÐ°ÑÑÑÐ¿Ð½Ñ",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ",
      "prev-month": "ÐÑÑÑÑÑ",
      "prev-year": "Ð ÑÐº",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ",
      "next-month": "ÐÑÑÑÑÑ",
      "next-year": "Ð ÑÐº",
      "less-than": "ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð±ÑÐ»ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²",
      "more-than": "ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð¼ÐµÐ½ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²",
      "default-more": "ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð±ÑÐ»ÑÑÐµ %d Ð´Ð½ÑÐ²",
      "default-single": "ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´Ð°ÑÑ",
      "default-less": "ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÐµ %d Ð´Ð½ÑÐ²",
      "default-range": "ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÑÐ¶ %d ÑÐ° %d Ð´Ð½ÑÐ¼Ð¸",
      "default-default": "ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½",
      "time": "Ð§Ð°Ñ",
      "hour": "ÐÐ¾Ð´Ð¸Ð½Ð¸",
      "minute": "Ð¥Ð²Ð¸Ð»Ð¸Ð½Ð¸"
    },
    "pl": {
      "selected": "Wybrany:",
      "day": "DzieÅ",
      "days": "Dni",
      "apply": "Zamknij",
      "week-1": "pon",
      "week-2": "wt",
      "week-3": "År",
      "week-4": "czw",
      "week-5": "pt",
      "week-6": "so",
      "week-7": "nd",
      "month-name": ["styczeÅ", "luty", "marzec", "kwiecieÅ", "maj", "czerwiec", "lipiec", "sierpieÅ", "wrzesieÅ", "paÅºdziernik", "listopad", "grudzieÅ"],
      "shortcuts": "SkrÃ³ty",
      "custom-values": "Niestandardowe wartoÅci",
      "past": "PrzeszÅe",
      "following": "NastÄpne",
      "previous": "Poprzednie",
      "prev-week": "tydzieÅ",
      "prev-month": "miesiÄc",
      "prev-year": "rok",
      "next": "NastÄpny",
      "next-week": "tydzieÅ",
      "next-month": "miesiÄc",
      "next-year": "rok",
      "less-than": "Okres nie powinien byÄ dÅuÅ¼szy niÅ¼ %d dni",
      "more-than": "Okres nie powinien byÄ krÃ³tszy niÅ¼  %d ni",
      "default-more": "Wybierz okres dÅuÅ¼szy niÅ¼ %d dni",
      "default-single": "Wybierz datÄ",
      "default-less": "Wybierz okres krÃ³tszy niÅ¼ %d dni",
      "default-range": "Wybierz okres trwajÄcy od %d do %d dni",
      "default-default": "Wybierz okres",
      "time": "Czas",
      "hour": "Godzina",
      "minute": "Minuta"
    },
    "se": {
      "selected": "Vald:",
      "day": "dag",
      "days": "dagar",
      "apply": "godkÃ¤nn",
      "week-1": "ma",
      "week-2": "ti",
      "week-3": "on",
      "week-4": "to",
      "week-5": "fr",
      "week-6": "lÃ¶",
      "week-7": "sÃ¶",
      "month-name": ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"],
      "shortcuts": "genvÃ¤gar",
      "custom-values": "Anpassade vÃ¤rden",
      "past": "Ã¶ver",
      "following": "fÃ¶ljande",
      "previous": "fÃ¶rra",
      "prev-week": "vecka",
      "prev-month": "mÃ¥nad",
      "prev-year": "Ã¥r",
      "next": "nÃ¤sta",
      "next-week": "vecka",
      "next-month": "mÃ¥ned",
      "next-year": "Ã¥r",
      "less-than": "Datumintervall bÃ¶r inte vara mindre Ã¤n %d dagar",
      "more-than": "Datumintervall bÃ¶r inte vara mer Ã¤n %d dagar",
      "default-more": "VÃ¤lj ett datumintervall lÃ¤ngre Ã¤n %d dagar",
      "default-single": "VÃ¤lj ett datum",
      "default-less": "VÃ¤lj ett datumintervall mindre Ã¤n %d dagar",
      "default-range": "VÃ¤lj ett datumintervall mellan %d och %d dagar",
      "default-default": "VÃ¤lj ett datumintervall",
      "time": "tid",
      "hour": "timme",
      "minute": "minut"
    },
    "pt": //Portuguese (European)
    {
      "selected": "Selecionado:",
      "day": "Dia",
      "days": "Dias",
      "apply": "Fechar",
      "week-1": "S",
      "week-2": "T",
      "week-3": "Q",
      "week-4": "Q",
      "week-5": "S",
      "week-6": "S",
      "week-7": "D",
      "week-number": "N",
      "month-name": ["janeiro", "fevereiro", "marÃ§o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"],
      "shortcuts": "Atalhos",
      "custom-values": "Valores Personalizados",
      "past": "Passado",
      "following": "Seguinte",
      "previous": "Anterior",
      "prev-week": "Semana",
      "prev-month": "MÃªs",
      "prev-year": "Ano",
      "next": "PrÃ³ximo",
      "next-week": "PrÃ³xima Semana",
      "next-month": "PrÃ³ximo MÃªs",
      "next-year": "PrÃ³ximo Ano",
      "less-than": "O perÃ­odo selecionado nÃ£o deve ser maior que %d dias",
      "more-than": "O perÃ­odo selecionado nÃ£o deve ser menor que %d dias",
      "default-more": "Selecione um perÃ­odo superior a %d dias",
      "default-single": "Selecione uma data",
      "default-less": "Selecione um perÃ­odo inferior a %d dias",
      "default-range": "Selecione um perÃ­odo de %d a %d dias",
      "default-default": "Selecione um perÃ­odo",
      "time": "Tempo",
      "hour": "Hora",
      "minute": "Minuto"
    },
    "tc": // traditional chinese
    {
      "selected": "å·²é¸æ:",
      "day": "å¤©",
      "days": "å¤©",
      "apply": "ç¢ºå®",
      "week-1": "ä¸",
      "week-2": "äº",
      "week-3": "ä¸",
      "week-4": "å",
      "week-5": "äº",
      "week-6": "å­",
      "week-7": "æ¥",
      "week-number": "é±",
      "month-name": ["ä¸æ", "äºæ", "ä¸æ", "åæ", "äºæ", "å­æ", "ä¸æ", "å«æ", "ä¹æ", "åæ", "åä¸æ", "åäºæ"],
      "shortcuts": "å¿«éé¸æ",
      "past": "éå»",
      "following": "å°ä¾",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "ä¸é±",
      "prev-month": "ä¸åæ",
      "prev-year": "å»å¹´",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "ä¸é±",
      "next-month": "ä¸åæ",
      "next-year": "æå¹´",
      "less-than": "æé¸æ¥æç¯åä¸è½å¤§æ¼%då¤©",
      "more-than": "æé¸æ¥æç¯åä¸è½å°æ¼%då¤©",
      "default-more": "è«é¸æå¤§æ¼%då¤©çæ¥æç¯å",
      "default-less": "è«é¸æå°æ¼%då¤©çæ¥æç¯å",
      "default-range": "è«é¸æ%då¤©å°%då¤©çæ¥æç¯å",
      "default-single": "è«é¸æä¸åæ¥æ",
      "default-default": "è«é¸æä¸åæ¥æç¯å",
      "time": "æ¥æ",
      "hour": "å°æ",
      "minute": "åé"
    },
    "ja": {
      "selected": "é¸æãã¾ãã:",
      "day": "æ¥",
      "days": "æ¥",
      "apply": "ç¢ºå®",
      "week-1": "æ",
      "week-2": "ç«",
      "week-3": "æ°´",
      "week-4": "æ¨",
      "week-5": "é",
      "week-6": "å",
      "week-7": "æ¥",
      "month-name": ["1æ", "2æ", "3æ", "4æ", "5æ", "6æ", "7æ", "8æ", "9æ", "10æ", "11æ", "12æ"],
      "shortcuts": "ã¯ã¤ãã¯é¸æ",
      "past": "éå»",
      "following": "å°æ¥",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "åé±",
      "prev-month": "åæ",
      "prev-year": "æ¨å¹´",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "æ¥é±",
      "next-month": "æ¥æ",
      "next-year": "æ¥å¹´",
      "less-than": "æ¥ä»ã®ç¯å²ã¯ï¼dæ¥ä»¥ä¸ã«ãã¹ãã§ã¯ããã¾ãã",
      "more-than": "æ¥ä»ã®ç¯å²ã¯ï¼dæ¥ãä¸åã£ã¦ã¯ããã¾ãã",
      "default-more": "ï¼dæ¥ãããé·ãæéãé¸æãã¦ãã ãã",
      "default-less": "ï¼dæ¥æªæºã®æéãé¸æãã¦ãã ãã",
      "default-range": "ï¼dæ¥ã¨ï¼dæ¥ã®éã®æ¥ä»ç¯å²ãé¸æãã¦ãã ãã",
      "default-single": "æ¥ä»ãé¸æãã¦ãã ãã",
      "default-default": "æ¥ä»ç¯å²ãé¸æãã¦ãã ãã",
      "time": "æé",
      "hour": "æé",
      "minute": "å"
    },
    "da": {
      "selected": "Valgt:",
      "day": "Dag",
      "days": "Dage",
      "apply": "Luk",
      "week-1": "ma",
      "week-2": "ti",
      "week-3": "on",
      "week-4": "to",
      "week-5": "fr",
      "week-6": "lÃ¸",
      "week-7": "sÃ¸",
      "month-name": ["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"],
      "shortcuts": "genveje",
      "custom-values": "Brugerdefinerede vÃ¦rdier",
      "past": "Forbi",
      "following": "FÃ¸lgende",
      "previous": "Forrige",
      "prev-week": "uge",
      "prev-month": "mÃ¥ned",
      "prev-year": "Ã¥r",
      "next": "NÃ¦ste",
      "next-week": "uge",
      "next-month": "mÃ¥ned",
      "next-year": "Ã¥r",
      "less-than": "Dato interval bÃ¸r ikke vÃ¦re med end %d dage",
      "more-than": "Dato interval bÃ¸r ikke vÃ¦re mindre end %d dage",
      "default-more": "VÃ¦lg datointerval lÃ¦ngere end %d dage",
      "default-single": "VÃ¦lg dato",
      "default-less": "VÃ¦lg datointerval mindre end %d dage",
      "default-range": "VÃ¦lg datointerval mellem %d og %d dage",
      "default-default": "VÃ¦lg datointerval",
      "time": "tid",
      "hour": "time",
      "minute": "minut"
    },
    "fi": // Finnish
    {
      "selected": "Valittu:",
      "day": "PÃ¤ivÃ¤",
      "days": "PÃ¤ivÃ¤Ã¤",
      "apply": "Sulje",
      "week-1": "ma",
      "week-2": "ti",
      "week-3": "ke",
      "week-4": "to",
      "week-5": "pe",
      "week-6": "la",
      "week-7": "su",
      "week-number": "V",
      "month-name": ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesÃ¤kuu", "heinÃ¤kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
      "shortcuts": "Pikavalinnat",
      "custom-values": "Mukautetut Arvot",
      "past": "Menneet",
      "following": "Tulevat",
      "previous": "Edellinen",
      "prev-week": "Viikko",
      "prev-month": "Kuukausi",
      "prev-year": "Vuosi",
      "next": "Seuraava",
      "next-week": "Viikko",
      "next-month": "Kuukausi",
      "next-year": "Vuosi",
      "less-than": "Aikajakson tulisi olla vÃ¤hemmÃ¤n kuin %d pÃ¤ivÃ¤Ã¤",
      "more-than": "Aikajakson ei tulisi olla vÃ¤hempÃ¤Ã¤ kuin %d pÃ¤ivÃ¤Ã¤",
      "default-more": "Valitse pidempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤",
      "default-single": "Valitse pÃ¤ivÃ¤",
      "default-less": "Valitse lyhyempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤",
      "default-range": "Valitse aikajakso %d ja %d pÃ¤ivÃ¤n vÃ¤liltÃ¤",
      "default-default": "Valitse aikajakso",
      "time": "Aika",
      "hour": "Tunti",
      "minute": "Minuutti"
    },
    "cat": // Catala
    {
      "selected": "Seleccionats:",
      "day": "Dia",
      "days": "Dies",
      "apply": "Tanca",
      "week-1": "Dl",
      "week-2": "Dm",
      "week-3": "Dc",
      "week-4": "Dj",
      "week-5": "Dv",
      "week-6": "Ds",
      "week-7": "Dg",
      "week-number": "S",
      "month-name": ["gener", "febrer", "marÃ§", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"],
      "shortcuts": "DreÃ§eres",
      "custom-values": "Valors personalitzats",
      "past": "Passat",
      "following": "Futur",
      "previous": "Anterior",
      "prev-week": "Setmana",
      "prev-month": "Mes",
      "prev-year": "Any",
      "next": "SegÃ¼ent",
      "next-week": "Setmana",
      "next-month": "Mes",
      "next-year": "Any",
      "less-than": "El perÃ­ode no hauria de ser de mÃ©s de %d dies",
      "more-than": "El perÃ­ode no hauria de ser de menys de %d dies",
      "default-more": "Perfavor selecciona un perÃ­ode mÃ©s gran de %d dies",
      "default-single": "Perfavor selecciona una data",
      "default-less": "Perfavor selecciona un perÃ­ode de menys de %d dies",
      "default-range": "Perfavor selecciona un perÃ­ode d'entre %d i %d dies",
      "default-default": "Perfavor selecciona un perÃ­ode",
      "time": "Temps",
      "hour": "Hora",
      "minute": "Minut"
    },
    "sk": {
      "selected": "VybranÃ©:",
      "day": "DeÅ",
      "days": "Dni",
      "apply": "ZavrieÅ¥",
      "week-1": "po",
      "week-2": "Ãºt",
      "week-3": "st",
      "week-4": "Å¡t",
      "week-5": "pi",
      "week-6": "so",
      "week-7": "ne",
      "week-number": "T",
      "month-name": ["januÃ¡r", "februÃ¡r", "marec", "aprÃ­l", "mÃ¡j", "jÃºn", "jÃºl", "august", "september", "oktÃ³ber", "november", "december"],
      "shortcuts": "Skratky",
      "custom-values": "VlastnÃ© hodnoty",
      "past": "po",
      "following": "nasledujÃºci",
      "previous": "predchÃ¡dzajÃºci",
      "prev-week": "tÃ½Å¾deÅ",
      "prev-month": "mesiac",
      "prev-year": "rok",
      "next": "ÄalÅ¡Ã­",
      "next-week": "tÃ½Å¾deÅ",
      "next-month": "mesiac",
      "next-year": "rok",
      "less-than": "Rozsah dÃ¡tumu by nemal byÅ¥ vÃ¤ÄÅ¡Ã­ ako %d dnÃ­",
      "more-than": "Rozsah dÃ¡tumu by nemal byÅ¥ menÅ¡Ã­ ako %d dnÃ­",
      "default-more": "ProsÃ­m zvoÄ¾te rozsah dlhÅ¡Ã­ ako %d dnÃ­",
      "default-single": "ProsÃ­m zvoÄ¾te dÃ¡tum",
      "default-less": "ProsÃ­m zvoÄ¾te rozsah menÅ¡Ã­ ako %d dnÃ­",
      "default-range": "ProsÃ­m zvoÄ¾te rozsah medzi %d a %d dÅami",
      "default-default": "ProsÃ­m zvoÄ¾te rozsah",
      "time": "Äas",
      "hour": "Hodina",
      "minute": "MinÃºta"
    },
    "tr": {
      "selected": "SeÃ§ildi:",
      "day": " gÃ¼n",
      "days": " gÃ¼n",
      "apply": "Uygula",
      "week-1": "Pzt",
      "week-2": "Sal",
      "week-3": "Ãar",
      "week-4": "Per",
      "week-5": "Cuma",
      "week-6": "Cmt",
      "week-7": "Paz",
      "week-number": "H",
      "month-name": ["Ocak", "Åubat", "Mart", "Nisan", "MayÄ±s", "Haziran", "Temmuz", "AÄustos", "EylÃ¼l", "Ekim", "KasÄ±m", "AralÄ±k"],
      "shortcuts": "KÄ±sayollar",
      "custom-values": "Ãzel DeÄerler",
      "past": "GeÃ§miÅ",
      "following": "Sonraki",
      "previous": "&nbsp;&nbsp;&nbsp;",
      "prev-week": "Ãnceki Hafta",
      "prev-month": "Ãnceki Ay",
      "prev-year": "ÃncÉki YÄ±l",
      "next": "&nbsp;&nbsp;&nbsp;",
      "next-week": "Sonraki Hafta",
      "next-month": "Sonraki Ay",
      "next-year": "Sonraki YÄ±l",
      "less-than": "Tarih aralÄ±ÄÄ± %d gÃ¼nden Ã§ok olmamalÄ±dÄ±r",
      "more-than": "Tarih aralÄ±ÄÄ± %d gÃ¼nden az olmamalÄ±dÄ±r",
      "default-more": "%d gÃ¼nden Ã§ok bir tarih seÃ§in",
      "default-single": "Tarih seÃ§in",
      "default-less": "%d gÃ¼nden az bir tarih seÃ§in",
      "default-range": "%d ve %d gÃ¼n aralÄ±ÄÄ±nda tarihler seÃ§in",
      "default-default": "Tarih aralÄ±ÄÄ± seÃ§in",
      "time": "Zaman",
      "hour": "Saat",
      "minute": "Dakika"
    }
  };

  $.fn.dateRangePicker = function (opt) {
    if (!opt) opt = {};
    opt = $.extend(true, {
      autoClose: true,
      format: 'DD/MM/YY',
      separator: ' Ã  ',
      language: 'pt',
      startOfWeek: 'monday',
      // or sunday
      getValue: function getValue() {
        return $(this).val();
      },
      setValue: function setValue(s) {
        if (!$(this).is(':disabled') && s != $(this).val()) {
          $(this).val(s);
        }
      },
      startDate: false,
      endDate: moment().endOf('day').toDate(),
      time: {
        enabled: false
      },
      minDays: 0,
      maxDays: 0,
      showShortcuts: true,
      shortcuts: {//'prev-days': [1,3,5,7],
        // 'next-days': [3,5,7],
        //'prev' : ['week','month','year'],
        // 'next' : ['week','month','year']
      },
      customShortcuts: [{
        name: 'Hoje',
        dates: function dates() {
          return [moment().startOf('day').toDate(), new Date()];
        }
      }, {
        name: '7 dias',
        dates: function dates() {
          return [moment().subtract(6, 'days').toDate(), new Date()];
        }
      }, {
        name: '15 dias',
        dates: function dates() {
          return [moment().subtract(14, 'days').toDate(), new Date()];
        }
      }, {
        name: 'Ãltimo mÃªs',
        dates: function dates() {
          return [moment().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        name: 'Desde o inÃ­cio',
        dates: function dates() {
          return [moment('2018-01-01').toDate(), new Date()];
        }
      }],
      inline: false,
      container: 'body',
      alwaysOpen: false,
      singleDate: false,
      lookBehind: false,
      batchMode: false,
      duration: 200,
      stickyMonths: false,
      dayDivAttrs: [],
      dayTdAttrs: [],
      selectForward: false,
      selectBackward: false,
      applyBtnClass: '',
      singleMonth: true,
      hoveringTooltip: false,
      // hoveringTooltip: function (days, startTime, hoveringTime) {
      //     return days > 1 ? days + ' ' + translate('days') : '';
      // },
      showTopbar: false,
      swapTime: false,
      showWeekNumbers: false,
      getWeekNumber: function getWeekNumber(date) //date will be the first day of a week
      {
        return moment(date).format('w');
      },
      customOpenAnimation: function customOpenAnimation(cb) {
        $(this).fadeIn(300, cb);
      },
      customCloseAnimation: function customCloseAnimation(cb) {
        $(this).fadeOut(300, cb);
      },
      customArrowPrevSymbol: null,
      customArrowNextSymbol: null,
      monthSelect: false,
      yearSelect: false
    }, opt);
    opt.start = false;
    opt.end = false;
    opt.startWeek = false; //detect a touch device

    opt.isTouchDevice = 'ontouchstart' in window || navigator.msMaxTouchPoints; //if it is a touch device, hide hovering tooltip

    if (opt.isTouchDevice) opt.hoveringTooltip = false; //show one month on mobile devices

    if (opt.singleMonth == 'auto') opt.singleMonth = $(window).width() < 480;
    if (opt.singleMonth) opt.stickyMonths = false;
    if (!opt.showTopbar) opt.autoClose = true;
    if (opt.startDate && typeof opt.startDate == 'string') opt.startDate = moment(opt.startDate, opt.format).toDate();
    if (opt.endDate && typeof opt.endDate == 'string') opt.endDate = moment(opt.endDate, opt.format).toDate();

    if (opt.yearSelect && typeof opt.yearSelect === 'boolean') {
      opt.yearSelect = function (current) {
        return [current - 5, current + 5];
      };
    }

    var languages = getLanguages();
    var box;
    var initiated = false;
    var self = this;
    var selfDom = $(self).get(0);
    var domChangeTimer;
    $(this).off('.datepicker').on('click.datepicker', function (evt) {
      var isOpen = box.is(':visible');
      if (!isOpen) open(opt.duration);
    }).on('change.datepicker', function (evt) {
      checkAndSetDefaultValue();
    }).on('keyup.datepicker', function () {
      try {
        clearTimeout(domChangeTimer);
      } catch (e) {}

      domChangeTimer = setTimeout(function () {
        checkAndSetDefaultValue();
      }, 2000);
    });
    init_datepicker.call(this);

    if (opt.alwaysOpen) {
      open(0);
    } // expose some api


    $(this).data('dateRangePicker', {
      setStart: function setStart(d1) {
        if (typeof d1 == 'string') {
          d1 = moment(d1, opt.format).toDate();
        }

        opt.end = false;
        setSingleDate(d1);
        return this;
      },
      setEnd: function setEnd(d2, silent) {
        var start = new Date();
        start.setTime(opt.start);

        if (typeof d2 == 'string') {
          d2 = moment(d2, opt.format).toDate();
        }

        _setDateRange(start, d2, silent);

        return this;
      },
      setDateRange: function setDateRange(d1, d2, silent) {
        if (typeof d1 == 'string' && typeof d2 == 'string') {
          d1 = moment(d1, opt.format).toDate();
          d2 = moment(d2, opt.format).toDate();
        }

        _setDateRange(d1, d2, silent);
      },
      clear: clearSelection,
      close: closeDatePicker,
      open: open,
      redraw: redrawDatePicker,
      getDatePicker: getDatePicker,
      resetMonthsView: resetMonthsView,
      destroy: function destroy() {
        $(self).off('.datepicker');
        $(self).data('dateRangePicker', '');
        $(self).data('date-picker-opened', null);
        box.remove();
        $(window).off('resize.datepicker', calcPosition);
        $(document).off('click.datepicker', outsideClickClose);
      }
    });
    $(window).on('resize.datepicker', calcPosition);
    return this;

    function IsOwnDatePickerClicked(evt, selfObj) {
      return selfObj.contains(evt.target) || evt.target == selfObj || selfObj.childNodes != undefined && $.inArray(evt.target, selfObj.childNodes) >= 0;
    }

    function init_datepicker() {
      var self = this;

      if ($(this).data('date-picker-opened')) {
        closeDatePicker();
        return;
      }

      $(this).data('date-picker-opened', true);
      box = createDom().hide();
      box.append('<div class="date-range-length-tip"></div>');
      $(opt.container).append(box);

      if (!opt.inline) {
        calcPosition();
      } else {
        box.addClass('inline-wrapper');
      }

      if (opt.alwaysOpen) {
        box.find('.apply-btn').hide();
      }

      var defaultTime = getDefaultTime();
      resetMonthsView(defaultTime);

      if (opt.time.enabled) {
        if (opt.startDate && opt.endDate || opt.start && opt.end) {
          showTime(moment(opt.start || opt.startDate).toDate(), 'time1');
          showTime(moment(opt.end || opt.endDate).toDate(), 'time2');
        } else {
          var defaultEndTime = opt.defaultEndTime ? opt.defaultEndTime : defaultTime;
          showTime(defaultTime, 'time1');
          showTime(defaultEndTime, 'time2');
        }
      } //showSelectedInfo();


      var defaultTopText = '';
      if (opt.singleDate) defaultTopText = translate('default-single');else if (opt.minDays && opt.maxDays) defaultTopText = translate('default-range');else if (opt.minDays) defaultTopText = translate('default-more');else if (opt.maxDays) defaultTopText = translate('default-less');else defaultTopText = translate('default-default');
      box.find('.default-top').html(defaultTopText.replace(/\%d/, opt.minDays).replace(/\%d/, opt.maxDays));

      if (opt.singleMonth) {
        box.addClass('single-month');
      } else {
        box.addClass('two-months');
      }

      setTimeout(function () {
        updateCalendarWidth();
        initiated = true;
      }, 0);
      box.on('click', function (evt) {
        evt.stopPropagation();
      }); //if user click other place of the webpage, close date range picker window

      $(document).on('click.datepicker', outsideClickClose);
      box.find('.next').on('click', function () {
        if (!opt.stickyMonths) gotoNextMonth(this);else gotoNextMonth_stickily(this);
      });

      function gotoNextMonth(self) {
        var isMonth2 = $(self).parents('table').hasClass('month2');
        var month = isMonth2 ? opt.month2 : opt.month1;
        month = nextMonth(month);
        if (!opt.singleMonth && !opt.singleDate && !isMonth2 && compare_month(month, opt.month2) >= 0 || isMonthOutOfBounds(month)) return;
        showMonth(month, isMonth2 ? 'month2' : 'month1');
        showGap();
      }

      function gotoNextMonth_stickily(self) {
        var nextMonth1 = nextMonth(opt.month1);
        var nextMonth2 = nextMonth(opt.month2);
        if (isMonthOutOfBounds(nextMonth2)) return;
        if (!opt.singleDate && compare_month(nextMonth1, nextMonth2) >= 0) return;
        showMonth(nextMonth1, 'month1');
        showMonth(nextMonth2, 'month2');
        showSelectedDays();
      }

      box.find('.prev').on('click', function () {
        if (!opt.stickyMonths) gotoPrevMonth(this);else gotoPrevMonth_stickily(this);
      });

      function gotoPrevMonth(self) {
        var isMonth2 = $(self).parents('table').hasClass('month2');
        var month = isMonth2 ? opt.month2 : opt.month1;
        month = prevMonth(month);
        if (isMonth2 && compare_month(month, opt.month1) <= 0 || isMonthOutOfBounds(month)) return;
        showMonth(month, isMonth2 ? 'month2' : 'month1');
        showGap();
      }

      function gotoPrevMonth_stickily(self) {
        var prevMonth1 = prevMonth(opt.month1);
        var prevMonth2 = prevMonth(opt.month2);
        if (isMonthOutOfBounds(prevMonth1)) return;
        if (!opt.singleDate && compare_month(prevMonth2, prevMonth1) <= 0) return;
        showMonth(prevMonth2, 'month2');
        showMonth(prevMonth1, 'month1');
        showSelectedDays();
      }

      box.attr('unselectable', 'on').css('user-select', 'none').on('selectstart', function (e) {
        e.preventDefault();
        return false;
      });
      box.find('.apply-btn').on('click', function () {
        closeDatePicker();
        var dateRange = getDateString(new Date(opt.start)) + opt.separator + getDateString(new Date(opt.end));
        $(self).trigger('datepicker-apply', {
          'value': dateRange,
          'date1': new Date(opt.start),
          'date2': new Date(opt.end)
        });
      });
      box.find('[custom]').on('click', function () {
        var valueName = $(this).attr('custom');
        opt.start = false;
        opt.end = false;
        box.find('.day.checked').removeClass('checked');
        opt.setValue.call(selfDom, valueName);
        checkSelectionValid();
        showSelectedInfo(true);
        showSelectedDays();
        if (opt.autoClose) closeDatePicker();
      });
      box.find('[shortcut]').on('click', function () {
        var shortcut = $(this).attr('shortcut');
        var end = new Date(),
            start = false;
        var dir;

        if (shortcut.indexOf('day') != -1) {
          var day = parseInt(shortcut.split(',', 2)[1], 10);
          start = new Date(new Date().getTime() + 86400000 * day);
          end = new Date(end.getTime() + 86400000 * (day > 0 ? 1 : -1));
        } else if (shortcut.indexOf('week') != -1) {
          dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;
          var stopDay;
          if (dir == 1) stopDay = opt.startOfWeek == 'monday' ? 1 : 0;else stopDay = opt.startOfWeek == 'monday' ? 0 : 6;
          end = new Date(end.getTime() - 86400000);

          while (end.getDay() != stopDay) {
            end = new Date(end.getTime() + dir * 86400000);
          }

          start = new Date(end.getTime() + dir * 86400000 * 6);
        } else if (shortcut.indexOf('month') != -1) {
          dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;
          if (dir == 1) start = nextMonth(end);else start = prevMonth(end);
          start.setDate(1);
          end = nextMonth(start);
          end.setDate(1);
          end = new Date(end.getTime() - 86400000);
        } else if (shortcut.indexOf('year') != -1) {
          dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;
          start = new Date();
          start.setFullYear(end.getFullYear() + dir);
          start.setMonth(0);
          start.setDate(1);
          end.setFullYear(end.getFullYear() + dir);
          end.setMonth(11);
          end.setDate(31);
        } else if (shortcut == 'custom') {
          var name = $(this).html();

          if (opt.customShortcuts && opt.customShortcuts.length > 0) {
            for (var i = 0; i < opt.customShortcuts.length; i++) {
              var sh = opt.customShortcuts[i];

              if (sh.name == name) {
                var data = []; // try
                // {

                data = sh['dates'].call(); //}catch(e){}

                if (data && data.length == 2) {
                  start = data[0];
                  end = data[1];
                } // if only one date is specified then just move calendars there
                // move calendars to show this date's month and next months


                if (data && data.length == 1) {
                  var movetodate = data[0];
                  showMonth(movetodate, 'month1');
                  showMonth(nextMonth(movetodate), 'month2');
                  showGap();
                }

                break;
              }
            }
          }

          $('.custom-shortcut a').removeClass('active');
          $(this).addClass('active');
        }

        if (start && end) {
          _setDateRange(start, end);

          checkSelectionValid();
        }
      });
      box.find('.time1 input[type=range]').on('change touchmove', function (e) {
        var target = e.target,
            hour = target.name == 'hour' ? $(target).val().replace(/^(\d{1})$/, '0$1') : undefined,
            min = target.name == 'minute' ? $(target).val().replace(/^(\d{1})$/, '0$1') : undefined;
        setTime('time1', hour, min);
      });
      box.find('.time2 input[type=range]').on('change touchmove', function (e) {
        var target = e.target,
            hour = target.name == 'hour' ? $(target).val().replace(/^(\d{1})$/, '0$1') : undefined,
            min = target.name == 'minute' ? $(target).val().replace(/^(\d{1})$/, '0$1') : undefined;
        setTime('time2', hour, min);
      });
    }

    function calcPosition() {
      if (!opt.inline) {
        var offset = $(self).offset();

        if ($(opt.container).css('position') == 'relative') {
          var containerOffset = $(opt.container).offset();
          var leftIndent = Math.max(0, offset.left + box.outerWidth() - $('body').width() + 16);
          var left = offset.left - containerOffset.left - leftIndent;
          box.css({
            top: offset.top - containerOffset.top + $(opt.container).scrollTop() + $(self).outerHeight() + 4,
            left: left < 0 ? 5 : left
          });
        } else {
          if (offset.left < 460) //left to right
            {
              box.css({
                top: offset.top + $(self).outerHeight() + parseInt($('body').css('border-top') || 0, 10),
                left: offset.left
              });
            } else {
            box.css({
              top: offset.top + $(self).outerHeight() + parseInt($('body').css('border-top') || 0, 10),
              left: offset.left + $(self).width() - box.width() - 16
            });
          }
        }
      }
    } // Return the date picker wrapper element


    function getDatePicker() {
      return box;
    }

    function open(animationTime) {
      redrawDatePicker();
      checkAndSetDefaultValue();

      if (opt.customOpenAnimation) {
        opt.customOpenAnimation.call(box.get(0), function () {
          $(self).trigger('datepicker-opened', {
            relatedTarget: box
          });
        });
      } else {
        box.slideDown(animationTime, function () {
          $(self).trigger('datepicker-opened', {
            relatedTarget: box
          });
        });
      }

      $(self).trigger('datepicker-open', {
        relatedTarget: box
      });
      showGap();
      updateCalendarWidth();
      calcPosition();
    }

    function checkAndSetDefaultValue() {
      var __default_string = opt.getValue.call(selfDom);

      var defaults = __default_string ? __default_string.split(opt.separator) : '';

      if (defaults && (defaults.length == 1 && opt.singleDate || defaults.length >= 2)) {
        var ___format = opt.format;

        if (___format.match(/Do/)) {
          ___format = ___format.replace(/Do/, 'D');
          defaults[0] = defaults[0].replace(/(\d+)(th|nd|st)/, '$1');

          if (defaults.length >= 2) {
            defaults[1] = defaults[1].replace(/(\d+)(th|nd|st)/, '$1');
          }
        } // set initiated  to avoid triggerring datepicker-change event


        initiated = false;

        if (defaults.length >= 2) {
          _setDateRange(getValidValue(defaults[0], ___format, moment.locale(opt.language)), getValidValue(defaults[1], ___format, moment.locale(opt.language)));
        } else if (defaults.length == 1 && opt.singleDate) {
          setSingleDate(getValidValue(defaults[0], ___format, moment.locale(opt.language)));
        }

        initiated = true;
      }
    }

    function getValidValue(date, format, locale) {
      if (moment(date, format, locale).isValid()) {
        return moment(date, format, locale).toDate();
      } else {
        return moment().toDate();
      }
    }

    function updateCalendarWidth() {
      var gapMargin = box.find('.gap').css('margin-left');
      if (gapMargin) gapMargin = parseInt(gapMargin);
      var w1 = box.find('.month1').width();
      var w2 = (box.find('.gap').width() || 0) + (gapMargin ? gapMargin * 2 : 0);
      var w3 = box.find('.month2').width() || 0;
      box.find('.month-wrapper').width(w1 + w2 + w3);
      if (opt.singleMonth) box.find('.footer').width(w1 + w2 + w3);
    }

    function renderTime(name, date) {
      box.find('.' + name + ' input[type=range].hour-range').val(moment(date).hours());
      box.find('.' + name + ' input[type=range].minute-range').val(moment(date).minutes());
      setTime(name, moment(date).format('HH'), moment(date).format('mm'));
    }

    function changeTime(name, date) {
      opt[name] = parseInt(moment(parseInt(date)).hour(moment(opt[name + 'Time']).format('HH'), 'h').minute(moment(opt[name + 'Time']).format('mm'), 'm').valueOf());
    }

    function swapTime() {
      renderTime('time1', opt.start);
      renderTime('time2', opt.end);
    }

    function setTime(name, hour, minute) {
      hour && box.find('.' + name + ' .hour-val').text(hour);
      minute && box.find('.' + name + ' .minute-val').text(minute);

      switch (name) {
        case 'time1':
          if (opt.start) {
            setRange('start', moment(opt.start));
          }

          setRange('startTime', moment(opt.startTime || moment().valueOf()));
          break;

        case 'time2':
          if (opt.end) {
            setRange('end', moment(opt.end));
          }

          setRange('endTime', moment(opt.endTime || moment().valueOf()));
          break;
      }

      function setRange(name, timePoint) {
        var h = timePoint.format('HH'),
            m = timePoint.format('mm');
        opt[name] = timePoint.hour(hour || h, 'h').minute(minute || m, 'm').valueOf();
      }

      checkSelectionValid();
      showSelectedInfo();
      showSelectedDays();
    }

    function clearSelection() {
      opt.start = false;
      opt.end = false;
      box.find('.day.checked').removeClass('checked');
      box.find('.day.last-date-selected').removeClass('last-date-selected');
      box.find('.day.first-date-selected').removeClass('first-date-selected');
      box.find('.custom-shortcut a').removeClass('active');
      opt.setValue.call(selfDom, '');
      checkSelectionValid();
      showSelectedInfo();
      showSelectedDays();
    }

    function handleStart(time) {
      var r = time;

      if (opt.batchMode === 'week-range') {
        if (opt.startOfWeek === 'monday') {
          r = moment(parseInt(time)).startOf('isoweek').valueOf();
        } else {
          r = moment(parseInt(time)).startOf('week').valueOf();
        }
      } else if (opt.batchMode === 'month-range') {
        r = moment(parseInt(time)).startOf('month').valueOf();
      }

      return r;
    }

    function handleEnd(time) {
      var r = time;

      if (opt.batchMode === 'week-range') {
        if (opt.startOfWeek === 'monday') {
          r = moment(parseInt(time)).endOf('isoweek').valueOf();
        } else {
          r = moment(parseInt(time)).endOf('week').valueOf();
        }
      } else if (opt.batchMode === 'month-range') {
        r = moment(parseInt(time)).endOf('month').valueOf();
      }

      return r;
    }

    function dayClicked(day) {
      if (day.hasClass('invalid')) return;
      var time = day.attr('time');
      day.addClass('checked');

      if (opt.singleDate) {
        opt.start = time;
        opt.end = false;
      } else if (opt.batchMode === 'week') {
        if (opt.startOfWeek === 'monday') {
          opt.start = moment(parseInt(time)).startOf('isoweek').valueOf();
          opt.end = moment(parseInt(time)).endOf('isoweek').valueOf();
        } else {
          opt.end = moment(parseInt(time)).endOf('week').valueOf();
          opt.start = moment(parseInt(time)).startOf('week').valueOf();
        }
      } else if (opt.batchMode === 'workweek') {
        opt.start = moment(parseInt(time)).day(1).valueOf();
        opt.end = moment(parseInt(time)).day(5).valueOf();
      } else if (opt.batchMode === 'weekend') {
        opt.start = moment(parseInt(time)).day(6).valueOf();
        opt.end = moment(parseInt(time)).day(7).valueOf();
      } else if (opt.batchMode === 'month') {
        opt.start = moment(parseInt(time)).startOf('month').valueOf();
        opt.end = moment(parseInt(time)).endOf('month').valueOf();
      } else if (opt.start && opt.end || !opt.start && !opt.end) {
        opt.start = handleStart(time);
        opt.end = false;
      } else if (opt.start) {
        opt.end = handleEnd(time);

        if (opt.time.enabled) {
          changeTime('end', opt.end);
        }
      } //Update time in case it is enabled and timestamps are available


      if (opt.time.enabled) {
        if (opt.start) {
          changeTime('start', opt.start);
        }

        if (opt.end) {
          changeTime('end', opt.end);
        }
      } //In case the start is after the end, swap the timestamps


      if (!opt.singleDate && opt.start && opt.end && opt.start > opt.end) {
        var tmp = opt.end;
        opt.end = handleEnd(opt.start);
        opt.start = handleStart(tmp);

        if (opt.time.enabled && opt.swapTime) {
          swapTime();
        }
      }

      opt.start = parseInt(opt.start);
      opt.end = parseInt(opt.end);
      clearHovering();

      if (opt.start && !opt.end) {
        $(self).trigger('datepicker-first-date-selected', {
          'date1': new Date(opt.start)
        });
        dayHovering(day);
      }

      updateSelectableRange(time);
      checkSelectionValid();
      showSelectedInfo();
      showSelectedDays();
      autoclose();
      $('.custom-shortcut a').removeClass('active');
    }

    function weekNumberClicked(weekNumberDom) {
      var thisTime = parseInt(weekNumberDom.attr('data-start-time'), 10);
      var date1, date2;

      if (!opt.startWeek) {
        opt.startWeek = thisTime;
        weekNumberDom.addClass('week-number-selected');
        date1 = new Date(thisTime);
        opt.start = moment(date1).day(opt.startOfWeek == 'monday' ? 1 : 0).valueOf();
        opt.end = moment(date1).day(opt.startOfWeek == 'monday' ? 7 : 6).valueOf();
      } else {
        box.find('.week-number-selected').removeClass('week-number-selected');
        date1 = new Date(thisTime < opt.startWeek ? thisTime : opt.startWeek);
        date2 = new Date(thisTime < opt.startWeek ? opt.startWeek : thisTime);
        opt.startWeek = false;
        opt.start = moment(date1).day(opt.startOfWeek == 'monday' ? 1 : 0).valueOf();
        opt.end = moment(date2).day(opt.startOfWeek == 'monday' ? 7 : 6).valueOf();
      }

      updateSelectableRange();
      checkSelectionValid();
      showSelectedInfo();
      showSelectedDays();
      autoclose();
    }

    function isValidTime(time) {
      time = parseInt(time, 10);
      if (opt.startDate && compare_day(time, opt.startDate) < 0) return false;
      if (opt.endDate && compare_day(time, opt.endDate) > 0) return false;

      if (opt.start && !opt.end && !opt.singleDate) {
        //check maxDays and minDays setting
        if (opt.maxDays > 0 && countDays(time, opt.start) > opt.maxDays) return false;
        if (opt.minDays > 0 && countDays(time, opt.start) < opt.minDays) return false; //check selectForward and selectBackward

        if (opt.selectForward && time < opt.start) return false;
        if (opt.selectBackward && time > opt.start) return false; //check disabled days

        if (opt.beforeShowDay && typeof opt.beforeShowDay == 'function') {
          var valid = true;
          var timeTmp = time;

          while (countDays(timeTmp, opt.start) > 1) {
            var arr = opt.beforeShowDay(new Date(timeTmp));

            if (!arr[0]) {
              valid = false;
              break;
            }

            if (Math.abs(timeTmp - opt.start) < 86400000) break;
            if (timeTmp > opt.start) timeTmp -= 86400000;
            if (timeTmp < opt.start) timeTmp += 86400000;
          }

          if (!valid) return false;
        }
      }

      return true;
    }

    function updateSelectableRange() {
      box.find('.day.invalid.tmp').removeClass('tmp invalid').addClass('valid');

      if (opt.start && !opt.end) {
        box.find('.day.toMonth.valid').each(function () {
          var time = parseInt($(this).attr('time'), 10);
          if (!isValidTime(time)) $(this).addClass('invalid tmp').removeClass('valid');else $(this).addClass('valid tmp').removeClass('invalid');
        });
      }

      return true;
    }

    function dayHovering(day) {
      var hoverTime = parseInt(day.attr('time'));
      var tooltip = '';

      if (day.hasClass('has-tooltip') && day.attr('data-tooltip')) {
        tooltip = '<span class="tooltip-content">' + day.attr('data-tooltip') + '</span>';
      } else if (!day.hasClass('invalid')) {
        if (opt.singleDate) {
          box.find('.day.hovering').removeClass('hovering');
          day.addClass('hovering');
        } else {
          box.find('.day').each(function () {
            var time = parseInt($(this).attr('time')),
                start = opt.start,
                end = opt.end;

            if (time == hoverTime) {
              $(this).addClass('hovering');
            } else {
              $(this).removeClass('hovering');
            }

            if (opt.start && !opt.end && (opt.start < time && hoverTime >= time || opt.start > time && hoverTime <= time)) {
              $(this).addClass('hovering');
            } else {
              $(this).removeClass('hovering');
            }
          });

          if (opt.start && !opt.end) {
            var days = countDays(hoverTime, opt.start);

            if (opt.hoveringTooltip) {
              if (typeof opt.hoveringTooltip == 'function') {
                tooltip = opt.hoveringTooltip(days, opt.start, hoverTime);
              } else if (opt.hoveringTooltip === true && days > 1) {
                tooltip = days + ' ' + translate('days');
              }
            }
          }
        }
      }

      if (tooltip) {
        var posDay = day.offset();
        var posBox = box.offset();

        var _left = posDay.left - posBox.left;

        var _top = posDay.top - posBox.top;

        _left += day.width() / 2;
        var $tip = box.find('.date-range-length-tip');
        var w = $tip.css({
          'visibility': 'hidden',
          'display': 'none'
        }).html(tooltip).width();
        var h = $tip.height();
        _left -= w / 2;
        _top -= h;
        setTimeout(function () {
          $tip.css({
            left: _left,
            top: _top,
            display: 'block',
            'visibility': 'visible'
          });
        }, 10);
      } else {
        box.find('.date-range-length-tip').hide();
      }
    }

    function clearHovering() {
      box.find('.day.hovering').removeClass('hovering');
      box.find('.date-range-length-tip').hide();
    }

    function dateChanged(date) {
      var value = date.val();
      var name = date.attr('name');
      var type = date.parents('table').hasClass('month1') ? 'month1' : 'month2';
      var oppositeType = type === 'month1' ? 'month2' : 'month1';
      var startDate = opt.startDate ? moment(opt.startDate) : false;
      var endDate = opt.endDate ? moment(opt.endDate) : false;
      var newDate = moment(opt[type])[name](value);

      if (startDate && newDate.isSameOrBefore(startDate)) {
        newDate = startDate.add(type === 'month2' ? 1 : 0, 'month');
      }

      if (endDate && newDate.isSameOrAfter(endDate)) {
        newDate = endDate.add(!opt.singleMonth && type === 'month1' ? -1 : 0, 'month');
      }

      showMonth(newDate, type);

      if (type === 'month1') {
        if (opt.stickyMonths || moment(newDate).isSameOrAfter(opt[oppositeType], 'month')) {
          showMonth(moment(newDate).add(1, 'month'), oppositeType);
        }
      } else {
        if (opt.stickyMonths || moment(newDate).isSameOrBefore(opt[oppositeType], 'month')) {
          showMonth(moment(newDate).add(-1, 'month'), oppositeType);
        }
      }

      showGap();
    }

    function autoclose() {
      if (opt.singleDate === true) {
        if (initiated && opt.start) {
          if (opt.autoClose) closeDatePicker();
        }
      } else {
        if (initiated && opt.start && opt.end) {
          if (opt.autoClose) closeDatePicker();
        }
      }
    }

    function checkSelectionValid() {
      var days = Math.ceil((opt.end - opt.start) / 86400000) + 1;

      if (opt.singleDate) {
        // Validate if only start is there
        if (opt.start && !opt.end) box.find('.drp_top-bar').removeClass('error').addClass('normal');else box.find('.drp_top-bar').removeClass('error').removeClass('normal');
      } else if (opt.maxDays && days > opt.maxDays) {
        opt.start = false;
        opt.end = false;
        box.find('.day').removeClass('checked');
        box.find('.drp_top-bar').removeClass('normal').addClass('error').find('.error-top').html(translate('less-than').replace('%d', opt.maxDays));
      } else if (opt.minDays && days < opt.minDays) {
        opt.start = false;
        opt.end = false;
        box.find('.day').removeClass('checked');
        box.find('.drp_top-bar').removeClass('normal').addClass('error').find('.error-top').html(translate('more-than').replace('%d', opt.minDays));
      } else {
        if (opt.start || opt.end) box.find('.drp_top-bar').removeClass('error').addClass('normal');else box.find('.drp_top-bar').removeClass('error').removeClass('normal');
      }

      if (opt.singleDate && opt.start && !opt.end || !opt.singleDate && opt.start && opt.end) {
        box.find('.apply-btn').removeClass('disabled');
      } else {
        box.find('.apply-btn').addClass('disabled');
      }

      if (opt.batchMode) {
        if (opt.start && opt.startDate && compare_day(opt.start, opt.startDate) < 0 || opt.end && opt.endDate && compare_day(opt.end, opt.endDate) > 0) {
          opt.start = false;
          opt.end = false;
          box.find('.day').removeClass('checked');
        }
      }
    }

    function showSelectedInfo(forceValid, silent) {
      box.find('.start-day').html('...');
      box.find('.end-day').html('...');
      box.find('.selected-days').hide();

      if (opt.start) {
        box.find('.start-day').html(getDateString(new Date(parseInt(opt.start))));
      }

      if (opt.end) {
        box.find('.end-day').html(getDateString(new Date(parseInt(opt.end))));
      }

      var dateRange;

      if (opt.start && opt.singleDate) {
        box.find('.apply-btn').removeClass('disabled');
        dateRange = getDateString(new Date(opt.start));
        opt.setValue.call(selfDom, dateRange, getDateString(new Date(opt.start)), getDateString(new Date(opt.end)));

        if (initiated && !silent) {
          $(self).trigger('datepicker-change', {
            'value': dateRange,
            'date1': new Date(opt.start)
          });
        }
      } else if (opt.start && opt.end) {
        box.find('.selected-days').show().find('.selected-days-num').html(countDays(opt.end, opt.start));
        box.find('.apply-btn').removeClass('disabled');
        dateRange = getDateString(new Date(opt.start)) + opt.separator + getDateString(new Date(opt.end));
        opt.setValue.call(selfDom, dateRange, getDateString(new Date(opt.start)), getDateString(new Date(opt.end)));

        if (initiated && !silent) {
          $(self).trigger('datepicker-change', {
            'value': dateRange,
            'date1': new Date(opt.start),
            'date2': new Date(opt.end)
          });
        }
      } else if (forceValid) {
        box.find('.apply-btn').removeClass('disabled');
      } else {
        box.find('.apply-btn').addClass('disabled');
      }
    }

    function countDays(start, end) {
      return Math.abs(moment(start).diff(moment(end), 'd')) + 1;
    }

    function _setDateRange(date1, date2, silent) {
      if (date1.getTime() > date2.getTime()) {
        var tmp = date2;
        date2 = date1;
        date1 = tmp;
        tmp = null;
      }

      var valid = true;
      if (opt.startDate && compare_day(date1, opt.startDate) < 0) valid = false;
      if (opt.endDate && compare_day(date2, opt.endDate) > 0) valid = false;

      if (!valid) {
        showMonth(opt.startDate, 'month1');
        showMonth(nextMonth(opt.startDate), 'month2');
        showGap();
        return;
      }

      opt.start = date1.getTime();
      opt.end = date2.getTime();

      if (opt.time.enabled) {
        renderTime('time1', date1);
        renderTime('time2', date2);
      }

      if (opt.stickyMonths || compare_day(date1, date2) > 0 && compare_month(date1, date2) === 0) {
        if (opt.lookBehind) {
          date1 = prevMonth(date2);
        } else {
          date2 = nextMonth(date1);
        }
      }

      if (opt.stickyMonths && opt.endDate !== false && compare_month(date2, opt.endDate) > 0) {
        date1 = prevMonth(date1);
        date2 = prevMonth(date2);
      }

      if (!opt.stickyMonths) {
        if (compare_month(date1, date2) === 0) {
          if (opt.lookBehind) {
            date1 = prevMonth(date2);
          } else {
            date2 = nextMonth(date1);
          }
        }
      }

      showMonth(date1, 'month1');
      showMonth(date2, 'month2');
      showGap();
      checkSelectionValid();
      showSelectedInfo(false, silent);
      autoclose();
    }

    function setSingleDate(date1) {
      var valid = true;
      if (opt.startDate && compare_day(date1, opt.startDate) < 0) valid = false;
      if (opt.endDate && compare_day(date1, opt.endDate) > 0) valid = false;

      if (!valid) {
        showMonth(opt.startDate, 'month1');
        return;
      }

      opt.start = date1.getTime();

      if (opt.time.enabled) {
        renderTime('time1', date1);
      }

      showMonth(date1, 'month1');

      if (opt.singleMonth !== true) {
        var date2 = nextMonth(date1);
        showMonth(date2, 'month2');
      }

      showGap();
      showSelectedInfo();
      autoclose();
    }

    function showSelectedDays() {
      if (!opt.start && !opt.end) return;
      box.find('.day').each(function () {
        var time = parseInt($(this).attr('time')),
            start = opt.start,
            end = opt.end;

        if (opt.time.enabled) {
          time = moment(time).startOf('day').valueOf();
          start = moment(start || moment().valueOf()).startOf('day').valueOf();
          end = moment(end || moment().valueOf()).startOf('day').valueOf();
        }

        if (opt.start && opt.end && end >= time && start <= time || opt.start && !opt.end && moment(start).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD')) {
          $(this).addClass('checked');
        } else {
          $(this).removeClass('checked');
        } //add first-date-selected class name to the first date selected


        if (opt.start && moment(start).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD')) {
          $(this).addClass('first-date-selected');
        } else {
          $(this).removeClass('first-date-selected');
        } //add last-date-selected


        if (opt.end && moment(end).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD')) {
          $(this).addClass('last-date-selected');
        } else {
          $(this).removeClass('last-date-selected');
        }
      });
      box.find('.week-number').each(function () {
        if ($(this).attr('data-start-time') == opt.startWeek) {
          $(this).addClass('week-number-selected');
        }
      });
    }

    function showMonth(date, month) {
      date = moment(date).toDate();
      var monthElement = generateMonthElement(date, month);
      var yearElement = generateYearElement(date, month);
      box.find('.' + month + ' .month-name').html(monthElement + ' ' + yearElement);
      box.find('.' + month + ' tbody').html(createMonthHTML(date));
      opt[month] = date;
      updateSelectableRange();
      bindEvents();
    }

    function generateMonthElement(date, month) {
      date = moment(date);
      var currentMonth = date.get('month');
      var currentMonthName = nameMonth(currentMonth);
      var nonSelectableMonth = '<div class="month-element">' + currentMonthName + '</div>';

      if (!opt.monthSelect) {
        return nonSelectableMonth;
      }

      var startDate = opt.startDate ? moment(opt.startDate).add(!opt.singleMonth && month === 'month2' ? 1 : 0, 'month') : false;
      var endDate = opt.endDate ? moment(opt.endDate).add(!opt.singleMonth && month === 'month1' ? -1 : 0, 'month') : false;
      var minSelectableMonth = startDate && date.isSame(startDate, 'year') ? startDate.get('month') : 0;
      var maxSelectableMonth = endDate && date.isSame(endDate, 'year') ? endDate.get('month') : 11;
      var minVisibleMonth = Math.min(minSelectableMonth, currentMonth);
      var maxVisibleMonth = Math.max(maxSelectableMonth, currentMonth);

      if (minVisibleMonth === maxVisibleMonth) {
        return nonSelectableMonth;
      }

      var selectData = generateSelectData({
        minSelectable: minSelectableMonth,
        maxSelectable: maxSelectableMonth,
        minVisible: minVisibleMonth,
        maxVisible: maxVisibleMonth
      }, currentMonth, function (value) {
        return nameMonth(value);
      });
      return generateSelect('month', selectData);
    }

    function generateYearElement(date, month) {
      date = moment(date);
      var currentYear = date.get('year');
      var nonSelectableMonth = '<div class="month-element">' + currentYear + '</div>';

      if (!opt.yearSelect) {
        return nonSelectableMonth;
      }

      var isYearFunction = opt.yearSelect && typeof opt.yearSelect === 'function';
      var startDate = opt.startDate ? moment(opt.startDate).add(!opt.singleMonth && month === 'month2' ? 1 : 0, 'month') : false;
      var endDate = opt.endDate ? moment(opt.endDate).add(!opt.singleMonth && month === 'month1' ? -1 : 0, 'month') : false;
      var range = isYearFunction ? opt.yearSelect(currentYear) : opt.yearSelect.slice();
      var minSelectableYear = startDate ? Math.max(range[0], startDate.get('year')) : Math.min(range[0], currentYear);
      var maxSelectableYear = endDate ? Math.min(range[1], endDate.get('year')) : Math.max(range[1], currentYear);
      var minVisibleYear = Math.min(minSelectableYear, currentYear);
      var maxVisibleYear = Math.max(maxSelectableYear, currentYear);

      if (minVisibleYear === maxVisibleYear) {
        return nonSelectableMonth;
      }

      var selectData = generateSelectData({
        minSelectable: minSelectableYear,
        maxSelectable: maxSelectableYear,
        minVisible: minVisibleYear,
        maxVisible: maxVisibleYear
      }, currentYear);
      return generateSelect('year', selectData);
    }

    function generateSelectData(range, current, valueBeautifier) {
      var data = [];

      valueBeautifier = valueBeautifier || function (value) {
        return value;
      };

      for (var i = range.minVisible; i <= range.maxVisible; i++) {
        data.push({
          value: i,
          text: valueBeautifier(i),
          selected: i === current,
          disabled: i < range.minSelectable || i > range.maxSelectable
        });
      }

      return data;
    }

    function generateSelect(name, data) {
      var select = '<div class="select-wrapper"><select class="' + name + '" name="' + name + '">';
      var current;

      for (var i = 0, l = data.length; i < l; i++) {
        var item = data[i];
        select += '<option value="' + item.value + '"' + (item.selected ? ' selected' : '') + (item.disabled ? ' disabled' : '') + '>' + item.text + '</option>';

        if (item.selected) {
          current = item.text;
        }
      }

      select += '</select>' + current + '</div>';
      return select;
    }

    function bindEvents() {
      box.find('.day').off("click").on('click', function (evt) {
        dayClicked($(this));
      });
      box.find('.day').off("mouseenter").on('mouseenter', function (evt) {
        dayHovering($(this));
      });
      box.find('.day').off("mouseleave").on('mouseleave', function (evt) {
        box.find('.date-range-length-tip').hide();

        if (opt.singleDate) {
          clearHovering();
        }
      });
      box.find('.week-number').off("click").on('click', function (evt) {
        weekNumberClicked($(this));
      });
      box.find('.month').off("change").on('change', function (evt) {
        dateChanged($(this));
      });
      box.find('.year').off("change").on('change', function (evt) {
        dateChanged($(this));
      });
    }

    function showTime(date, name) {
      box.find('.' + name).append(getTimeHTML());
      renderTime(name, date);
    }

    function nameMonth(m) {
      return translate('month-name')[m];
    }

    function getDateString(d) {
      return moment(d).format(opt.format);
    }

    function showGap() {
      showSelectedDays();
      var m1 = parseInt(moment(opt.month1).format('YYYYMM'));
      var m2 = parseInt(moment(opt.month2).format('YYYYMM'));
      var p = Math.abs(m1 - m2);
      var shouldShow = p > 1 && p != 89;

      if (shouldShow) {
        box.addClass('has-gap').removeClass('no-gap').find('.gap').css('visibility', 'visible');
      } else {
        box.removeClass('has-gap').addClass('no-gap').find('.gap').css('visibility', 'hidden');
      }

      var h1 = box.find('table.month1').height();
      var h2 = box.find('table.month2').height();
      box.find('.gap').height(Math.max(h1, h2) + 10);
    }

    function closeDatePicker() {
      if (opt.alwaysOpen) return;

      var afterAnim = function afterAnim() {
        $(self).data('date-picker-opened', false);
        $(self).trigger('datepicker-closed', {
          relatedTarget: box
        });
      };

      if (opt.customCloseAnimation) {
        opt.customCloseAnimation.call(box.get(0), afterAnim);
      } else {
        $(box).slideUp(opt.duration, afterAnim);
      }

      $(self).trigger('datepicker-close', {
        relatedTarget: box
      });
    }

    function redrawDatePicker() {
      showMonth(opt.month1, 'month1');
      showMonth(opt.month2, 'month2');
    }

    function compare_month(m1, m2) {
      var p = parseInt(moment(m1).format('YYYYMM')) - parseInt(moment(m2).format('YYYYMM'));
      if (p > 0) return 1;
      if (p === 0) return 0;
      return -1;
    }

    function compare_day(m1, m2) {
      var p = parseInt(moment(m1).format('YYYYMMDD')) - parseInt(moment(m2).format('YYYYMMDD'));
      if (p > 0) return 1;
      if (p === 0) return 0;
      return -1;
    }

    function nextMonth(month) {
      return moment(month).add(1, 'months').toDate();
    }

    function prevMonth(month) {
      return moment(month).add(-1, 'months').toDate();
    }

    function getTimeHTML() {
      return '<div>' + '<span>' + translate('Time') + ': <span class="hour-val">00</span>:<span class="minute-val">00</span></span>' + '</div>' + '<div class="hour">' + '<label>' + translate('Hour') + ': <input type="range" class="hour-range" name="hour" min="0" max="23"></label>' + '</div>' + '<div class="minute">' + '<label>' + translate('Minute') + ': <input type="range" class="minute-range" name="minute" min="0" max="59"></label>' + '</div>';
    }

    function createDom() {
      var html = '<div class="date-picker-wrapper';
      if (opt.extraClass) html += ' ' + opt.extraClass + ' ';
      if (opt.singleDate) html += ' single-date ';
      if (!opt.showShortcuts) html += ' no-shortcuts ';
      if (!opt.showTopbar) html += ' no-topbar ';
      if (opt.customTopBar) html += ' custom-topbar ';
      html += '">';

      if (opt.showTopbar) {
        html += '<div class="drp_top-bar">';

        if (opt.customTopBar) {
          if (typeof opt.customTopBar == 'function') opt.customTopBar = opt.customTopBar();
          html += '<div class="custom-top">' + opt.customTopBar + '</div>';
        } else {
          html += '<div class="normal-top">' + '<span class="selection-top">' + translate('selected') + ' </span> <b class="start-day">...</b>';

          if (!opt.singleDate) {
            html += ' <span class="separator-day">' + opt.separator + '</span> <b class="end-day">...</b> <i class="selected-days">(<span class="selected-days-num">3</span> ' + translate('days') + ')</i>';
          }

          html += '</div>';
          html += '<div class="error-top">error</div>' + '<div class="default-top">default</div>';
        }

        html += '<input type="button" class="apply-btn disabled' + getApplyBtnClass() + '" value="' + translate('apply') + '" />';
        html += '</div>';
      }

      var _colspan = opt.showWeekNumbers ? 7 : 5;

      var arrowPrev = '<i class="material-icons">chevron_left</i>';
      if (opt.customArrowPrevSymbol) arrowPrev = opt.customArrowPrevSymbol;
      var arrowNext = '<i class="material-icons">chevron_right</i>';
      if (opt.customArrowNextSymbol) arrowNext = opt.customArrowNextSymbol;
      html += '<div class="month-wrapper">' + '   <table class="month1" cellspacing="0" border="0" cellpadding="0">' + '       <thead>' + '           <tr class="caption">' + '               <th colspan="' + _colspan + '" class="month-name">' + '               </th>' + '               <th class="arrows" colspan="' + (7 - _colspan) + '" >' + '                   <span class="prev">' + arrowPrev + '                   </span>' + (opt.singleDate || !opt.stickyMonths ? '<span class="next">' + arrowNext + '</span>' : '') + '               </th>' + '           </tr>' + '           <tr class="week-name">' + getWeekHead() + '       </thead>' + '       <tbody></tbody>' + '   </table>';

      if (hasMonth2()) {
        html += '<div class="gap">' + getGapHTML() + '</div>' + '<table class="month2" cellspacing="0" border="0" cellpadding="0">' + '   <thead>' + '   <tr class="caption">' + '       <th>' + (!opt.stickyMonths ? '<span class="prev">' + arrowPrev + '</span>' : '') + '       </th>' + '       <th colspan="' + _colspan + '" class="month-name">' + '       </th>' + '       <th>' + '           <span class="next">' + arrowNext + '</span>' + '       </th>' + '   </tr>' + '   <tr class="week-name">' + getWeekHead() + '   </thead>' + '   <tbody></tbody>' + '</table>';
      } //+'</div>'


      html += '<div class="dp-clearfix"></div>' + '<div class="time">' + '<div class="time1"></div>';

      if (!opt.singleDate) {
        html += '<div class="time2"></div>';
      }

      html += '</div>' + '<div class="dp-clearfix"></div>' + '</div>';
      html += '<div class="footer">';

      if (opt.showShortcuts) {
        //html += '<div class="shortcuts"><b>' + translate('shortcuts') + '</b>';
        var data = opt.shortcuts;

        if (data) {
          var name;

          if (data['prev-days'] && data['prev-days'].length > 0) {
            html += '&nbsp;<span class="prev-days">' + translate('past');

            for (var i = 0; i < data['prev-days'].length; i++) {
              name = data['prev-days'][i];
              name += data['prev-days'][i] > 1 ? translate('days') : translate('day');
              html += ' <a href="javascript:;" shortcut="day,-' + data['prev-days'][i] + '">' + name + '</a>';
            }

            html += '</span>';
          }

          if (data['next-days'] && data['next-days'].length > 0) {
            html += '&nbsp;<span class="next-days">' + translate('following');

            for (var i = 0; i < data['next-days'].length; i++) {
              name = data['next-days'][i];
              name += data['next-days'][i] > 1 ? translate('days') : translate('day');
              html += ' <a href="javascript:;" shortcut="day,' + data['next-days'][i] + '">' + name + '</a>';
            }

            html += '</span>';
          }

          if (data.prev && data.prev.length > 0) {
            html += '&nbsp;<span class="prev-buttons">' + translate('previous');

            for (var i = 0; i < data.prev.length; i++) {
              name = translate('prev-' + data.prev[i]);
              html += ' <a href="javascript:;" shortcut="prev,' + data.prev[i] + '">' + name + '</a>';
            }

            html += '</span>';
          }

          if (data.next && data.next.length > 0) {
            html += '&nbsp;<span class="next-buttons">' + translate('next');

            for (var i = 0; i < data.next.length; i++) {
              name = translate('next-' + data.next[i]);
              html += ' <a href="javascript:;" shortcut="next,' + data.next[i] + '">' + name + '</a>';
            }

            html += '</span>';
          }
        }

        if (opt.customShortcuts) {
          for (var i = 0; i < opt.customShortcuts.length; i++) {
            var sh = opt.customShortcuts[i];
            html += '<span class="custom-shortcut"><a href="javascript:;" shortcut="custom">' + sh.name + '</a></span>';
          }
        }

        html += '</div>';
      } // Add Custom Values Dom


      if (opt.showCustomValues) {
        html += '<div class="customValues"><b>' + (opt.customValueLabel || translate('custom-values')) + '</b>';

        if (opt.customValues) {
          for (var i = 0; i < opt.customValues.length; i++) {
            var val = opt.customValues[i];
            html += '&nbsp;<span class="custom-value"><a href="javascript:;" custom="' + val.value + '">' + val.name + '</a></span>';
          }
        }
      }

      html += '</div></div>';
      return $(html);
    }

    function getApplyBtnClass() {
      var klass = '';

      if (opt.autoClose === true) {
        klass += ' hide';
      }

      if (opt.applyBtnClass !== '') {
        klass += ' ' + opt.applyBtnClass;
      }

      return klass;
    }

    function getWeekHead() {
      var prepend = opt.showWeekNumbers ? '<th>' + translate('week-number') + '</th>' : '';

      if (opt.startOfWeek == 'monday') {
        return prepend + '<th>' + translate('week-1') + '</th>' + '<th>' + translate('week-2') + '</th>' + '<th>' + translate('week-3') + '</th>' + '<th>' + translate('week-4') + '</th>' + '<th>' + translate('week-5') + '</th>' + '<th>' + translate('week-6') + '</th>' + '<th>' + translate('week-7') + '</th>';
      } else {
        return prepend + '<th>' + translate('week-7') + '</th>' + '<th>' + translate('week-1') + '</th>' + '<th>' + translate('week-2') + '</th>' + '<th>' + translate('week-3') + '</th>' + '<th>' + translate('week-4') + '</th>' + '<th>' + translate('week-5') + '</th>' + '<th>' + translate('week-6') + '</th>';
      }
    }

    function isMonthOutOfBounds(month) {
      month = moment(month);

      if (opt.startDate && month.endOf('month').isBefore(opt.startDate)) {
        return true;
      }

      if (opt.endDate && month.startOf('month').isAfter(opt.endDate)) {
        return true;
      }

      return false;
    }

    function getGapHTML() {
      var html = ['<div class="gap-top-mask"></div><div class="gap-bottom-mask"></div><div class="gap-lines">'];

      for (var i = 0; i < 20; i++) {
        html.push('<div class="gap-line">' + '<div class="gap-1"></div>' + '<div class="gap-2"></div>' + '<div class="gap-3"></div>' + '</div>');
      }

      html.push('</div>');
      return html.join('');
    }

    function hasMonth2() {
      return !opt.singleMonth;
    }

    function attributesCallbacks(initialObject, callbacksArray, today) {
      var resultObject = $.extend(true, {}, initialObject);
      $.each(callbacksArray, function (cbAttrIndex, cbAttr) {
        var addAttributes = cbAttr(today);

        for (var attr in addAttributes) {
          if (resultObject.hasOwnProperty(attr)) {
            resultObject[attr] += addAttributes[attr];
          } else {
            resultObject[attr] = addAttributes[attr];
          }
        }
      });
      var attrString = '';

      for (var attr in resultObject) {
        if (resultObject.hasOwnProperty(attr)) {
          attrString += attr + '="' + resultObject[attr] + '" ';
        }
      }

      return attrString;
    }

    function createMonthHTML(d) {
      var days = [];
      d.setDate(1);
      var lastMonth = new Date(d.getTime() - 86400000);
      var now = new Date();
      var dayOfWeek = d.getDay();

      if (dayOfWeek === 0 && opt.startOfWeek === 'monday') {
        // add one week
        dayOfWeek = 7;
      }

      var today, valid;

      if (dayOfWeek > 0) {
        for (var i = dayOfWeek; i > 0; i--) {
          var day = new Date(d.getTime() - 86400000 * i);
          valid = isValidTime(day.getTime());
          if (opt.startDate && compare_day(day, opt.startDate) < 0) valid = false;
          if (opt.endDate && compare_day(day, opt.endDate) > 0) valid = false;
          days.push({
            date: day,
            type: 'lastMonth',
            day: day.getDate(),
            time: day.getTime(),
            valid: valid
          });
        }
      }

      var toMonth = d.getMonth();

      for (var i = 0; i < 40; i++) {
        today = moment(d).add(i, 'days').toDate();
        valid = isValidTime(today.getTime());
        if (opt.startDate && compare_day(today, opt.startDate) < 0) valid = false;
        if (opt.endDate && compare_day(today, opt.endDate) > 0) valid = false;
        days.push({
          date: today,
          type: today.getMonth() == toMonth ? 'toMonth' : 'nextMonth',
          day: today.getDate(),
          time: today.getTime(),
          valid: valid
        });
      }

      var html = [];

      for (var week = 0; week < 6; week++) {
        if (days[week * 7].type == 'nextMonth') break;
        html.push('<tr>');

        for (var day = 0; day < 7; day++) {
          var _day = opt.startOfWeek == 'monday' ? day + 1 : day;

          today = days[week * 7 + _day];
          var highlightToday = moment(today.time).format('L') == moment(now).format('L');
          today.extraClass = '';
          today.tooltip = '';

          if (today.valid && opt.beforeShowDay && typeof opt.beforeShowDay == 'function') {
            var _r = opt.beforeShowDay(moment(today.time).toDate());

            today.valid = _r[0];
            today.extraClass = _r[1] || '';
            today.tooltip = _r[2] || '';
            if (today.tooltip !== '') today.extraClass += ' has-tooltip ';
          }

          var todayDivAttr = {
            time: today.time,
            'data-tooltip': today.tooltip,
            'class': 'day ' + today.type + ' ' + today.extraClass + ' ' + (today.valid ? 'valid' : 'invalid') + ' ' + (highlightToday ? 'real-today' : '')
          };

          if (day === 0 && opt.showWeekNumbers) {
            html.push('<td><div class="week-number" data-start-time="' + today.time + '">' + opt.getWeekNumber(today.date) + '</div></td>');
          }

          html.push('<td ' + attributesCallbacks({}, opt.dayTdAttrs, today) + '><div ' + attributesCallbacks(todayDivAttr, opt.dayDivAttrs, today) + '>' + showDayHTML(today.time, today.day) + '</div></td>');
        }

        html.push('</tr>');
      }

      return html.join('');
    }

    function showDayHTML(time, date) {
      if (opt.showDateFilter && typeof opt.showDateFilter == 'function') return opt.showDateFilter(time, date);
      return date;
    }

    function getLanguages() {
      if (opt.language == 'auto') {
        var language = navigator.language ? navigator.language : navigator.browserLanguage;

        if (!language) {
          return $.dateRangePickerLanguages['default'];
        }

        language = language.toLowerCase();

        if (language in $.dateRangePickerLanguages) {
          return $.dateRangePickerLanguages[language];
        }

        return $.dateRangePickerLanguages['default'];
      } else if (opt.language && opt.language in $.dateRangePickerLanguages) {
        return $.dateRangePickerLanguages[opt.language];
      } else {
        return $.dateRangePickerLanguages['default'];
      }
    }
    /**
     * Translate language string, try both the provided translation key, as the lower case version
     */


    function translate(translationKey) {
      var translationKeyLowerCase = translationKey.toLowerCase();
      var result = translationKey in languages ? languages[translationKey] : translationKeyLowerCase in languages ? languages[translationKeyLowerCase] : null;
      var defaultLanguage = $.dateRangePickerLanguages['default'];
      if (result == null) result = translationKey in defaultLanguage ? defaultLanguage[translationKey] : translationKeyLowerCase in defaultLanguage ? defaultLanguage[translationKeyLowerCase] : '';
      return result;
    }

    function getDefaultTime() {
      var defaultTime = opt.defaultTime ? opt.defaultTime : new Date();

      if (opt.lookBehind) {
        if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = nextMonth(moment(opt.startDate).toDate());
        if (opt.endDate && compare_month(defaultTime, opt.endDate) > 0) defaultTime = moment(opt.endDate).toDate();
      } else {
        if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = moment(opt.startDate).toDate();
        if (opt.endDate && compare_month(nextMonth(defaultTime), opt.endDate) > 0) defaultTime = prevMonth(moment(opt.endDate).toDate());
      }

      if (opt.singleDate) {
        if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = moment(opt.startDate).toDate();
        if (opt.endDate && compare_month(defaultTime, opt.endDate) > 0) defaultTime = moment(opt.endDate).toDate();
      }

      return defaultTime;
    }

    function resetMonthsView(time) {
      if (!time) {
        time = getDefaultTime();
      }

      if (opt.lookBehind) {
        showMonth(prevMonth(time), 'month1');
        showMonth(time, 'month2');
      } else {
        showMonth(time, 'month1');
        showMonth(nextMonth(time), 'month2');
      }

      if (opt.singleDate) {
        showMonth(time, 'month1');
      }

      showSelectedDays();
      showGap();
    }

    function outsideClickClose(evt) {
      if (!IsOwnDatePickerClicked(evt, self[0])) {
        if (box.is(':visible')) closeDatePicker();
      }
    }
  };
});
=======
function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}var has_api_integration=!1;$(".company-navbar").change((function(){verifyIfCompanyIsDefault($(this).val())||($("#projeto").find("option").not(":first").remove(),loadOnTable("#body-table-coupons",".table-coupons"),$("#projeto").html(""),updateCompanyDefault().done((function(e){getCompaniesAndProjects().done((function(e){getProjects(e,"company-navbar")}))})))}));var currentPage=null,atualizar=null;function changeCalendar(){var e=moment().subtract(30,"days").format("DD/MM/YYYY"),t=moment().format("DD/MM/YYYY");$('input[name="daterange"]').attr("value","".concat(e,"-").concat(t)),$('input[name="daterange"]').dateRangePicker({setValue:function(a){if(a){var n=a.replace(/(\d{2}\/\d{2}\/)(\d{2}) Ã  (\d{2}\/\d{2}\/)(\d{2})/,"$120$2-$320$4");$(this).html(a).data("value",n),$('input[name="daterange"]').attr("value",n),$('input[name="daterange"]').val(n)}else $('input[name="daterange"]').attr("value","".concat(e,"-").concat(t)),$('input[name="daterange"]').val("".concat(e,"-").concat(t))}}).on("datepicker-change",(function(){updateStorage({calendar:$(this).val()})})).on("datepicker-open",(function(){$(".filter-badge-input").removeClass("show")})).on("datepicker-close",(function(){$(this).removeClass("focused"),$(this).data("value")&&$(this).addClass("active")}))}function updateStorage(e){var t=sessionStorage.getItem("info");t=t?JSON.parse(t):{},Object.keys(e).forEach((function(a,n){t[a]=e[a]})),sessionStorage.setItem("info",JSON.stringify(t))}function changeCompany(){$("#projeto").on("change",(function(){$.ajaxQ.abortAll(),updateStorage({company:$(this).val(),companyName:$(this).find("option:selected").text()}),atualizar()}))}function resumePending(){$("#total_sales").html(skeLoadMini),$.ajax({method:"GET",url:"/api/reports/resume-pending-balance",data:getFilters(),dataType:"json",headers:{Authorization:$('meta[name="access-token"]').attr("content"),Accept:"application/json"},error:function(e){errorAjaxResponse(e)},success:function(e){if(e.total_sales){$("#total_sales, #total-pending, #total").text(""),$("#total_sales").text(e.total_sales);var t=e.commission.split(/\s/g);$("#total-pending").html(t[0]+' <span class="font-size-30 bold">'+t[1]+"</span>")}else $("#total-pending, #total").html('R$ <strong class="font-size-30">0,00</strong>')}})}$(document).ready((function(){if(changeCalendar(),changeCompany(),sessionStorage.info){var e=JSON.parse(sessionStorage.getItem("info"));$("input[name=daterange]").val(e.calendar),$("#status").val(e.statusCompany),$("#status").find("option:selected").text(e.statusCompanyText)}function t(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t={project:$("#projeto").val(),status:$("#status").val(),company:$(".company-navbar").val(),date_range:$("#date-filter").val()};if(updateStorage({statusCompany:t.status,statusCompanyText:$("#status").find("option:selected").text()}),e){var a="";for(var n in t)a+="&"+n+"="+t[n];return encodeURI(a)}return t}$("#filtros").on("click",(function(){$("#div_filtros").is(":visible")?$("#div_filtros").slideUp():$("#div_filtros").slideDown()})),$("#bt_filtro").on("click",(function(e){e.preventDefault(),window.atualizar()})),getCompaniesAndProjects().done((function(e){getProjects(e)})),window.fillProjectsSelect=function(){return $.ajax({method:"GET",url:"/api/projects?select=true",dataType:"json",headers:{Authorization:$('meta[name="access-token"]').attr("content"),Accept:"application/json"},error:function(e){console.log("erro"),console.log(e)},success:function(e){return e}})},window.getProjects=function(e){loadingOnScreen(),$.ajax({method:"GET",url:"/api/sales/projects-with-sales",dataType:"json",headers:{Authorization:$('meta[name="access-token"]').attr("content"),Accept:"application/json"},error:function(e){console.log("erro"),console.log(e),loadingOnScreenRemove()},success:function(t){!isEmpty(t)||e.has_api_integration?($(".div-filters").hide(),$("#project-empty").hide(),$("#project-not-empty").show(),$("#export-excel > div >").show(),$.each(t,(function(e,t){$("#projeto").append($("<option>",{value:t.project_id,text:t.name}))})),$("#projeto option:first").attr("selected","selected"),sessionStorage.info&&($("#projeto").val(JSON.parse(sessionStorage.getItem("info")).company),$("#projeto").find("option:selected").text(JSON.parse(sessionStorage.getItem("info")).companyName)),company=$("#projeto").val(),window.atualizar(),$(".div-filters").show(),0==$("#select_projects option").length&&$("#select_projects").next().css("display","none"),loadingOnScreenRemove()):isEmpty(e.company_default_projects)?(loadingOnScreenRemove(),$(".div-filters").hide(),$("#project-empty").show(),$("#project-not-empty").hide()):($(".div-filters").hide(),$("#project-empty").hide(),$("#project-not-empty").show(),$("#export-excel > div >").show(),e.has_api_integration&&$("#projeto").append($("<option>",{value:"API-TOKEN",text:"Vendas por API"})),$("#projeto option:first").attr("selected","selected"),0==$("#select_projects option").length&&$("#select_projects").next().css("display","none"),window.atualizar(),$(".div-filters").show(),loadingOnScreenRemove())}}),loadingOnScreenRemove()},window.atualizar=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;currentPage=e;loadOnTable("#body-table-coupons",".table-coupons"),e=null==e?"/api/reports/coupons?"+t(!0).substr(1):"/api/reports/coupons"+e+t(!0),$.ajax({method:"GET",url:e,dataType:"json",headers:{Authorization:$('meta[name="access-token"]').attr("content"),Accept:"application/json"},error:function(e){$("#body-table-coupons").html(""),$(".table-coupons").addClass("table-striped"),$("#body-table-coupons").html("<tr class='text-center'><td colspan='10' style='vertical-align: middle;height:257px;'><img style='width:124px;margin-right:12px;' src='"+$("#body-table-coupons").attr("img-empty")+"'> Nenhum cupom encontrado</td></tr>"),errorAjaxResponse(e)},success:function(e){$("#body-table-coupons").html(""),$(".table-coupons").addClass("table-striped"),isEmpty(e.data)?$("#body-table-coupons").html("<tr class='text-center'><td colspan='10' style='vertical-align: middle;height:257px;'><img style='width:124px;margin-right:12px;' src='"+$("#body-table-coupons").attr("img-empty")+"'> Nenhum cupom encontrado</td></tr>"):($.each(e.data,(function(e,t){dados="\n                            <tr>\n                                <td>\n                                    ".concat(t.cupom_code,'\n                                </td>\n\n                                <td>\n                                    <div class="fullInformation-cupom ellipsis-text" data-toggle="tooltip" data-placement="top" title="').concat(t.project,'" >\n                                        ').concat(t.project,'\n                                    </div>\n                                    <div class="container-tooltips-cupom"></div>\n                                </td>\n\n                                <td>\n                                    ').concat(t.amount,"\n                                </td>\n                            </tr>\n                        "),$("#body-table-coupons").append(dados)})),$("#date").val(moment(new Date).add(3,"days").format("YYYY-MM-DD")),$("#date").attr("min",moment(new Date).format("YYYY-MM-DD")),$(".fullInformation-cupom").tooltip({container:".container-tooltips-cupom"})),pagination(e,"coupons",atualizar)}})},$(document).on("keypress",(function(e){13==e.keyCode&&window.atualizar()}))})),$.ajaxQ=function(){var e=0,t={};return $(document).ajaxSend((function(a,n){n._id=++e,t[n._id]=n})),$(document).ajaxComplete((function(e,a){delete t[a._id]})),{abortAll:function(){var e=[];return $.each(t,(function(t,a){e.push(a._id),a.abort()})),e}}}();var skeLoad='\n    <div class="ske-load">\n        <div class="px-20 py-0">\n            <div class="skeleton skeleton-gateway-logo" style="height: 30px"></div>\n        </div>\n        <div class="px-20 py-0">\n            <div class="row align-items-center mx-0 py-10">\n                <div class="skeleton skeleton-circle"></div>\n                <div class="skeleton skeleton-text mb-0" style="height: 15px; width:50%"></div>\n            </div>\n            <div class="skeleton skeleton-text ske"></div>\n        </div>\n    </div>\n',skeLoadBig='\n    <div class="ske-load">\n        <div class="px-20 py-0">\n            <div class="skeleton skeleton-gateway-logo" style="height: 30px"></div>\n        </div>\n        <div class="px-20 py-0">\n            <div class="row align-items-center mx-0 py-10">\n                <div class="skeleton skeleton-circle"></div>\n                <div class="skeleton skeleton-text mb-0" style="height: 15px; width:50%"></div>\n            </div>\n            <div class="skeleton skeleton-text ske"></div>\n        </div>\n\n        <div class="px-20 py-0">\n            <div class="row align-items-center mx-0 py-10">\n                <div class="skeleton skeleton-circle"></div>\n                <div class="skeleton skeleton-text mb-0" style="height: 15px; width:50%"></div>\n            </div>\n            <div class="skeleton skeleton-text ske"></div>\n        </div>\n\n        <div class="px-20 py-0">\n            <div class="row align-items-center mx-0 py-10">\n                <div class="skeleton skeleton-circle"></div>\n                <div class="skeleton skeleton-text mb-0" style="height: 15px; width:50%"></div>\n            </div>\n            <div class="skeleton skeleton-text ske"></div>\n        </div>\n    </div>\n',skeLoadMini='\n    <div class="ske-load">\n        <div class="px-20 py-0">\n            <div class="row align-items-center mx-0 py-10">\n                <div class="skeleton skeleton-circle"></div>\n                <div class="skeleton skeleton-text mb-0" style="height: 15px; width:50%"></div>\n            </div>\n        </div>\n    </div>\n';!function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.moment=t()}(this,(function(){"use strict";function e(){return tt.apply(null,arguments)}function t(e){return e instanceof Array||"[object Array]"===Object.prototype.toString.call(e)}function a(e){return null!=e&&"[object Object]"===Object.prototype.toString.call(e)}function n(e){return void 0===e}function s(e){return"number"==typeof e||"[object Number]"===Object.prototype.toString.call(e)}function r(e){return e instanceof Date||"[object Date]"===Object.prototype.toString.call(e)}function i(e,t){var a,n=[];for(a=0;a<e.length;++a)n.push(t(e[a],a));return n}function o(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function d(e,t){for(var a in t)o(t,a)&&(e[a]=t[a]);return o(t,"toString")&&(e.toString=t.toString),o(t,"valueOf")&&(e.valueOf=t.valueOf),e}function l(e,t,a,n){return _e(e,t,a,n,!0).utc()}function u(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function c(e){if(null==e._isValid){var t=u(e),a=st.call(t.parsedDateParts,(function(e){return null!=e})),n=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&a);if(e._strict&&(n=n&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return n;e._isValid=n}return e._isValid}function h(e){var t=l(NaN);return null!=e?d(u(t),e):u(t).userInvalidated=!0,t}function m(e,t){var a,s,r;if(n(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),n(t._i)||(e._i=t._i),n(t._f)||(e._f=t._f),n(t._l)||(e._l=t._l),n(t._strict)||(e._strict=t._strict),n(t._tzm)||(e._tzm=t._tzm),n(t._isUTC)||(e._isUTC=t._isUTC),n(t._offset)||(e._offset=t._offset),n(t._pf)||(e._pf=u(t)),n(t._locale)||(e._locale=t._locale),rt.length>0)for(a=0;a<rt.length;a++)n(r=t[s=rt[a]])||(e[s]=r);return e}function f(t){m(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===it&&(it=!0,e.updateOffset(this),it=!1)}function p(e){return e instanceof f||null!=e&&null!=e._isAMomentObject}function v(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function g(e){var t=+e,a=0;return 0!==t&&isFinite(t)&&(a=v(t)),a}function y(e,t,a){var n,s=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),i=0;for(n=0;n<s;n++)(a&&e[n]!==t[n]||!a&&g(e[n])!==g(t[n]))&&i++;return i+r}function k(t){!1===e.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function w(t,a){var n=!0;return d((function(){if(null!=e.deprecationHandler&&e.deprecationHandler(null,t),n){for(var s,r=[],i=0;i<arguments.length;i++){if(s="","object"==_typeof(arguments[i])){for(var o in s+="\n["+i+"] ",arguments[0])s+=o+": "+arguments[0][o]+", ";s=s.slice(0,-2)}else s=arguments[i];r.push(s)}k(t+"\nArguments: "+Array.prototype.slice.call(r).join("")+"\n"+(new Error).stack),n=!1}return a.apply(this,arguments)}),a)}function _(t,a){null!=e.deprecationHandler&&e.deprecationHandler(t,a),ot[t]||(k(a),ot[t]=!0)}function D(e){return e instanceof Function||"[object Function]"===Object.prototype.toString.call(e)}function b(e,t){var n,s=d({},e);for(n in t)o(t,n)&&(a(e[n])&&a(t[n])?(s[n]={},d(s[n],e[n]),d(s[n],t[n])):null!=t[n]?s[n]=t[n]:delete s[n]);for(n in e)o(e,n)&&!o(t,n)&&a(e[n])&&(s[n]=d({},s[n]));return s}function x(e){null!=e&&this.set(e)}function M(e,t){var a=e.toLowerCase();ut[a]=ut[a+"s"]=ut[t]=e}function S(e){return"string"==typeof e?ut[e]||ut[e.toLowerCase()]:void 0}function Y(e){var t,a,n={};for(a in e)o(e,a)&&((t=S(a))&&(n[t]=e[a]));return n}function O(e,t){ct[e]=t}function T(t,a){return function(n){return null!=n?(C(this,t,n),e.updateOffset(this,a),this):j(this,t)}}function j(e,t){return e.isValid()?e._d["get"+(e._isUTC?"UTC":"")+t]():NaN}function C(e,t,a){e.isValid()&&e._d["set"+(e._isUTC?"UTC":"")+t](a)}function P(e,t,a){var n=""+Math.abs(e),s=t-n.length;return(e>=0?a?"+":"":"-")+Math.pow(10,Math.max(0,s)).toString().substr(1)+n}function z(e,t,a,n){var s=n;"string"==typeof n&&(s=function(){return this[n]()}),e&&(pt[e]=s),t&&(pt[t[0]]=function(){return P(s.apply(this,arguments),t[1],t[2])}),a&&(pt[a]=function(){return this.localeData().ordinal(s.apply(this,arguments),e)})}function W(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|\]$/g,""):e.replace(/\\/g,"")}function V(e,t){return e.isValid()?(t=$(t,e.localeData()),ft[t]=ft[t]||function(e){var t,a,n=e.match(ht);for(t=0,a=n.length;t<a;t++)pt[n[t]]?n[t]=pt[n[t]]:n[t]=W(n[t]);return function(t){var s,r="";for(s=0;s<a;s++)r+=D(n[s])?n[s].call(t,e):n[s];return r}}(t),ft[t](e)):e.localeData().invalidDate()}function $(e,t){function a(e){return t.longDateFormat(e)||e}var n=5;for(mt.lastIndex=0;n>=0&&mt.test(e);)e=e.replace(mt,a),mt.lastIndex=0,n-=1;return e}function R(e,t,a){Pt[e]=D(t)?t:function(e,n){return e&&a?a:t}}function A(e,t){return o(Pt,e)?Pt[e](t._strict,t._locale):new RegExp(function(e){return N(e.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,(function(e,t,a,n,s){return t||a||n||s})))}(e))}function N(e){return e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function F(e,t){var a,n=t;for("string"==typeof e&&(e=[e]),s(t)&&(n=function(e,a){a[t]=g(e)}),a=0;a<e.length;a++)zt[e[a]]=n}function H(e,t){F(e,(function(e,a,n,s){n._w=n._w||{},t(e,n._w,n,s)}))}function I(e,t,a){null!=t&&o(zt,e)&&zt[e](t,a._a,a,e)}function L(e,t){return new Date(Date.UTC(e,t+1,0)).getUTCDate()}function U(e,t,a){var n,s,r,i=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],n=0;n<12;++n)r=l([2e3,n]),this._shortMonthsParse[n]=this.monthsShort(r,"").toLocaleLowerCase(),this._longMonthsParse[n]=this.months(r,"").toLocaleLowerCase();return a?"MMM"===t?-1!==(s=Lt.call(this._shortMonthsParse,i))?s:null:-1!==(s=Lt.call(this._longMonthsParse,i))?s:null:"MMM"===t?-1!==(s=Lt.call(this._shortMonthsParse,i))?s:-1!==(s=Lt.call(this._longMonthsParse,i))?s:null:-1!==(s=Lt.call(this._longMonthsParse,i))?s:-1!==(s=Lt.call(this._shortMonthsParse,i))?s:null}function G(e,t){var a;if(!e.isValid())return e;if("string"==typeof t)if(/^\d+$/.test(t))t=g(t);else if(!s(t=e.localeData().monthsParse(t)))return e;return a=Math.min(e.date(),L(e.year(),t)),e._d["set"+(e._isUTC?"UTC":"")+"Month"](t,a),e}function E(t){return null!=t?(G(this,t),e.updateOffset(this,!0),this):j(this,"Month")}function Z(){function e(e,t){return t.length-e.length}var t,a,n=[],s=[],r=[];for(t=0;t<12;t++)a=l([2e3,t]),n.push(this.monthsShort(a,"")),s.push(this.months(a,"")),r.push(this.months(a,"")),r.push(this.monthsShort(a,""));for(n.sort(e),s.sort(e),r.sort(e),t=0;t<12;t++)n[t]=N(n[t]),s[t]=N(s[t]);for(t=0;t<24;t++)r[t]=N(r[t]);this._monthsRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+n.join("|")+")","i")}function B(e){return J(e)?366:365}function J(e){return e%4==0&&e%100!=0||e%400==0}function q(e,t,a,n,s,r,i){var o=new Date(e,t,a,n,s,r,i);return e<100&&e>=0&&isFinite(o.getFullYear())&&o.setFullYear(e),o}function Q(e){var t=new Date(Date.UTC.apply(null,arguments));return e<100&&e>=0&&isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e),t}function K(e,t,a){var n=7+t-a;return-((7+Q(e,0,n).getUTCDay()-t)%7)+n-1}function X(e,t,a,n,s){var r,i,o=1+7*(t-1)+(7+a-n)%7+K(e,n,s);return o<=0?i=B(r=e-1)+o:o>B(e)?(r=e+1,i=o-B(e)):(r=e,i=o),{year:r,dayOfYear:i}}function ee(e,t,a){var n,s,r=K(e.year(),t,a),i=Math.floor((e.dayOfYear()-r-1)/7)+1;return i<1?n=i+te(s=e.year()-1,t,a):i>te(e.year(),t,a)?(n=i-te(e.year(),t,a),s=e.year()+1):(s=e.year(),n=i),{week:n,year:s}}function te(e,t,a){var n=K(e,t,a),s=K(e+1,t,a);return(B(e)-n+s)/7}function ae(e,t,a){var n,s,r,i=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],n=0;n<7;++n)r=l([2e3,1]).day(n),this._minWeekdaysParse[n]=this.weekdaysMin(r,"").toLocaleLowerCase(),this._shortWeekdaysParse[n]=this.weekdaysShort(r,"").toLocaleLowerCase(),this._weekdaysParse[n]=this.weekdays(r,"").toLocaleLowerCase();return a?"dddd"===t?-1!==(s=Lt.call(this._weekdaysParse,i))?s:null:"ddd"===t?-1!==(s=Lt.call(this._shortWeekdaysParse,i))?s:null:-1!==(s=Lt.call(this._minWeekdaysParse,i))?s:null:"dddd"===t?-1!==(s=Lt.call(this._weekdaysParse,i))?s:-1!==(s=Lt.call(this._shortWeekdaysParse,i))?s:-1!==(s=Lt.call(this._minWeekdaysParse,i))?s:null:"ddd"===t?-1!==(s=Lt.call(this._shortWeekdaysParse,i))?s:-1!==(s=Lt.call(this._weekdaysParse,i))?s:-1!==(s=Lt.call(this._minWeekdaysParse,i))?s:null:-1!==(s=Lt.call(this._minWeekdaysParse,i))?s:-1!==(s=Lt.call(this._weekdaysParse,i))?s:-1!==(s=Lt.call(this._shortWeekdaysParse,i))?s:null}function ne(){function e(e,t){return t.length-e.length}var t,a,n,s,r,i=[],o=[],d=[],u=[];for(t=0;t<7;t++)a=l([2e3,1]).day(t),n=this.weekdaysMin(a,""),s=this.weekdaysShort(a,""),r=this.weekdays(a,""),i.push(n),o.push(s),d.push(r),u.push(n),u.push(s),u.push(r);for(i.sort(e),o.sort(e),d.sort(e),u.sort(e),t=0;t<7;t++)o[t]=N(o[t]),d[t]=N(d[t]),u[t]=N(u[t]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+d.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+o.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+i.join("|")+")","i")}function se(){return this.hours()%12||12}function re(e,t){z(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function ie(e,t){return t._meridiemParse}function oe(e){return e?e.toLowerCase().replace("_","-"):e}function de(e){var t=null;if(!ra[e]&&"undefined"!=typeof module&&module&&module.exports)try{t=aa._abbr,require("./locale/"+e),le(t)}catch(e){}return ra[e]}function le(e,t){var a;return e&&((a=n(t)?ce(e):ue(e,t))&&(aa=a)),aa._abbr}function ue(e,t){if(null!==t){var a=sa;if(t.abbr=e,null!=ra[e])_("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),a=ra[e]._config;else if(null!=t.parentLocale){if(null==ra[t.parentLocale])return ia[t.parentLocale]||(ia[t.parentLocale]=[]),ia[t.parentLocale].push({name:e,config:t}),null;a=ra[t.parentLocale]._config}return ra[e]=new x(b(a,t)),ia[e]&&ia[e].forEach((function(e){ue(e.name,e.config)})),le(e),ra[e]}return delete ra[e],null}function ce(e){var a;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return aa;if(!t(e)){if(a=de(e))return a;e=[e]}return function(e){for(var t,a,n,s,r=0;r<e.length;){for(t=(s=oe(e[r]).split("-")).length,a=(a=oe(e[r+1]))?a.split("-"):null;t>0;){if(n=de(s.slice(0,t).join("-")))return n;if(a&&a.length>=t&&y(s,a,!0)>=t-1)break;t--}r++}return null}(e)}function he(e){var t,a=e._a;return a&&-2===u(e).overflow&&(t=a[Vt]<0||a[Vt]>11?Vt:a[$t]<1||a[$t]>L(a[Wt],a[Vt])?$t:a[Rt]<0||a[Rt]>24||24===a[Rt]&&(0!==a[At]||0!==a[Nt]||0!==a[Ft])?Rt:a[At]<0||a[At]>59?At:a[Nt]<0||a[Nt]>59?Nt:a[Ft]<0||a[Ft]>999?Ft:-1,u(e)._overflowDayOfYear&&(t<Wt||t>$t)&&(t=$t),u(e)._overflowWeeks&&-1===t&&(t=Ht),u(e)._overflowWeekday&&-1===t&&(t=It),u(e).overflow=t),e}function me(e){var t,a,n,s,r,i,o=e._i,d=oa.exec(o)||da.exec(o);if(d){for(u(e).iso=!0,t=0,a=ua.length;t<a;t++)if(ua[t][1].exec(d[1])){s=ua[t][0],n=!1!==ua[t][2];break}if(null==s)return void(e._isValid=!1);if(d[3]){for(t=0,a=ca.length;t<a;t++)if(ca[t][1].exec(d[3])){r=(d[2]||" ")+ca[t][0];break}if(null==r)return void(e._isValid=!1)}if(!n&&null!=r)return void(e._isValid=!1);if(d[4]){if(!la.exec(d[4]))return void(e._isValid=!1);i="Z"}e._f=s+(r||"")+(i||""),ye(e)}else e._isValid=!1}function fe(e){var t,a,n,s,r,i,o,d={" GMT":" +0000"," EDT":" -0400"," EST":" -0500"," CDT":" -0500"," CST":" -0600"," MDT":" -0600"," MST":" -0700"," PDT":" -0700"," PST":" -0800"};if(t=e._i.replace(/\([^\)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s|\s$/g,""),a=ma.exec(t)){if(n=a[1]?"ddd"+(5===a[1].length?", ":" "):"",s="D MMM "+(a[2].length>10?"YYYY ":"YY "),r="HH:mm"+(a[4]?":ss":""),a[1]){var l=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][new Date(a[2]).getDay()];if(a[1].substr(0,3)!==l)return u(e).weekdayMismatch=!0,void(e._isValid=!1)}switch(a[5].length){case 2:0===o?i=" +0000":i=((o="YXWVUTSRQPONZABCDEFGHIKLM".indexOf(a[5][1].toUpperCase())-12)<0?" -":" +")+(""+o).replace(/^-?/,"0").match(/..$/)[0]+"00";break;case 4:i=d[a[5]];break;default:i=d[" GMT"]}a[5]=i,e._i=a.splice(1).join("")," ZZ",e._f=n+s+r+" ZZ",ye(e),u(e).rfc2822=!0}else e._isValid=!1}function pe(e,t,a){return null!=e?e:null!=t?t:a}function ve(t){var a=new Date(e.now());return t._useUTC?[a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate()]:[a.getFullYear(),a.getMonth(),a.getDate()]}function ge(e){var t,a,n,s,r=[];if(!e._d){for(n=ve(e),e._w&&null==e._a[$t]&&null==e._a[Vt]&&function(e){var t,a,n,s,r,i,o,d;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)r=1,i=4,a=pe(t.GG,e._a[Wt],ee(De(),1,4).year),n=pe(t.W,1),((s=pe(t.E,1))<1||s>7)&&(d=!0);else{r=e._locale._week.dow,i=e._locale._week.doy;var l=ee(De(),r,i);a=pe(t.gg,e._a[Wt],l.year),n=pe(t.w,l.week),null!=t.d?((s=t.d)<0||s>6)&&(d=!0):null!=t.e?(s=t.e+r,(t.e<0||t.e>6)&&(d=!0)):s=r}n<1||n>te(a,r,i)?u(e)._overflowWeeks=!0:null!=d?u(e)._overflowWeekday=!0:(o=X(a,n,s,r,i),e._a[Wt]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(s=pe(e._a[Wt],n[Wt]),(e._dayOfYear>B(s)||0===e._dayOfYear)&&(u(e)._overflowDayOfYear=!0),a=Q(s,0,e._dayOfYear),e._a[Vt]=a.getUTCMonth(),e._a[$t]=a.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=r[t]=n[t];for(;t<7;t++)e._a[t]=r[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[Rt]&&0===e._a[At]&&0===e._a[Nt]&&0===e._a[Ft]&&(e._nextDay=!0,e._a[Rt]=0),e._d=(e._useUTC?Q:q).apply(null,r),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[Rt]=24)}}function ye(t){if(t._f!==e.ISO_8601)if(t._f!==e.RFC_2822){t._a=[],u(t).empty=!0;var a,n,s,r,i,o=""+t._i,d=o.length,l=0;for(s=$(t._f,t._locale).match(ht)||[],a=0;a<s.length;a++)r=s[a],(n=(o.match(A(r,t))||[])[0])&&((i=o.substr(0,o.indexOf(n))).length>0&&u(t).unusedInput.push(i),o=o.slice(o.indexOf(n)+n.length),l+=n.length),pt[r]?(n?u(t).empty=!1:u(t).unusedTokens.push(r),I(r,n,t)):t._strict&&!n&&u(t).unusedTokens.push(r);u(t).charsLeftOver=d-l,o.length>0&&u(t).unusedInput.push(o),t._a[Rt]<=12&&!0===u(t).bigHour&&t._a[Rt]>0&&(u(t).bigHour=void 0),u(t).parsedDateParts=t._a.slice(0),u(t).meridiem=t._meridiem,t._a[Rt]=function(e,t,a){var n;return null==a?t:null!=e.meridiemHour?e.meridiemHour(t,a):null!=e.isPM?((n=e.isPM(a))&&t<12&&(t+=12),n||12!==t||(t=0),t):t}(t._locale,t._a[Rt],t._meridiem),ge(t),he(t)}else fe(t);else me(t)}function ke(e){var a=e._i,n=e._f;return e._locale=e._locale||ce(e._l),null===a||void 0===n&&""===a?h({nullInput:!0}):("string"==typeof a&&(e._i=a=e._locale.preparse(a)),p(a)?new f(he(a)):(r(a)?e._d=a:t(n)?function(e){var t,a,n,s,r;if(0===e._f.length)return u(e).invalidFormat=!0,void(e._d=new Date(NaN));for(s=0;s<e._f.length;s++)r=0,t=m({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[s],ye(t),c(t)&&(r+=u(t).charsLeftOver,r+=10*u(t).unusedTokens.length,u(t).score=r,(null==n||r<n)&&(n=r,a=t));d(e,a||t)}(e):n?ye(e):we(e),c(e)||(e._d=null),e))}function we(o){var d=o._i;n(d)?o._d=new Date(e.now()):r(d)?o._d=new Date(d.valueOf()):"string"==typeof d?function(t){var a=ha.exec(t._i);null!==a?t._d=new Date(+a[1]):(me(t),!1===t._isValid&&(delete t._isValid,fe(t),!1===t._isValid&&(delete t._isValid,e.createFromInputFallback(t))))}(o):t(d)?(o._a=i(d.slice(0),(function(e){return parseInt(e,10)})),ge(o)):a(d)?function(e){if(!e._d){var t=Y(e._i);e._a=i([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),ge(e)}}(o):s(d)?o._d=new Date(d):e.createFromInputFallback(o)}function _e(e,n,s,r,i){var o={};return!0!==s&&!1!==s||(r=s,s=void 0),(a(e)&&function(e){var t;for(t in e)return!1;return!0}(e)||t(e)&&0===e.length)&&(e=void 0),o._isAMomentObject=!0,o._useUTC=o._isUTC=i,o._l=s,o._i=e,o._f=n,o._strict=r,function(e){var t=new f(he(ke(e)));return t._nextDay&&(t.add(1,"d"),t._nextDay=void 0),t}(o)}function De(e,t,a,n){return _e(e,t,a,n,!1)}function be(e,a){var n,s;if(1===a.length&&t(a[0])&&(a=a[0]),!a.length)return De();for(n=a[0],s=1;s<a.length;++s)a[s].isValid()&&!a[s][e](n)||(n=a[s]);return n}function xe(e){var t=Y(e),a=t.year||0,n=t.quarter||0,s=t.month||0,r=t.week||0,i=t.day||0,o=t.hour||0,d=t.minute||0,l=t.second||0,u=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===va.indexOf(t)||null!=e[t]&&isNaN(e[t]))return!1;for(var a=!1,n=0;n<va.length;++n)if(e[va[n]]){if(a)return!1;parseFloat(e[va[n]])!==g(e[va[n]])&&(a=!0)}return!0}(t),this._milliseconds=+u+1e3*l+6e4*d+1e3*o*60*60,this._days=+i+7*r,this._months=+s+3*n+12*a,this._data={},this._locale=ce(),this._bubble()}function Me(e){return e instanceof xe}function Se(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Ye(e,t){z(e,0,0,(function(){var e=this.utcOffset(),a="+";return e<0&&(e=-e,a="-"),a+P(~~(e/60),2)+t+P(~~e%60,2)}))}function Oe(e,t){var a=(t||"").match(e);if(null===a)return null;var n=((a[a.length-1]||[])+"").match(ga)||["-",0,0],s=60*n[1]+g(n[2]);return 0===s?0:"+"===n[0]?s:-s}function Te(t,a){var n,s;return a._isUTC?(n=a.clone(),s=(p(t)||r(t)?t.valueOf():De(t).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+s),e.updateOffset(n,!1),n):De(t).local()}function je(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Ce(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Pe(e,t){var a,n,r,i=e,d=null;return Me(e)?i={ms:e._milliseconds,d:e._days,M:e._months}:s(e)?(i={},t?i[t]=e:i.milliseconds=e):(d=ya.exec(e))?(a="-"===d[1]?-1:1,i={y:0,d:g(d[$t])*a,h:g(d[Rt])*a,m:g(d[At])*a,s:g(d[Nt])*a,ms:g(Se(1e3*d[Ft]))*a}):(d=ka.exec(e))?(a="-"===d[1]?-1:1,i={y:ze(d[2],a),M:ze(d[3],a),w:ze(d[4],a),d:ze(d[5],a),h:ze(d[6],a),m:ze(d[7],a),s:ze(d[8],a)}):null==i?i={}:"object"==_typeof(i)&&("from"in i||"to"in i)&&(r=function(e,t){var a;return e.isValid()&&t.isValid()?(t=Te(t,e),e.isBefore(t)?a=We(e,t):((a=We(t,e)).milliseconds=-a.milliseconds,a.months=-a.months),a):{milliseconds:0,months:0}}(De(i.from),De(i.to)),(i={}).ms=r.milliseconds,i.M=r.months),n=new xe(i),Me(e)&&o(e,"_locale")&&(n._locale=e._locale),n}function ze(e,t){var a=e&&parseFloat(e.replace(",","."));return(isNaN(a)?0:a)*t}function We(e,t){var a={milliseconds:0,months:0};return a.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(a.months,"M").isAfter(t)&&--a.months,a.milliseconds=+t-+e.clone().add(a.months,"M"),a}function Ve(e,t){return function(a,n){var s;return null===n||isNaN(+n)||(_(t,"moment()."+t+"(period, number) is deprecated. Please use moment()."+t+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),s=a,a=n,n=s),$e(this,Pe(a="string"==typeof a?+a:a,n),e),this}}function $e(t,a,n,s){var r=a._milliseconds,i=Se(a._days),o=Se(a._months);t.isValid()&&(s=null==s||s,r&&t._d.setTime(t._d.valueOf()+r*n),i&&C(t,"Date",j(t,"Date")+i*n),o&&G(t,j(t,"Month")+o*n),s&&e.updateOffset(t,i||o))}function Re(e){var t;return void 0===e?this._locale._abbr:(null!=(t=ce(e))&&(this._locale=t),this)}function Ae(){return this._locale}function Ne(e,t){z(0,[e,e.length],0,t)}function Fe(e,t,a,n,s){var r;return null==e?ee(this,n,s).year:(t>(r=te(e,n,s))&&(t=r),He.call(this,e,t,a,n,s))}function He(e,t,a,n,s){var r=X(e,t,a,n,s),i=Q(r.year,0,r.dayOfYear);return this.year(i.getUTCFullYear()),this.month(i.getUTCMonth()),this.date(i.getUTCDate()),this}function Ie(e,t){t[Ft]=g(1e3*("0."+e))}function Le(e){return e}function Ue(e,t,a,n){var s=ce(),r=l().set(n,t);return s[a](r,e)}function Ge(e,t,a){if(s(e)&&(t=e,e=void 0),e=e||"",null!=t)return Ue(e,t,a,"month");var n,r=[];for(n=0;n<12;n++)r[n]=Ue(e,n,a,"month");return r}function Ee(e,t,a,n){"boolean"==typeof e?(s(t)&&(a=t,t=void 0),t=t||""):(a=t=e,e=!1,s(t)&&(a=t,t=void 0),t=t||"");var r=ce(),i=e?r._week.dow:0;if(null!=a)return Ue(t,(a+i)%7,n,"day");var o,d=[];for(o=0;o<7;o++)d[o]=Ue(t,(o+i)%7,n,"day");return d}function Ze(e,t,a,n){var s=Pe(t,a);return e._milliseconds+=n*s._milliseconds,e._days+=n*s._days,e._months+=n*s._months,e._bubble()}function Be(e){return e<0?Math.floor(e):Math.ceil(e)}function Je(e){return 4800*e/146097}function qe(e){return 146097*e/4800}function Qe(e){return function(){return this.as(e)}}function Ke(e){return function(){return this.isValid()?this._data[e]:NaN}}function Xe(e,t,a,n,s){return s.relativeTime(t||1,!!a,e,n)}function et(){if(!this.isValid())return this.localeData().invalidDate();var e,t,a=Ba(this._milliseconds)/1e3,n=Ba(this._days),s=Ba(this._months);e=v(a/60),t=v(e/60),a%=60,e%=60;var r=v(s/12),i=s%=12,o=n,d=t,l=e,u=a,c=this.asSeconds();return c?(c<0?"-":"")+"P"+(r?r+"Y":"")+(i?i+"M":"")+(o?o+"D":"")+(d||l||u?"T":"")+(d?d+"H":"")+(l?l+"M":"")+(u?u+"S":""):"P0D"}var tt,at;at=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),a=t.length>>>0,n=0;n<a;n++)if(n in t&&e.call(this,t[n],n,t))return!0;return!1};var nt,st=at,rt=e.momentProperties=[],it=!1,ot={};e.suppressDeprecationWarnings=!1,e.deprecationHandler=null,nt=Object.keys?Object.keys:function(e){var t,a=[];for(t in e)o(e,t)&&a.push(t);return a};var dt,lt=nt,ut={},ct={},ht=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,mt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,ft={},pt={},vt=/\d/,gt=/\d\d/,yt=/\d{3}/,kt=/\d{4}/,wt=/[+-]?\d{6}/,_t=/\d\d?/,Dt=/\d\d\d\d?/,bt=/\d\d\d\d\d\d?/,xt=/\d{1,3}/,Mt=/\d{1,4}/,St=/[+-]?\d{1,6}/,Yt=/\d+/,Ot=/[+-]?\d+/,Tt=/Z|[+-]\d\d:?\d\d/gi,jt=/Z|[+-]\d\d(?::?\d\d)?/gi,Ct=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Pt={},zt={},Wt=0,Vt=1,$t=2,Rt=3,At=4,Nt=5,Ft=6,Ht=7,It=8;dt=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1};var Lt=dt;z("M",["MM",2],"Mo",(function(){return this.month()+1})),z("MMM",0,0,(function(e){return this.localeData().monthsShort(this,e)})),z("MMMM",0,0,(function(e){return this.localeData().months(this,e)})),M("month","M"),O("month",8),R("M",_t),R("MM",_t,gt),R("MMM",(function(e,t){return t.monthsShortRegex(e)})),R("MMMM",(function(e,t){return t.monthsRegex(e)})),F(["M","MM"],(function(e,t){t[Vt]=g(e)-1})),F(["MMM","MMMM"],(function(e,t,a,n){var s=a._locale.monthsParse(e,n,a._strict);null!=s?t[Vt]=s:u(a).invalidMonth=e}));var Ut=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,Gt="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),Et="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),Zt=Ct,Bt=Ct;z("Y",0,0,(function(){var e=this.year();return e<=9999?""+e:"+"+e})),z(0,["YY",2],0,(function(){return this.year()%100})),z(0,["YYYY",4],0,"year"),z(0,["YYYYY",5],0,"year"),z(0,["YYYYYY",6,!0],0,"year"),M("year","y"),O("year",1),R("Y",Ot),R("YY",_t,gt),R("YYYY",Mt,kt),R("YYYYY",St,wt),R("YYYYYY",St,wt),F(["YYYYY","YYYYYY"],Wt),F("YYYY",(function(t,a){a[Wt]=2===t.length?e.parseTwoDigitYear(t):g(t)})),F("YY",(function(t,a){a[Wt]=e.parseTwoDigitYear(t)})),F("Y",(function(e,t){t[Wt]=parseInt(e,10)})),e.parseTwoDigitYear=function(e){return g(e)+(g(e)>68?1900:2e3)};var Jt=T("FullYear",!0);z("w",["ww",2],"wo","week"),z("W",["WW",2],"Wo","isoWeek"),M("week","w"),M("isoWeek","W"),O("week",5),O("isoWeek",5),R("w",_t),R("ww",_t,gt),R("W",_t),R("WW",_t,gt),H(["w","ww","W","WW"],(function(e,t,a,n){t[n.substr(0,1)]=g(e)}));z("d",0,"do","day"),z("dd",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),z("ddd",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),z("dddd",0,0,(function(e){return this.localeData().weekdays(this,e)})),z("e",0,0,"weekday"),z("E",0,0,"isoWeekday"),M("day","d"),M("weekday","e"),M("isoWeekday","E"),O("day",11),O("weekday",11),O("isoWeekday",11),R("d",_t),R("e",_t),R("E",_t),R("dd",(function(e,t){return t.weekdaysMinRegex(e)})),R("ddd",(function(e,t){return t.weekdaysShortRegex(e)})),R("dddd",(function(e,t){return t.weekdaysRegex(e)})),H(["dd","ddd","dddd"],(function(e,t,a,n){var s=a._locale.weekdaysParse(e,n,a._strict);null!=s?t.d=s:u(a).invalidWeekday=e})),H(["d","e","E"],(function(e,t,a,n){t[n]=g(e)}));var qt="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Qt="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Kt="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Xt=Ct,ea=Ct,ta=Ct;z("H",["HH",2],0,"hour"),z("h",["hh",2],0,se),z("k",["kk",2],0,(function(){return this.hours()||24})),z("hmm",0,0,(function(){return""+se.apply(this)+P(this.minutes(),2)})),z("hmmss",0,0,(function(){return""+se.apply(this)+P(this.minutes(),2)+P(this.seconds(),2)})),z("Hmm",0,0,(function(){return""+this.hours()+P(this.minutes(),2)})),z("Hmmss",0,0,(function(){return""+this.hours()+P(this.minutes(),2)+P(this.seconds(),2)})),re("a",!0),re("A",!1),M("hour","h"),O("hour",13),R("a",ie),R("A",ie),R("H",_t),R("h",_t),R("k",_t),R("HH",_t,gt),R("hh",_t,gt),R("kk",_t,gt),R("hmm",Dt),R("hmmss",bt),R("Hmm",Dt),R("Hmmss",bt),F(["H","HH"],Rt),F(["k","kk"],(function(e,t,a){var n=g(e);t[Rt]=24===n?0:n})),F(["a","A"],(function(e,t,a){a._isPm=a._locale.isPM(e),a._meridiem=e})),F(["h","hh"],(function(e,t,a){t[Rt]=g(e),u(a).bigHour=!0})),F("hmm",(function(e,t,a){var n=e.length-2;t[Rt]=g(e.substr(0,n)),t[At]=g(e.substr(n)),u(a).bigHour=!0})),F("hmmss",(function(e,t,a){var n=e.length-4,s=e.length-2;t[Rt]=g(e.substr(0,n)),t[At]=g(e.substr(n,2)),t[Nt]=g(e.substr(s)),u(a).bigHour=!0})),F("Hmm",(function(e,t,a){var n=e.length-2;t[Rt]=g(e.substr(0,n)),t[At]=g(e.substr(n))})),F("Hmmss",(function(e,t,a){var n=e.length-4,s=e.length-2;t[Rt]=g(e.substr(0,n)),t[At]=g(e.substr(n,2)),t[Nt]=g(e.substr(s))}));var aa,na=T("Hours",!0),sa={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:Gt,monthsShort:Et,week:{dow:0,doy:6},weekdays:qt,weekdaysMin:Kt,weekdaysShort:Qt,meridiemParse:/[ap]\.?m?\.?/i},ra={},ia={},oa=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,da=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,la=/Z|[+-]\d\d(?::?\d\d)?/,ua=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],ca=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],ha=/^\/?Date\((\-?\d+)/i,ma=/^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;e.createFromInputFallback=w("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",(function(e){e._d=new Date(e._i+(e._useUTC?" UTC":""))})),e.ISO_8601=function(){},e.RFC_2822=function(){};var fa=w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=De.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:h()})),pa=w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var e=De.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:h()})),va=["year","quarter","month","week","day","hour","minute","second","millisecond"];Ye("Z",":"),Ye("ZZ",""),R("Z",jt),R("ZZ",jt),F(["Z","ZZ"],(function(e,t,a){a._useUTC=!0,a._tzm=Oe(jt,e)}));var ga=/([\+\-]|\d\d)/gi;e.updateOffset=function(){};var ya=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,ka=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Pe.fn=xe.prototype,Pe.invalid=function(){return Pe(NaN)};var wa=Ve(1,"add"),_a=Ve(-1,"subtract");e.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",e.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Da=w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",(function(e){return void 0===e?this.localeData():this.locale(e)}));z(0,["gg",2],0,(function(){return this.weekYear()%100})),z(0,["GG",2],0,(function(){return this.isoWeekYear()%100})),Ne("gggg","weekYear"),Ne("ggggg","weekYear"),Ne("GGGG","isoWeekYear"),Ne("GGGGG","isoWeekYear"),M("weekYear","gg"),M("isoWeekYear","GG"),O("weekYear",1),O("isoWeekYear",1),R("G",Ot),R("g",Ot),R("GG",_t,gt),R("gg",_t,gt),R("GGGG",Mt,kt),R("gggg",Mt,kt),R("GGGGG",St,wt),R("ggggg",St,wt),H(["gggg","ggggg","GGGG","GGGGG"],(function(e,t,a,n){t[n.substr(0,2)]=g(e)})),H(["gg","GG"],(function(t,a,n,s){a[s]=e.parseTwoDigitYear(t)})),z("Q",0,"Qo","quarter"),M("quarter","Q"),O("quarter",7),R("Q",vt),F("Q",(function(e,t){t[Vt]=3*(g(e)-1)})),z("D",["DD",2],"Do","date"),M("date","D"),O("date",9),R("D",_t),R("DD",_t,gt),R("Do",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),F(["D","DD"],$t),F("Do",(function(e,t){t[$t]=g(e.match(_t)[0])}));var ba=T("Date",!0);z("DDD",["DDDD",3],"DDDo","dayOfYear"),M("dayOfYear","DDD"),O("dayOfYear",4),R("DDD",xt),R("DDDD",yt),F(["DDD","DDDD"],(function(e,t,a){a._dayOfYear=g(e)})),z("m",["mm",2],0,"minute"),M("minute","m"),O("minute",14),R("m",_t),R("mm",_t,gt),F(["m","mm"],At);var xa=T("Minutes",!1);z("s",["ss",2],0,"second"),M("second","s"),O("second",15),R("s",_t),R("ss",_t,gt),F(["s","ss"],Nt);var Ma,Sa=T("Seconds",!1);for(z("S",0,0,(function(){return~~(this.millisecond()/100)})),z(0,["SS",2],0,(function(){return~~(this.millisecond()/10)})),z(0,["SSS",3],0,"millisecond"),z(0,["SSSS",4],0,(function(){return 10*this.millisecond()})),z(0,["SSSSS",5],0,(function(){return 100*this.millisecond()})),z(0,["SSSSSS",6],0,(function(){return 1e3*this.millisecond()})),z(0,["SSSSSSS",7],0,(function(){return 1e4*this.millisecond()})),z(0,["SSSSSSSS",8],0,(function(){return 1e5*this.millisecond()})),z(0,["SSSSSSSSS",9],0,(function(){return 1e6*this.millisecond()})),M("millisecond","ms"),O("millisecond",16),R("S",xt,vt),R("SS",xt,gt),R("SSS",xt,yt),Ma="SSSS";Ma.length<=9;Ma+="S")R(Ma,Yt);for(Ma="S";Ma.length<=9;Ma+="S")F(Ma,Ie);var Ya=T("Milliseconds",!1);z("z",0,0,"zoneAbbr"),z("zz",0,0,"zoneName");var Oa=f.prototype;Oa.add=wa,Oa.calendar=function(t,a){var n=t||De(),s=Te(n,this).startOf("day"),r=e.calendarFormat(this,s)||"sameElse",i=a&&(D(a[r])?a[r].call(this,n):a[r]);return this.format(i||this.localeData().calendar(r,this,De(n)))},Oa.clone=function(){return new f(this)},Oa.diff=function(e,t,a){var n,s,r,i;return this.isValid()?(n=Te(e,this)).isValid()?(s=6e4*(n.utcOffset()-this.utcOffset()),"year"===(t=S(t))||"month"===t||"quarter"===t?(i=function(e,t){var a,n,s=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(s,"months");return t-r<0?(a=e.clone().add(s-1,"months"),n=(t-r)/(r-a)):(a=e.clone().add(s+1,"months"),n=(t-r)/(a-r)),-(s+n)||0}(this,n),"quarter"===t?i/=3:"year"===t&&(i/=12)):(r=this-n,i="second"===t?r/1e3:"minute"===t?r/6e4:"hour"===t?r/36e5:"day"===t?(r-s)/864e5:"week"===t?(r-s)/6048e5:r),a?i:v(i)):NaN:NaN},Oa.endOf=function(e){return void 0===(e=S(e))||"millisecond"===e?this:("date"===e&&(e="day"),this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms"))},Oa.format=function(t){t||(t=this.isUtc()?e.defaultFormatUtc:e.defaultFormat);var a=V(this,t);return this.localeData().postformat(a)},Oa.from=function(e,t){return this.isValid()&&(p(e)&&e.isValid()||De(e).isValid())?Pe({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},Oa.fromNow=function(e){return this.from(De(),e)},Oa.to=function(e,t){return this.isValid()&&(p(e)&&e.isValid()||De(e).isValid())?Pe({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},Oa.toNow=function(e){return this.to(De(),e)},Oa.get=function(e){return D(this[e=S(e)])?this[e]():this},Oa.invalidAt=function(){return u(this).overflow},Oa.isAfter=function(e,t){var a=p(e)?e:De(e);return!(!this.isValid()||!a.isValid())&&("millisecond"===(t=S(n(t)?"millisecond":t))?this.valueOf()>a.valueOf():a.valueOf()<this.clone().startOf(t).valueOf())},Oa.isBefore=function(e,t){var a=p(e)?e:De(e);return!(!this.isValid()||!a.isValid())&&("millisecond"===(t=S(n(t)?"millisecond":t))?this.valueOf()<a.valueOf():this.clone().endOf(t).valueOf()<a.valueOf())},Oa.isBetween=function(e,t,a,n){return("("===(n=n||"()")[0]?this.isAfter(e,a):!this.isBefore(e,a))&&(")"===n[1]?this.isBefore(t,a):!this.isAfter(t,a))},Oa.isSame=function(e,t){var a,n=p(e)?e:De(e);return!(!this.isValid()||!n.isValid())&&("millisecond"===(t=S(t||"millisecond"))?this.valueOf()===n.valueOf():(a=n.valueOf(),this.clone().startOf(t).valueOf()<=a&&a<=this.clone().endOf(t).valueOf()))},Oa.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},Oa.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},Oa.isValid=function(){return c(this)},Oa.lang=Da,Oa.locale=Re,Oa.localeData=Ae,Oa.max=pa,Oa.min=fa,Oa.parsingFlags=function(){return d({},u(this))},Oa.set=function(e,t){if("object"==_typeof(e))for(var a=function(e){var t=[];for(var a in e)t.push({unit:a,priority:ct[a]});return t.sort((function(e,t){return e.priority-t.priority})),t}(e=Y(e)),n=0;n<a.length;n++)this[a[n].unit](e[a[n].unit]);else if(D(this[e=S(e)]))return this[e](t);return this},Oa.startOf=function(e){switch(e=S(e)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===e&&this.weekday(0),"isoWeek"===e&&this.isoWeekday(1),"quarter"===e&&this.month(3*Math.floor(this.month()/3)),this},Oa.subtract=_a,Oa.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},Oa.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},Oa.toDate=function(){return new Date(this.valueOf())},Oa.toISOString=function(){if(!this.isValid())return null;var e=this.clone().utc();return e.year()<0||e.year()>9999?V(e,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):D(Date.prototype.toISOString)?this.toDate().toISOString():V(e,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},Oa.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var e="moment",t="";this.isLocal()||(e=0===this.utcOffset()?"moment.utc":"moment.parseZone",t="Z");var a="["+e+'("]',n=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",s=t+'[")]';return this.format(a+n+"-MM-DD[T]HH:mm:ss.SSS"+s)},Oa.toJSON=function(){return this.isValid()?this.toISOString():null},Oa.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},Oa.unix=function(){return Math.floor(this.valueOf()/1e3)},Oa.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},Oa.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},Oa.year=Jt,Oa.isLeapYear=function(){return J(this.year())},Oa.weekYear=function(e){return Fe.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},Oa.isoWeekYear=function(e){return Fe.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},Oa.quarter=Oa.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},Oa.month=E,Oa.daysInMonth=function(){return L(this.year(),this.month())},Oa.week=Oa.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),"d")},Oa.isoWeek=Oa.isoWeeks=function(e){var t=ee(this,1,4).week;return null==e?t:this.add(7*(e-t),"d")},Oa.weeksInYear=function(){var e=this.localeData()._week;return te(this.year(),e.dow,e.doy)},Oa.isoWeeksInYear=function(){return te(this.year(),1,4)},Oa.date=ba,Oa.day=Oa.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return"string"!=typeof e?e:isNaN(e)?"number"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,"d")):t},Oa.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,"d")},Oa.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return"string"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},Oa.dayOfYear=function(e){var t=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==e?t:this.add(e-t,"d")},Oa.hour=Oa.hours=na,Oa.minute=Oa.minutes=xa,Oa.second=Oa.seconds=Sa,Oa.millisecond=Oa.milliseconds=Ya,Oa.utcOffset=function(t,a,n){var s,r=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null!=t){if("string"==typeof t){if(null===(t=Oe(jt,t)))return this}else Math.abs(t)<16&&!n&&(t*=60);return!this._isUTC&&a&&(s=je(this)),this._offset=t,this._isUTC=!0,null!=s&&this.add(s,"m"),r!==t&&(!a||this._changeInProgress?$e(this,Pe(t-r,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,e.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:je(this)},Oa.utc=function(e){return this.utcOffset(0,e)},Oa.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(je(this),"m")),this},Oa.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var e=Oe(Tt,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},Oa.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?De(e).utcOffset():0,(this.utcOffset()-e)%60==0)},Oa.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},Oa.isLocal=function(){return!!this.isValid()&&!this._isUTC},Oa.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},Oa.isUtc=Ce,Oa.isUTC=Ce,Oa.zoneAbbr=function(){return this._isUTC?"UTC":""},Oa.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},Oa.dates=w("dates accessor is deprecated. Use date instead.",ba),Oa.months=w("months accessor is deprecated. Use month instead",E),Oa.years=w("years accessor is deprecated. Use year instead",Jt),Oa.zone=w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",(function(e,t){return null!=e?("string"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),Oa.isDSTShifted=w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",(function(){if(!n(this._isDSTShifted))return this._isDSTShifted;var e={};if(m(e,this),(e=ke(e))._a){var t=e._isUTC?l(e._a):De(e._a);this._isDSTShifted=this.isValid()&&y(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}));var Ta=x.prototype;Ta.calendar=function(e,t,a){var n=this._calendar[e]||this._calendar.sameElse;return D(n)?n.call(t,a):n},Ta.longDateFormat=function(e){var t=this._longDateFormat[e],a=this._longDateFormat[e.toUpperCase()];return t||!a?t:(this._longDateFormat[e]=a.replace(/MMMM|MM|DD|dddd/g,(function(e){return e.slice(1)})),this._longDateFormat[e])},Ta.invalidDate=function(){return this._invalidDate},Ta.ordinal=function(e){return this._ordinal.replace("%d",e)},Ta.preparse=Le,Ta.postformat=Le,Ta.relativeTime=function(e,t,a,n){var s=this._relativeTime[a];return D(s)?s(e,t,a,n):s.replace(/%d/i,e)},Ta.pastFuture=function(e,t){var a=this._relativeTime[e>0?"future":"past"];return D(a)?a(t):a.replace(/%s/i,t)},Ta.set=function(e){var t,a;for(a in e)D(t=e[a])?this[a]=t:this["_"+a]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Ta.months=function(e,a){return e?t(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ut).test(a)?"format":"standalone"][e.month()]:t(this._months)?this._months:this._months.standalone},Ta.monthsShort=function(e,a){return e?t(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ut.test(a)?"format":"standalone"][e.month()]:t(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Ta.monthsParse=function(e,t,a){var n,s,r;if(this._monthsParseExact)return U.call(this,e,t,a);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;n<12;n++){if(s=l([2e3,n]),a&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(s,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(s,"").replace(".","")+"$","i")),a||this._monthsParse[n]||(r="^"+this.months(s,"")+"|^"+this.monthsShort(s,""),this._monthsParse[n]=new RegExp(r.replace(".",""),"i")),a&&"MMMM"===t&&this._longMonthsParse[n].test(e))return n;if(a&&"MMM"===t&&this._shortMonthsParse[n].test(e))return n;if(!a&&this._monthsParse[n].test(e))return n}},Ta.monthsRegex=function(e){return this._monthsParseExact?(o(this,"_monthsRegex")||Z.call(this),e?this._monthsStrictRegex:this._monthsRegex):(o(this,"_monthsRegex")||(this._monthsRegex=Bt),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},Ta.monthsShortRegex=function(e){return this._monthsParseExact?(o(this,"_monthsRegex")||Z.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(o(this,"_monthsShortRegex")||(this._monthsShortRegex=Zt),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},Ta.week=function(e){return ee(e,this._week.dow,this._week.doy).week},Ta.firstDayOfYear=function(){return this._week.doy},Ta.firstDayOfWeek=function(){return this._week.dow},Ta.weekdays=function(e,a){return e?t(this._weekdays)?this._weekdays[e.day()]:this._weekdays[this._weekdays.isFormat.test(a)?"format":"standalone"][e.day()]:t(this._weekdays)?this._weekdays:this._weekdays.standalone},Ta.weekdaysMin=function(e){return e?this._weekdaysMin[e.day()]:this._weekdaysMin},Ta.weekdaysShort=function(e){return e?this._weekdaysShort[e.day()]:this._weekdaysShort},Ta.weekdaysParse=function(e,t,a){var n,s,r;if(this._weekdaysParseExact)return ae.call(this,e,t,a);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),n=0;n<7;n++){if(s=l([2e3,1]).day(n),a&&!this._fullWeekdaysParse[n]&&(this._fullWeekdaysParse[n]=new RegExp("^"+this.weekdays(s,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[n]=new RegExp("^"+this.weekdaysShort(s,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[n]=new RegExp("^"+this.weekdaysMin(s,"").replace(".",".?")+"$","i")),this._weekdaysParse[n]||(r="^"+this.weekdays(s,"")+"|^"+this.weekdaysShort(s,"")+"|^"+this.weekdaysMin(s,""),this._weekdaysParse[n]=new RegExp(r.replace(".",""),"i")),a&&"dddd"===t&&this._fullWeekdaysParse[n].test(e))return n;if(a&&"ddd"===t&&this._shortWeekdaysParse[n].test(e))return n;if(a&&"dd"===t&&this._minWeekdaysParse[n].test(e))return n;if(!a&&this._weekdaysParse[n].test(e))return n}},Ta.weekdaysRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||ne.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(o(this,"_weekdaysRegex")||(this._weekdaysRegex=Xt),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},Ta.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||ne.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(o(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=ea),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Ta.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(o(this,"_weekdaysRegex")||ne.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(o(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=ta),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Ta.isPM=function(e){return"p"===(e+"").toLowerCase().charAt(0)},Ta.meridiem=function(e,t,a){return e>11?a?"pm":"PM":a?"am":"AM"},le("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===g(e%100/10)?"th":1===t?"st":2===t?"nd":3===t?"rd":"th")}}),e.lang=w("moment.lang is deprecated. Use moment.locale instead.",le),e.langData=w("moment.langData is deprecated. Use moment.localeData instead.",ce);var ja=Math.abs,Ca=Qe("ms"),Pa=Qe("s"),za=Qe("m"),Wa=Qe("h"),Va=Qe("d"),$a=Qe("w"),Ra=Qe("M"),Aa=Qe("y"),Na=Ke("milliseconds"),Fa=Ke("seconds"),Ha=Ke("minutes"),Ia=Ke("hours"),La=Ke("days"),Ua=Ke("months"),Ga=Ke("years"),Ea=Math.round,Za={ss:44,s:45,m:45,h:22,d:26,M:11},Ba=Math.abs,Ja=xe.prototype;return Ja.isValid=function(){return this._isValid},Ja.abs=function(){var e=this._data;return this._milliseconds=ja(this._milliseconds),this._days=ja(this._days),this._months=ja(this._months),e.milliseconds=ja(e.milliseconds),e.seconds=ja(e.seconds),e.minutes=ja(e.minutes),e.hours=ja(e.hours),e.months=ja(e.months),e.years=ja(e.years),this},Ja.add=function(e,t){return Ze(this,e,t,1)},Ja.subtract=function(e,t){return Ze(this,e,t,-1)},Ja.as=function(e){if(!this.isValid())return NaN;var t,a,n=this._milliseconds;if("month"===(e=S(e))||"year"===e)return t=this._days+n/864e5,a=this._months+Je(t),"month"===e?a:a/12;switch(t=this._days+Math.round(qe(this._months)),e){case"week":return t/7+n/6048e5;case"day":return t+n/864e5;case"hour":return 24*t+n/36e5;case"minute":return 1440*t+n/6e4;case"second":return 86400*t+n/1e3;case"millisecond":return Math.floor(864e5*t)+n;default:throw new Error("Unknown unit "+e)}},Ja.asMilliseconds=Ca,Ja.asSeconds=Pa,Ja.asMinutes=za,Ja.asHours=Wa,Ja.asDays=Va,Ja.asWeeks=$a,Ja.asMonths=Ra,Ja.asYears=Aa,Ja.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*g(this._months/12):NaN},Ja._bubble=function(){var e,t,a,n,s,r=this._milliseconds,i=this._days,o=this._months,d=this._data;return r>=0&&i>=0&&o>=0||r<=0&&i<=0&&o<=0||(r+=864e5*Be(qe(o)+i),i=0,o=0),d.milliseconds=r%1e3,e=v(r/1e3),d.seconds=e%60,t=v(e/60),d.minutes=t%60,a=v(t/60),d.hours=a%24,i+=v(a/24),o+=s=v(Je(i)),i-=Be(qe(s)),n=v(o/12),o%=12,d.days=i,d.months=o,d.years=n,this},Ja.get=function(e){return e=S(e),this.isValid()?this[e+"s"]():NaN},Ja.milliseconds=Na,Ja.seconds=Fa,Ja.minutes=Ha,Ja.hours=Ia,Ja.days=La,Ja.weeks=function(){return v(this.days()/7)},Ja.months=Ua,Ja.years=Ga,Ja.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),a=function(e,t,a){var n=Pe(e).abs(),s=Ea(n.as("s")),r=Ea(n.as("m")),i=Ea(n.as("h")),o=Ea(n.as("d")),d=Ea(n.as("M")),l=Ea(n.as("y")),u=s<=Za.ss&&["s",s]||s<Za.s&&["ss",s]||r<=1&&["m"]||r<Za.m&&["mm",r]||i<=1&&["h"]||i<Za.h&&["hh",i]||o<=1&&["d"]||o<Za.d&&["dd",o]||d<=1&&["M"]||d<Za.M&&["MM",d]||l<=1&&["y"]||["yy",l];return u[2]=t,u[3]=+e>0,u[4]=a,Xe.apply(null,u)}(this,!e,t);return e&&(a=t.pastFuture(+this,a)),t.postformat(a)},Ja.toISOString=et,Ja.toString=et,Ja.toJSON=et,Ja.locale=Re,Ja.localeData=Ae,Ja.toIsoString=w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",et),Ja.lang=Da,z("X",0,0,"unix"),z("x",0,0,"valueOf"),R("x",Ot),R("X",/[+-]?\d+(\.\d{1,3})?/),F("X",(function(e,t,a){a._d=new Date(1e3*parseFloat(e,10))})),F("x",(function(e,t,a){a._d=new Date(g(e))})),e.version="2.18.1",function(e){tt=e}(De),e.fn=Oa,e.min=function(){var e=[].slice.call(arguments,0);return be("isBefore",e)},e.max=function(){var e=[].slice.call(arguments,0);return be("isAfter",e)},e.now=function(){return Date.now?Date.now():+new Date},e.utc=l,e.unix=function(e){return De(1e3*e)},e.months=function(e,t){return Ge(e,t,"months")},e.isDate=r,e.locale=le,e.invalid=h,e.duration=Pe,e.isMoment=p,e.weekdays=function(e,t,a){return Ee(e,t,a,"weekdays")},e.parseZone=function(){return De.apply(null,arguments).parseZone()},e.localeData=ce,e.isDuration=Me,e.monthsShort=function(e,t){return Ge(e,t,"monthsShort")},e.weekdaysMin=function(e,t,a){return Ee(e,t,a,"weekdaysMin")},e.defineLocale=ue,e.updateLocale=function(e,t){if(null!=t){var a,n=sa;null!=ra[e]&&(n=ra[e]._config),(a=new x(t=b(n,t))).parentLocale=ra[e],ra[e]=a,le(e)}else null!=ra[e]&&(null!=ra[e].parentLocale?ra[e]=ra[e].parentLocale:null!=ra[e]&&delete ra[e]);return ra[e]},e.locales=function(){return lt(ra)},e.weekdaysShort=function(e,t,a){return Ee(e,t,a,"weekdaysShort")},e.normalizeUnits=S,e.relativeTimeRounding=function(e){return void 0===e?Ea:"function"==typeof e&&(Ea=e,!0)},e.relativeTimeThreshold=function(e,t){return void 0!==Za[e]&&(void 0===t?Za[e]:(Za[e]=t,"s"===e&&(Za.ss=t-1),!0))},e.calendarFormat=function(e,t){var a=e.diff(t,"days",!0);return a<-6?"sameElse":a<-1?"lastWeek":a<0?"lastDay":a<1?"sameDay":a<2?"nextDay":a<7?"nextWeek":"sameElse"},e.prototype=Oa,e})),function(e){"function"==typeof define&&define.amd?define(["jquery","moment"],e):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=e(require("jquery"),require("moment")):e(jQuery,moment)}((function(e,t){"use strict";e.dateRangePickerLanguages={default:{selected:"Selected:",day:"Day",days:"Days",apply:"Close","week-1":"mo","week-2":"tu","week-3":"we","week-4":"th","week-5":"fr","week-6":"sa","week-7":"su","week-number":"W","month-name":["january","february","march","april","may","june","july","august","september","october","november","december"],shortcuts:"Shortcuts","custom-values":"Custom Values",past:"Past",following:"Following",previous:"Previous","prev-week":"Week","prev-month":"Month","prev-year":"Year",next:"Next","next-week":"Week","next-month":"Month","next-year":"Year","less-than":"Date range should not be more than %d days","more-than":"Date range should not be less than %d days","default-more":"Please select a date range longer than %d days","default-single":"Please select a date","default-less":"Please select a date range less than %d days","default-range":"Please select a date range between %d and %d days","default-default":"Please select a date range",time:"Time",hour:"Hour",minute:"Minute"},id:{selected:"Terpilih:",day:"Hari",days:"Hari",apply:"Tutup","week-1":"sen","week-2":"sel","week-3":"rab","week-4":"kam","week-5":"jum","week-6":"sab","week-7":"min","week-number":"W","month-name":["januari","februari","maret","april","mei","juni","juli","agustus","september","oktober","november","desember"],shortcuts:"Pintas","custom-values":"Nilai yang ditentukan",past:"Yang Lalu",following:"Mengikuti",previous:"Sebelumnya","prev-week":"Minggu","prev-month":"Bulan","prev-year":"Tahun",next:"Selanjutnya","next-week":"Minggu","next-month":"Bulan","next-year":"Tahun","less-than":"Tanggal harus lebih dari %d hari","more-than":"Tanggal harus kurang dari %d hari","default-more":"Jarak tanggal harus lebih lama dari %d hari","default-single":"Silakan pilih tanggal","default-less":"Jarak rentang tanggal tidak boleh lebih lama dari %d hari","default-range":"Rentang tanggal harus antara %d dan %d hari","default-default":"Silakan pilih rentang tanggal",time:"Waktu",hour:"Jam",minute:"Menit"},az:{selected:"SeÃ§ildi:",day:" gÃ¼n",days:" gÃ¼n",apply:"tÉtbiq","week-1":"1","week-2":"2","week-3":"3","week-4":"4","week-5":"5","week-6":"6","week-7":"7","month-name":["yanvar","fevral","mart","aprel","may","iyun","iyul","avqust","sentyabr","oktyabr","noyabr","dekabr"],shortcuts:"QÄ±sayollar",past:"KeÃ§miÅ",following:"NÃ¶vbÉti",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ÃncÉki hÉftÉ","prev-month":"ÃncÉki ay","prev-year":"ÃncÉki il",next:"&nbsp;&nbsp;&nbsp;","next-week":"NÃ¶vbÉti hÉftÉ","next-month":"NÃ¶vbÉti ay","next-year":"NÃ¶vbÉti il","less-than":"Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn Ã§ox olmamalÄ±dÄ±r","more-than":"Tarix aralÄ±ÄÄ± %d gÃ¼ndÉn az olmamalÄ±dÄ±r","default-more":"%d gÃ¼ndÉn Ã§ox bir tarix seÃ§in","default-single":"Tarix seÃ§in","default-less":"%d gÃ¼ndÉn az bir tarix seÃ§in","default-range":"%d vÉ %d gÃ¼n aralÄ±ÄÄ±nda tarixlÉr seÃ§in","default-default":"Tarix aralÄ±ÄÄ± seÃ§in"},bg:{selected:"ÐÐ·Ð±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½",days:"ÐÐ½Ð¸",apply:"ÐÐ°ÑÐ²Ð¾ÑÐ¸","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð½Ð´","week-number":"Ð¡","month-name":["ÑÐ½ÑÐ°ÑÐ¸","ÑÐµÐ²ÑÑÐ°ÑÐ¸","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐ¸Ð»","Ð¼Ð°Ð¹","ÑÐ½Ð¸","ÑÐ»Ð¸","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ¿ÑÐµÐ¼Ð²ÑÐ¸","Ð¾ÐºÑÐ¾Ð¼Ð²ÑÐ¸","Ð½Ð¾ÐµÐ¼Ð²ÑÐ¸","Ð´ÐµÐºÐµÐ¼Ð²ÑÐ¸"],shortcuts:"ÐÑÐµÐºÐ¸ Ð¿ÑÑÐ¸ÑÐ°","custom-values":"ÐÐµÑÑÐ¾Ð½Ð°Ð»Ð¸Ð·Ð¸ÑÐ°Ð½Ð¸ ÑÑÐ¾Ð¹Ð½Ð¾ÑÑÐ¸",past:"ÐÐ¸Ð½Ð°Ð»",following:"Ð¡Ð»ÐµÐ´Ð²Ð°Ñ",previous:"ÐÑÐµÐ´Ð¸ÑÐµÐ½","prev-week":"Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°","prev-month":"ÐÐµÑÐµÑ","prev-year":"ÐÐ¾Ð´Ð¸Ð½Ð°",next:"Ð¡Ð»ÐµÐ´Ð²Ð°Ñ","next-week":"Ð¡ÐµÐ´Ð¼Ð¸ÑÐ°","next-month":"ÐÐµÑÐµÑ","next-year":"ÐÐ¾Ð´Ð¸Ð½Ð°","less-than":"ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾Ð²ÐµÑÐµ Ð¾Ñ %d Ð´Ð½Ð¸","more-than":"ÐÐµÑÐ¸Ð¾Ð´ÑÑ Ð¾Ñ Ð²ÑÐµÐ¼Ðµ Ð½Ðµ ÑÑÑÐ±Ð²Ð° Ð´Ð° Ðµ Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ %d Ð´Ð½Ð¸","default-more":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-Ð´ÑÐ»ÑÐ³ Ð¾Ñ %d Ð´Ð½Ð¸","default-single":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð´Ð°ÑÐ°","default-less":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¿Ð¾-ÐºÑÑ Ð¾Ñ %d Ð´Ð½Ð¸","default-range":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½Ð¸","default-default":"ÐÐ¾Ð»Ñ Ð¸Ð·Ð±ÐµÑÐµÑÐµ Ð¿ÐµÑÐ¸Ð¾Ð´",time:"ÐÑÐµÐ¼Ðµ",hour:"Ð§Ð°Ñ",minute:"ÐÐ¸Ð½ÑÑÐ°"},cn:{selected:"å·²éæ©:",day:"å¤©",days:"å¤©",apply:"ç¡®å®","week-1":"ä¸","week-2":"äº","week-3":"ä¸","week-4":"å","week-5":"äº","week-6":"å­","week-7":"æ¥","week-number":"å¨","month-name":["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],shortcuts:"å¿«æ·éæ©",past:"è¿å»",following:"å°æ¥",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ä¸å¨","prev-month":"ä¸ä¸ªæ","prev-year":"å»å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ä¸å¨","next-month":"ä¸ä¸ªæ","next-year":"æå¹´","less-than":"æéæ¥æèå´ä¸è½å¤§äº%då¤©","more-than":"æéæ¥æèå´ä¸è½å°äº%då¤©","default-more":"è¯·éæ©å¤§äº%då¤©çæ¥æèå´","default-less":"è¯·éæ©å°äº%då¤©çæ¥æèå´","default-range":"è¯·éæ©%då¤©å°%då¤©çæ¥æèå´","default-single":"è¯·éæ©ä¸ä¸ªæ¥æ","default-default":"è¯·éæ©ä¸ä¸ªæ¥æèå´",time:"æ¶é´",hour:"å°æ¶",minute:"åé"},cz:{selected:"VybrÃ¡no:",day:"Den",days:"Dny",apply:"ZavÅÃ­t","week-1":"po","week-2":"Ãºt","week-3":"st","week-4":"Ät","week-5":"pÃ¡","week-6":"so","week-7":"ne","month-name":["leden","Ãºnor","bÅezen","duben","kvÄten","Äerven","Äervenec","srpen","zÃ¡ÅÃ­","ÅÃ­jen","listopad","prosinec"],shortcuts:"Zkratky",past:"po",following:"nÃ¡sledujÃ­cÃ­",previous:"pÅedchozÃ­","prev-week":"tÃ½den","prev-month":"mÄsÃ­c","prev-year":"rok",next:"dalÅ¡Ã­","next-week":"tÃ½den","next-month":"mÄsÃ­c","next-year":"rok","less-than":"Rozsah data by nemÄl bÃ½t vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯","more-than":"Rozsah data by nemÄl bÃ½t menÅ¡Ã­ neÅ¾ %d dnÅ¯","default-more":"ProsÃ­m zvolte rozsah data vÄtÅ¡Ã­ neÅ¾ %d dnÅ¯","default-single":"ProsÃ­m zvolte datum","default-less":"ProsÃ­m zvolte rozsah data menÅ¡Ã­ neÅ¾ %d dnÅ¯","default-range":"ProsÃ­m zvolte rozsah data mezi %d a %d dny","default-default":"ProsÃ­m zvolte rozsah data"},de:{selected:"Auswahl:",day:"Tag",days:"Tage",apply:"SchlieÃen","week-1":"mo","week-2":"di","week-3":"mi","week-4":"do","week-5":"fr","week-6":"sa","week-7":"so","month-name":["januar","februar","mÃ¤rz","april","mai","juni","juli","august","september","oktober","november","dezember"],shortcuts:"Schnellwahl",past:"Vorherige",following:"Folgende",previous:"Vorherige","prev-week":"Woche","prev-month":"Monat","prev-year":"Jahr",next:"NÃ¤chste","next-week":"Woche","next-month":"Monat","next-year":"Jahr","less-than":"Datumsbereich darf nicht grÃ¶Ãer sein als %d Tage","more-than":"Datumsbereich darf nicht kleiner sein als %d Tage","default-more":"Bitte mindestens %d Tage auswÃ¤hlen","default-single":"Bitte ein Datum auswÃ¤hlen","default-less":"Bitte weniger als %d Tage auswÃ¤hlen","default-range":"Bitte einen Datumsbereich zwischen %d und %d Tagen auswÃ¤hlen","default-default":"Bitte ein Start- und Enddatum auswÃ¤hlen",Time:"Zeit",hour:"Stunde",minute:"Minute"},es:{selected:"Seleccionado:",day:"DÃ­a",days:"DÃ­as",apply:"Cerrar","week-1":"lu","week-2":"ma","week-3":"mi","week-4":"ju","week-5":"vi","week-6":"sa","week-7":"do","month-name":["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],shortcuts:"Accesos directos",past:"Pasado",following:"Siguiente",previous:"Anterior","prev-week":"Semana","prev-month":"Mes","prev-year":"AÃ±o",next:"Siguiente","next-week":"Semana","next-month":"Mes","next-year":"AÃ±o","less-than":"El rango no deberÃ­a ser mayor de %d dÃ­as","more-than":"El rango no deberÃ­a ser menor de %d dÃ­as","default-more":"Por favor selecciona un rango mayor a %d dÃ­as","default-single":"Por favor selecciona un dÃ­a","default-less":"Por favor selecciona un rango menor a %d dÃ­as","default-range":"Por favor selecciona un rango entre %d y %d dÃ­as","default-default":"Por favor selecciona un rango de fechas."},fr:{selected:"SÃ©lection:",day:"Jour",days:"Jours",apply:"Fermer","week-1":"lu","week-2":"ma","week-3":"me","week-4":"je","week-5":"ve","week-6":"sa","week-7":"di","month-name":["janvier","fÃ©vrier","mars","avril","mai","juin","juillet","aoÃ»t","septembre","octobre","novembre","dÃ©cembre"],shortcuts:"Raccourcis",past:"PassÃ©",following:"Suivant",previous:"PrÃ©cÃ©dent","prev-week":"Semaine","prev-month":"Mois","prev-year":"AnnÃ©e",next:"Suivant","next-week":"Semaine","next-month":"Mois","next-year":"AnnÃ©e","less-than":"L'intervalle ne doit pas Ãªtre supÃ©rieure Ã  %d jours","more-than":"L'intervalle ne doit pas Ãªtre infÃ©rieure Ã  %d jours","default-more":"Merci de choisir une intervalle supÃ©rieure Ã  %d jours","default-single":"Merci de choisir une date","default-less":"Merci de choisir une intervalle infÃ©rieure %d jours","default-range":"Merci de choisir une intervalle comprise entre %d et %d jours","default-default":"Merci de choisir une date"},hu:{selected:"KivÃ¡lasztva:",day:"Nap",days:"Nap",apply:"Ok","week-1":"h","week-2":"k","week-3":"sz","week-4":"cs","week-5":"p","week-6":"sz","week-7":"v","month-name":["januÃ¡r","februÃ¡r","mÃ¡rcius","Ã¡prilis","mÃ¡jus","jÃºnius","jÃºlius","augusztus","szeptember","oktÃ³ber","november","december"],shortcuts:"GyorsvÃ¡lasztÃ³",past:"MÃºlt",following:"KÃ¶vetkezÅ",previous:"ElÅzÅ","prev-week":"HÃ©t","prev-month":"HÃ³nap","prev-year":"Ãv",next:"KÃ¶vetkezÅ","next-week":"HÃ©t","next-month":"HÃ³nap","next-year":"Ãv","less-than":"A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l","more-than":"A kivÃ¡lasztÃ¡s nem lehet tÃ¶bb %d napnÃ¡l","default-more":"VÃ¡lassz ki egy idÅszakot ami hosszabb mint %d nap","default-single":"VÃ¡lassz egy napot","default-less":"VÃ¡lassz ki egy idÅszakot ami rÃ¶videbb mint %d nap","default-range":"VÃ¡lassz ki egy %d - %d nap hosszÃº idÅszakot","default-default":"VÃ¡lassz ki egy idÅszakot"},it:{selected:"Selezionati:",day:"Giorno",days:"Giorni",apply:"Chiudi","week-1":"lu","week-2":"ma","week-3":"me","week-4":"gi","week-5":"ve","week-6":"sa","week-7":"do","month-name":["gennaio","febbraio","marzo","aprile","maggio","giugno","luglio","agosto","settembre","ottobre","novembre","dicembre"],shortcuts:"Scorciatoie",past:"Scorso",following:"Successivo",previous:"Precedente","prev-week":"Settimana","prev-month":"Mese","prev-year":"Anno",next:"Prossimo","next-week":"Settimana","next-month":"Mese","next-year":"Anno","less-than":"L'intervallo non dev'essere maggiore di %d giorni","more-than":"L'intervallo non dev'essere minore di %d giorni","default-more":"Seleziona un intervallo maggiore di %d giorni","default-single":"Seleziona una data","default-less":"Seleziona un intervallo minore di %d giorni","default-range":"Seleziona un intervallo compreso tra i %d e i %d giorni","default-default":"Seleziona un intervallo di date"},ko:{selected:"ê¸°ê°:",day:"ì¼",days:"ì¼ê°",apply:"ë«ê¸°","week-1":"ì","week-2":"í","week-3":"ì","week-4":"ëª©","week-5":"ê¸","week-6":"í ","week-7":"ì¼","week-number":"ì£¼","month-name":["1ì","2ì","3ì","4ì","5ì","6ì","7ì","8ì","9ì","10ì","11ì","12ì"],shortcuts:"ë¨ì¶í¤ë¤",past:"ì§ë(ì¤ëê¸°ì¤)",following:"ì´í(ì¤ëê¸°ì¤)",previous:"ì´ì ","prev-week":"1ì£¼","prev-month":"1ë¬","prev-year":"1ë",next:"ë¤ì","next-week":"1ì£¼","next-month":"1ë¬","next-year":"1ë","less-than":"ë ì§ ë²ìë %d ì¼ë³´ë¤ ë§ì ì ììµëë¤","more-than":"ë ì§ ë²ìë %d ì¼ë³´ë¤ ìì ì ììµëë¤","default-more":"ë ì§ ë²ìë¥¼ %d ì¼ë³´ë¤ ê¸¸ê² ì íí´ ì£¼ì¸ì","default-single":"ë ì§ë¥¼ ì íí´ ì£¼ì¸ì","default-less":"%d ì¼ë³´ë¤ ìì ë ì§ë¥¼ ì íí´ ì£¼ì¸ì","default-range":"%dì %d ì¼ ì¬ì´ì ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì","default-default":"ë ì§ ë²ìë¥¼ ì íí´ ì£¼ì¸ì",time:"ìê°",hour:"ì",minute:"ë¶"},no:{selected:"Valgt:",day:"Dag",days:"Dager",apply:"Lukk","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¸","week-7":"sÃ¸","month-name":["januar","februar","mars","april","mai","juni","juli","august","september","oktober","november","desember"],shortcuts:"Snarveier","custom-values":"Egendefinerte Verdier",past:"Over",following:"FÃ¸lger",previous:"Forrige","prev-week":"Uke","prev-month":"MÃ¥ned","prev-year":"Ãr",next:"Neste","next-week":"Uke","next-month":"MÃ¥ned","next-year":"Ãr","less-than":"Datoperioden skal ikkje vÃ¦re lengre enn %d dager","more-than":"Datoperioden skal ikkje vÃ¦re kortere enn %d dager","default-more":"Vennligst velg ein datoperiode lengre enn %d dager","default-single":"Vennligst velg ein dato","default-less":"Vennligst velg ein datoperiode mindre enn %d dager","default-range":"Vennligst velg ein datoperiode mellom %d og %d dager","default-default":"Vennligst velg ein datoperiode",time:"Tid",hour:"Time",minute:"Minutter"},nl:{selected:"Geselecteerd:",day:"Dag",days:"Dagen",apply:"Ok","week-1":"ma","week-2":"di","week-3":"wo","week-4":"do","week-5":"vr","week-6":"za","week-7":"zo","month-name":["januari","februari","maart","april","mei","juni","juli","augustus","september","oktober","november","december"],shortcuts:"Snelkoppelingen","custom-values":"Aangepaste waarden",past:"Verleden",following:"Komend",previous:"Vorige","prev-week":"Week","prev-month":"Maand","prev-year":"Jaar",next:"Volgende","next-week":"Week","next-month":"Maand","next-year":"Jaar","less-than":"Interval moet langer dan %d dagen zijn","more-than":"Interval mag niet minder dan %d dagen zijn","default-more":"Selecteer een interval langer dan %dagen","default-single":"Selecteer een datum","default-less":"Selecteer een interval minder dan %d dagen","default-range":"Selecteer een interval tussen %d en %d dagen","default-default":"Selecteer een interval",time:"Tijd",hour:"Uur",minute:"Minuut"},ru:{selected:"ÐÑÐ±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½Ñ",days:"ÐÐ½ÐµÐ¹",apply:"ÐÑÐ¸Ð¼ÐµÐ½Ð¸ÑÑ","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð²Ñ","month-name":["ÑÐ½Ð²Ð°ÑÑ","ÑÐµÐ²ÑÐ°Ð»Ñ","Ð¼Ð°ÑÑ","Ð°Ð¿ÑÐµÐ»Ñ","Ð¼Ð°Ð¹","Ð¸ÑÐ½Ñ","Ð¸ÑÐ»Ñ","Ð°Ð²Ð³ÑÑÑ","ÑÐµÐ½ÑÑÐ±ÑÑ","Ð¾ÐºÑÑÐ±ÑÑ","Ð½Ð¾ÑÐ±ÑÑ","Ð´ÐµÐºÐ°Ð±ÑÑ"],shortcuts:"ÐÑÑÑÑÑÐ¹ Ð²ÑÐ±Ð¾Ñ","custom-values":"ÐÐ¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»ÑÑÐºÐ¸Ðµ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ",past:"ÐÑÐ¾ÑÐµÐ´ÑÐ¸Ðµ",following:"Ð¡Ð»ÐµÐ´ÑÑÑÐ¸Ðµ",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ÐÐµÐ´ÐµÐ»Ñ","prev-month":"ÐÐµÑÑÑ","prev-year":"ÐÐ¾Ð´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ÐÐµÐ´ÐµÐ»Ñ","next-month":"ÐÐµÑÑÑ","next-year":"ÐÐ¾Ð´","less-than":"ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹","more-than":"ÐÐ¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-more":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð±Ð¾Ð»ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-single":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð°ÑÑ","default-less":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÑÐµ %d Ð´Ð½ÐµÐ¹","default-range":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ¶Ð´Ñ %d Ð¸ %d Ð´Ð½ÑÐ¼Ð¸","default-default":"ÐÐ¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð²ÑÐ±ÐµÑÐ¸ÑÐµ Ð´Ð¸Ð°Ð¿Ð°Ð·Ð¾Ð½",time:"ÐÑÐµÐ¼Ñ",hour:"Ð§Ð°ÑÑ",minute:"ÐÐ¸Ð½ÑÑÑ"},uk:{selected:"ÐÐ¸Ð±ÑÐ°Ð½Ð¾:",day:"ÐÐµÐ½Ñ",days:"ÐÐ½ÑÐ²",apply:"ÐÐ°ÑÑÐ¾ÑÑÐ²Ð°ÑÐ¸","week-1":"Ð¿Ð½","week-2":"Ð²Ñ","week-3":"ÑÑ","week-4":"ÑÑ","week-5":"Ð¿Ñ","week-6":"ÑÐ±","week-7":"Ð½Ð´","month-name":["ÑÑÑÐµÐ½Ñ","Ð»ÑÑÐ¸Ð¹","Ð±ÐµÑÐµÐ·ÐµÐ½Ñ","ÐºÐ²ÑÑÐµÐ½Ñ","ÑÑÐ°Ð²ÐµÐ½Ñ","ÑÐµÑÐ²ÐµÐ½Ñ","Ð»Ð¸Ð¿ÐµÐ½Ñ","ÑÐµÑÐ¿ÐµÐ½Ñ","Ð²ÐµÑÐµÑÐµÐ½Ñ","Ð¶Ð¾Ð²ÑÐµÐ½Ñ","Ð»Ð¸ÑÑÐ¾Ð¿Ð°Ð´","Ð³ÑÑÐ´ÐµÐ½Ñ"],shortcuts:"Ð¨Ð²Ð¸Ð´ÐºÐ¸Ð¹ Ð²Ð¸Ð±ÑÑ","custom-values":"ÐÐ½Ð°ÑÐµÐ½Ð½Ñ ÐºÐ¾ÑÐ¸ÑÑÑÐ²Ð°ÑÐ°",past:"ÐÐ¸Ð½ÑÐ»Ñ",following:"ÐÐ°ÑÑÑÐ¿Ð½Ñ",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ","prev-month":"ÐÑÑÑÑÑ","prev-year":"Ð ÑÐº",next:"&nbsp;&nbsp;&nbsp;","next-week":"Ð¢Ð¸Ð¶Ð´ÐµÐ½Ñ","next-month":"ÐÑÑÑÑÑ","next-year":"Ð ÑÐº","less-than":"ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð±ÑÐ»ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²","more-than":"ÐÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð½Ðµ Ð¼Ð¾Ð¶Ðµ Ð±ÑÑÐ¸ Ð¼ÐµÐ½ÑÑ Ð½ÑÐ¶ %d Ð´Ð½ÑÐ²","default-more":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð±ÑÐ»ÑÑÐµ %d Ð´Ð½ÑÐ²","default-single":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´Ð°ÑÑ","default-less":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÐµÐ½ÑÐµ %d Ð´Ð½ÑÐ²","default-range":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½ Ð¼ÑÐ¶ %d ÑÐ° %d Ð´Ð½ÑÐ¼Ð¸","default-default":"ÐÑÐ´Ñ Ð»Ð°ÑÐºÐ° Ð²Ð¸Ð±ÐµÑÑÑÑ Ð´ÑÐ°Ð¿Ð°Ð·Ð¾Ð½",time:"Ð§Ð°Ñ",hour:"ÐÐ¾Ð´Ð¸Ð½Ð¸",minute:"Ð¥Ð²Ð¸Ð»Ð¸Ð½Ð¸"},pl:{selected:"Wybrany:",day:"DzieÅ",days:"Dni",apply:"Zamknij","week-1":"pon","week-2":"wt","week-3":"År","week-4":"czw","week-5":"pt","week-6":"so","week-7":"nd","month-name":["styczeÅ","luty","marzec","kwiecieÅ","maj","czerwiec","lipiec","sierpieÅ","wrzesieÅ","paÅºdziernik","listopad","grudzieÅ"],shortcuts:"SkrÃ³ty","custom-values":"Niestandardowe wartoÅci",past:"PrzeszÅe",following:"NastÄpne",previous:"Poprzednie","prev-week":"tydzieÅ","prev-month":"miesiÄc","prev-year":"rok",next:"NastÄpny","next-week":"tydzieÅ","next-month":"miesiÄc","next-year":"rok","less-than":"Okres nie powinien byÄ dÅuÅ¼szy niÅ¼ %d dni","more-than":"Okres nie powinien byÄ krÃ³tszy niÅ¼  %d ni","default-more":"Wybierz okres dÅuÅ¼szy niÅ¼ %d dni","default-single":"Wybierz datÄ","default-less":"Wybierz okres krÃ³tszy niÅ¼ %d dni","default-range":"Wybierz okres trwajÄcy od %d do %d dni","default-default":"Wybierz okres",time:"Czas",hour:"Godzina",minute:"Minuta"},se:{selected:"Vald:",day:"dag",days:"dagar",apply:"godkÃ¤nn","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¶","week-7":"sÃ¶","month-name":["januari","februari","mars","april","maj","juni","juli","augusti","september","oktober","november","december"],shortcuts:"genvÃ¤gar","custom-values":"Anpassade vÃ¤rden",past:"Ã¶ver",following:"fÃ¶ljande",previous:"fÃ¶rra","prev-week":"vecka","prev-month":"mÃ¥nad","prev-year":"Ã¥r",next:"nÃ¤sta","next-week":"vecka","next-month":"mÃ¥ned","next-year":"Ã¥r","less-than":"Datumintervall bÃ¶r inte vara mindre Ã¤n %d dagar","more-than":"Datumintervall bÃ¶r inte vara mer Ã¤n %d dagar","default-more":"VÃ¤lj ett datumintervall lÃ¤ngre Ã¤n %d dagar","default-single":"VÃ¤lj ett datum","default-less":"VÃ¤lj ett datumintervall mindre Ã¤n %d dagar","default-range":"VÃ¤lj ett datumintervall mellan %d och %d dagar","default-default":"VÃ¤lj ett datumintervall",time:"tid",hour:"timme",minute:"minut"},pt:{selected:"Selecionado:",day:"Dia",days:"Dias",apply:"Fechar","week-1":"S","week-2":"T","week-3":"Q","week-4":"Q","week-5":"S","week-6":"S","week-7":"D","week-number":"N","month-name":["janeiro","fevereiro","marÃ§o","abril","maio","junho","julho","agosto","setembro","outubro","novembro","dezembro"],shortcuts:"Atalhos","custom-values":"Valores Personalizados",past:"Passado",following:"Seguinte",previous:"Anterior","prev-week":"Semana","prev-month":"MÃªs","prev-year":"Ano",next:"PrÃ³ximo","next-week":"PrÃ³xima Semana","next-month":"PrÃ³ximo MÃªs","next-year":"PrÃ³ximo Ano","less-than":"O perÃ­odo selecionado nÃ£o deve ser maior que %d dias","more-than":"O perÃ­odo selecionado nÃ£o deve ser menor que %d dias","default-more":"Selecione um perÃ­odo superior a %d dias","default-single":"Selecione uma data","default-less":"Selecione um perÃ­odo inferior a %d dias","default-range":"Selecione um perÃ­odo de %d a %d dias","default-default":"Selecione um perÃ­odo",time:"Tempo",hour:"Hora",minute:"Minuto"},tc:{selected:"å·²é¸æ:",day:"å¤©",days:"å¤©",apply:"ç¢ºå®","week-1":"ä¸","week-2":"äº","week-3":"ä¸","week-4":"å","week-5":"äº","week-6":"å­","week-7":"æ¥","week-number":"é±","month-name":["ä¸æ","äºæ","ä¸æ","åæ","äºæ","å­æ","ä¸æ","å«æ","ä¹æ","åæ","åä¸æ","åäºæ"],shortcuts:"å¿«éé¸æ",past:"éå»",following:"å°ä¾",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"ä¸é±","prev-month":"ä¸åæ","prev-year":"å»å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"ä¸é±","next-month":"ä¸åæ","next-year":"æå¹´","less-than":"æé¸æ¥æç¯åä¸è½å¤§æ¼%då¤©","more-than":"æé¸æ¥æç¯åä¸è½å°æ¼%då¤©","default-more":"è«é¸æå¤§æ¼%då¤©çæ¥æç¯å","default-less":"è«é¸æå°æ¼%då¤©çæ¥æç¯å","default-range":"è«é¸æ%då¤©å°%då¤©çæ¥æç¯å","default-single":"è«é¸æä¸åæ¥æ","default-default":"è«é¸æä¸åæ¥æç¯å",time:"æ¥æ",hour:"å°æ",minute:"åé"},ja:{selected:"é¸æãã¾ãã:",day:"æ¥",days:"æ¥",apply:"ç¢ºå®","week-1":"æ","week-2":"ç«","week-3":"æ°´","week-4":"æ¨","week-5":"é","week-6":"å","week-7":"æ¥","month-name":["1æ","2æ","3æ","4æ","5æ","6æ","7æ","8æ","9æ","10æ","11æ","12æ"],shortcuts:"ã¯ã¤ãã¯é¸æ",past:"éå»",following:"å°æ¥",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"åé±","prev-month":"åæ","prev-year":"æ¨å¹´",next:"&nbsp;&nbsp;&nbsp;","next-week":"æ¥é±","next-month":"æ¥æ","next-year":"æ¥å¹´","less-than":"æ¥ä»ã®ç¯å²ã¯ï¼dæ¥ä»¥ä¸ã«ãã¹ãã§ã¯ããã¾ãã","more-than":"æ¥ä»ã®ç¯å²ã¯ï¼dæ¥ãä¸åã£ã¦ã¯ããã¾ãã","default-more":"ï¼dæ¥ãããé·ãæéãé¸æãã¦ãã ãã","default-less":"ï¼dæ¥æªæºã®æéãé¸æãã¦ãã ãã","default-range":"ï¼dæ¥ã¨ï¼dæ¥ã®éã®æ¥ä»ç¯å²ãé¸æãã¦ãã ãã","default-single":"æ¥ä»ãé¸æãã¦ãã ãã","default-default":"æ¥ä»ç¯å²ãé¸æãã¦ãã ãã",time:"æé",hour:"æé",minute:"å"},da:{selected:"Valgt:",day:"Dag",days:"Dage",apply:"Luk","week-1":"ma","week-2":"ti","week-3":"on","week-4":"to","week-5":"fr","week-6":"lÃ¸","week-7":"sÃ¸","month-name":["januar","februar","marts","april","maj","juni","juli","august","september","oktober","november","december"],shortcuts:"genveje","custom-values":"Brugerdefinerede vÃ¦rdier",past:"Forbi",following:"FÃ¸lgende",previous:"Forrige","prev-week":"uge","prev-month":"mÃ¥ned","prev-year":"Ã¥r",next:"NÃ¦ste","next-week":"uge","next-month":"mÃ¥ned","next-year":"Ã¥r","less-than":"Dato interval bÃ¸r ikke vÃ¦re med end %d dage","more-than":"Dato interval bÃ¸r ikke vÃ¦re mindre end %d dage","default-more":"VÃ¦lg datointerval lÃ¦ngere end %d dage","default-single":"VÃ¦lg dato","default-less":"VÃ¦lg datointerval mindre end %d dage","default-range":"VÃ¦lg datointerval mellem %d og %d dage","default-default":"VÃ¦lg datointerval",time:"tid",hour:"time",minute:"minut"},fi:{selected:"Valittu:",day:"PÃ¤ivÃ¤",days:"PÃ¤ivÃ¤Ã¤",apply:"Sulje","week-1":"ma","week-2":"ti","week-3":"ke","week-4":"to","week-5":"pe","week-6":"la","week-7":"su","week-number":"V","month-name":["tammikuu","helmikuu","maaliskuu","huhtikuu","toukokuu","kesÃ¤kuu","heinÃ¤kuu","elokuu","syyskuu","lokakuu","marraskuu","joulukuu"],shortcuts:"Pikavalinnat","custom-values":"Mukautetut Arvot",past:"Menneet",following:"Tulevat",previous:"Edellinen","prev-week":"Viikko","prev-month":"Kuukausi","prev-year":"Vuosi",next:"Seuraava","next-week":"Viikko","next-month":"Kuukausi","next-year":"Vuosi","less-than":"Aikajakson tulisi olla vÃ¤hemmÃ¤n kuin %d pÃ¤ivÃ¤Ã¤","more-than":"Aikajakson ei tulisi olla vÃ¤hempÃ¤Ã¤ kuin %d pÃ¤ivÃ¤Ã¤","default-more":"Valitse pidempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤","default-single":"Valitse pÃ¤ivÃ¤","default-less":"Valitse lyhyempi aikajakso kuin %d pÃ¤ivÃ¤Ã¤","default-range":"Valitse aikajakso %d ja %d pÃ¤ivÃ¤n vÃ¤liltÃ¤","default-default":"Valitse aikajakso",time:"Aika",hour:"Tunti",minute:"Minuutti"},cat:{selected:"Seleccionats:",day:"Dia",days:"Dies",apply:"Tanca","week-1":"Dl","week-2":"Dm","week-3":"Dc","week-4":"Dj","week-5":"Dv","week-6":"Ds","week-7":"Dg","week-number":"S","month-name":["gener","febrer","marÃ§","abril","maig","juny","juliol","agost","setembre","octubre","novembre","desembre"],shortcuts:"DreÃ§eres","custom-values":"Valors personalitzats",past:"Passat",following:"Futur",previous:"Anterior","prev-week":"Setmana","prev-month":"Mes","prev-year":"Any",next:"SegÃ¼ent","next-week":"Setmana","next-month":"Mes","next-year":"Any","less-than":"El perÃ­ode no hauria de ser de mÃ©s de %d dies","more-than":"El perÃ­ode no hauria de ser de menys de %d dies","default-more":"Perfavor selecciona un perÃ­ode mÃ©s gran de %d dies","default-single":"Perfavor selecciona una data","default-less":"Perfavor selecciona un perÃ­ode de menys de %d dies","default-range":"Perfavor selecciona un perÃ­ode d'entre %d i %d dies","default-default":"Perfavor selecciona un perÃ­ode",time:"Temps",hour:"Hora",minute:"Minut"},sk:{selected:"VybranÃ©:",day:"DeÅ",days:"Dni",apply:"ZavrieÅ¥","week-1":"po","week-2":"Ãºt","week-3":"st","week-4":"Å¡t","week-5":"pi","week-6":"so","week-7":"ne","week-number":"T","month-name":["januÃ¡r","februÃ¡r","marec","aprÃ­l","mÃ¡j","jÃºn","jÃºl","august","september","oktÃ³ber","november","december"],shortcuts:"Skratky","custom-values":"VlastnÃ© hodnoty",past:"po",following:"nasledujÃºci",previous:"predchÃ¡dzajÃºci","prev-week":"tÃ½Å¾deÅ","prev-month":"mesiac","prev-year":"rok",next:"ÄalÅ¡Ã­","next-week":"tÃ½Å¾deÅ","next-month":"mesiac","next-year":"rok","less-than":"Rozsah dÃ¡tumu by nemal byÅ¥ vÃ¤ÄÅ¡Ã­ ako %d dnÃ­","more-than":"Rozsah dÃ¡tumu by nemal byÅ¥ menÅ¡Ã­ ako %d dnÃ­","default-more":"ProsÃ­m zvoÄ¾te rozsah dlhÅ¡Ã­ ako %d dnÃ­","default-single":"ProsÃ­m zvoÄ¾te dÃ¡tum","default-less":"ProsÃ­m zvoÄ¾te rozsah menÅ¡Ã­ ako %d dnÃ­","default-range":"ProsÃ­m zvoÄ¾te rozsah medzi %d a %d dÅami","default-default":"ProsÃ­m zvoÄ¾te rozsah",time:"Äas",hour:"Hodina",minute:"MinÃºta"},tr:{selected:"SeÃ§ildi:",day:" gÃ¼n",days:" gÃ¼n",apply:"Uygula","week-1":"Pzt","week-2":"Sal","week-3":"Ãar","week-4":"Per","week-5":"Cuma","week-6":"Cmt","week-7":"Paz","week-number":"H","month-name":["Ocak","Åubat","Mart","Nisan","MayÄ±s","Haziran","Temmuz","AÄustos","EylÃ¼l","Ekim","KasÄ±m","AralÄ±k"],shortcuts:"KÄ±sayollar","custom-values":"Ãzel DeÄerler",past:"GeÃ§miÅ",following:"Sonraki",previous:"&nbsp;&nbsp;&nbsp;","prev-week":"Ãnceki Hafta","prev-month":"Ãnceki Ay","prev-year":"ÃncÉki YÄ±l",next:"&nbsp;&nbsp;&nbsp;","next-week":"Sonraki Hafta","next-month":"Sonraki Ay","next-year":"Sonraki YÄ±l","less-than":"Tarih aralÄ±ÄÄ± %d gÃ¼nden Ã§ok olmamalÄ±dÄ±r","more-than":"Tarih aralÄ±ÄÄ± %d gÃ¼nden az olmamalÄ±dÄ±r","default-more":"%d gÃ¼nden Ã§ok bir tarih seÃ§in","default-single":"Tarih seÃ§in","default-less":"%d gÃ¼nden az bir tarih seÃ§in","default-range":"%d ve %d gÃ¼n aralÄ±ÄÄ±nda tarihler seÃ§in","default-default":"Tarih aralÄ±ÄÄ± seÃ§in",time:"Zaman",hour:"Saat",minute:"Dakika"}},e.fn.dateRangePicker=function(a){a||(a={}),(a=e.extend(!0,{autoClose:!0,format:"DD/MM/YY",separator:" Ã  ",language:"pt",startOfWeek:"monday",getValue:function(){return e(this).val()},setValue:function(t){e(this).is(":disabled")||t==e(this).val()||e(this).val(t)},startDate:!1,endDate:t().endOf("day").toDate(),time:{enabled:!1},minDays:0,maxDays:0,showShortcuts:!0,shortcuts:{},customShortcuts:[{name:"Hoje",dates:function(){return[t().startOf("day").toDate(),new Date]}},{name:"7 dias",dates:function(){return[t().subtract(6,"days").toDate(),new Date]}},{name:"15 dias",dates:function(){return[t().subtract(14,"days").toDate(),new Date]}},{name:"Ãltimo mÃªs",dates:function(){return[t().subtract(30,"days").toDate(),new Date]}},{name:"Desde o inÃ­cio",dates:function(){return[t("2018-01-01").toDate(),new Date]}}],inline:!1,container:"body",alwaysOpen:!1,singleDate:!1,lookBehind:!1,batchMode:!1,duration:200,stickyMonths:!1,dayDivAttrs:[],dayTdAttrs:[],selectForward:!1,selectBackward:!1,applyBtnClass:"",singleMonth:!0,hoveringTooltip:!1,showTopbar:!1,swapTime:!1,showWeekNumbers:!1,getWeekNumber:function(e){return t(e).format("w")},customOpenAnimation:function(t){e(this).fadeIn(300,t)},customCloseAnimation:function(t){e(this).fadeOut(300,t)},customArrowPrevSymbol:null,customArrowNextSymbol:null,monthSelect:!1,yearSelect:!1},a)).start=!1,a.end=!1,a.startWeek=!1,a.isTouchDevice="ontouchstart"in window||navigator.msMaxTouchPoints,a.isTouchDevice&&(a.hoveringTooltip=!1),"auto"==a.singleMonth&&(a.singleMonth=e(window).width()<480),a.singleMonth&&(a.stickyMonths=!1),a.showTopbar||(a.autoClose=!0),a.startDate&&"string"==typeof a.startDate&&(a.startDate=t(a.startDate,a.format).toDate()),a.endDate&&"string"==typeof a.endDate&&(a.endDate=t(a.endDate,a.format).toDate()),a.yearSelect&&"boolean"==typeof a.yearSelect&&(a.yearSelect=function(e){return[e-5,e+5]});var n,s,r=function(){if("auto"==a.language){var t=navigator.language?navigator.language:navigator.browserLanguage;return t&&(t=t.toLowerCase())in e.dateRangePickerLanguages?e.dateRangePickerLanguages[t]:e.dateRangePickerLanguages.default}return a.language&&a.language in e.dateRangePickerLanguages?e.dateRangePickerLanguages[a.language]:e.dateRangePickerLanguages.default}(),i=!1,o=this,d=e(o).get(0);return e(this).off(".datepicker").on("click.datepicker",(function(e){n.is(":visible")||u(a.duration)})).on("change.datepicker",(function(e){c()})).on("keyup.datepicker",(function(){try{clearTimeout(s)}catch(e){}s=setTimeout((function(){c()}),2e3)})),function(){var s=this;if(e(this).data("date-picker-opened"))return void N();e(this).data("date-picker-opened",!0),(n=function(){var t='<div class="date-picker-wrapper';a.extraClass&&(t+=" "+a.extraClass+" ");a.singleDate&&(t+=" single-date ");a.showShortcuts||(t+=" no-shortcuts ");a.showTopbar||(t+=" no-topbar ");a.customTopBar&&(t+=" custom-topbar ");t+='">',a.showTopbar&&(t+='<div class="drp_top-bar">',a.customTopBar?("function"==typeof a.customTopBar&&(a.customTopBar=a.customTopBar()),t+='<div class="custom-top">'+a.customTopBar+"</div>"):(t+='<div class="normal-top"><span class="selection-top">'+J("selected")+' </span> <b class="start-day">...</b>',a.singleDate||(t+=' <span class="separator-day">'+a.separator+'</span> <b class="end-day">...</b> <i class="selected-days">(<span class="selected-days-num">3</span> '+J("days")+")</i>"),t+="</div>",t+='<div class="error-top">error</div><div class="default-top">default</div>'),t+='<input type="button" class="apply-btn disabled'+function(){var e="";!0===a.autoClose&&(e+=" hide");""!==a.applyBtnClass&&(e+=" "+a.applyBtnClass);return e}()+'" value="'+J("apply")+'" />',t+="</div>");var n=a.showWeekNumbers?7:5,s='<i class="material-icons">chevron_left</i>';a.customArrowPrevSymbol&&(s=a.customArrowPrevSymbol);var r='<i class="material-icons">chevron_right</i>';a.customArrowNextSymbol&&(r=a.customArrowNextSymbol);t+='<div class="month-wrapper">   <table class="month1" cellspacing="0" border="0" cellpadding="0">       <thead>           <tr class="caption">               <th colspan="'+n+'" class="month-name">               </th>               <th class="arrows" colspan="'+(7-n)+'" >                   <span class="prev">'+s+"                   </span>"+(a.singleDate||!a.stickyMonths?'<span class="next">'+r+"</span>":"")+'               </th>           </tr>           <tr class="week-name">'+G()+"       </thead>       <tbody></tbody>   </table>",function(){return!a.singleMonth}()&&(t+='<div class="gap">'+function(){for(var e=['<div class="gap-top-mask"></div><div class="gap-bottom-mask"></div><div class="gap-lines">'],t=0;t<20;t++)e.push('<div class="gap-line"><div class="gap-1"></div><div class="gap-2"></div><div class="gap-3"></div></div>');return e.push("</div>"),e.join("")}()+'</div><table class="month2" cellspacing="0" border="0" cellpadding="0">   <thead>   <tr class="caption">       <th>'+(a.stickyMonths?"":'<span class="prev">'+s+"</span>")+'       </th>       <th colspan="'+n+'" class="month-name">       </th>       <th>           <span class="next">'+r+'</span>       </th>   </tr>   <tr class="week-name">'+G()+"   </thead>   <tbody></tbody></table>");t+='<div class="dp-clearfix"></div><div class="time"><div class="time1"></div>',a.singleDate||(t+='<div class="time2"></div>');if(t+='</div><div class="dp-clearfix"></div></div>',t+='<div class="footer">',a.showShortcuts){var i=a.shortcuts;if(i){var o;if(i["prev-days"]&&i["prev-days"].length>0){t+='&nbsp;<span class="prev-days">'+J("past");for(var d=0;d<i["prev-days"].length;d++)o=i["prev-days"][d],o+=i["prev-days"][d]>1?J("days"):J("day"),t+=' <a href="javascript:;" shortcut="day,-'+i["prev-days"][d]+'">'+o+"</a>";t+="</span>"}if(i["next-days"]&&i["next-days"].length>0){t+='&nbsp;<span class="next-days">'+J("following");for(d=0;d<i["next-days"].length;d++)o=i["next-days"][d],o+=i["next-days"][d]>1?J("days"):J("day"),t+=' <a href="javascript:;" shortcut="day,'+i["next-days"][d]+'">'+o+"</a>";t+="</span>"}if(i.prev&&i.prev.length>0){t+='&nbsp;<span class="prev-buttons">'+J("previous");for(d=0;d<i.prev.length;d++)o=J("prev-"+i.prev[d]),t+=' <a href="javascript:;" shortcut="prev,'+i.prev[d]+'">'+o+"</a>";t+="</span>"}if(i.next&&i.next.length>0){t+='&nbsp;<span class="next-buttons">'+J("next");for(d=0;d<i.next.length;d++)o=J("next-"+i.next[d]),t+=' <a href="javascript:;" shortcut="next,'+i.next[d]+'">'+o+"</a>";t+="</span>"}}if(a.customShortcuts)for(d=0;d<a.customShortcuts.length;d++){var l=a.customShortcuts[d];t+='<span class="custom-shortcut"><a href="javascript:;" shortcut="custom">'+l.name+"</a></span>"}t+="</div>"}if(a.showCustomValues&&(t+='<div class="customValues"><b>'+(a.customValueLabel||J("custom-values"))+"</b>",a.customValues))for(d=0;d<a.customValues.length;d++){var u=a.customValues[d];t+='&nbsp;<span class="custom-value"><a href="javascript:;" custom="'+u.value+'">'+u.name+"</a></span>"}return e(t+="</div></div>")}().hide()).append('<div class="date-range-length-tip"></div>'),e(a.container).append(n),a.inline?n.addClass("inline-wrapper"):l();a.alwaysOpen&&n.find(".apply-btn").hide();var r=q();if(Q(r),a.time.enabled)if(a.startDate&&a.endDate||a.start&&a.end)V(t(a.start||a.startDate).toDate(),"time1"),V(t(a.end||a.endDate).toDate(),"time2");else{var o=a.defaultEndTime?a.defaultEndTime:r;V(r,"time1"),V(o,"time2")}var u="";u=a.singleDate?J("default-single"):a.minDays&&a.maxDays?J("default-range"):a.minDays?J("default-more"):a.maxDays?J("default-less"):J("default-default");n.find(".default-top").html(u.replace(/\%d/,a.minDays).replace(/\%d/,a.maxDays)),a.singleMonth?n.addClass("single-month"):n.addClass("two-months");setTimeout((function(){m(),i=!0}),0),n.on("click",(function(e){e.stopPropagation()})),e(document).on("click.datepicker",K),n.find(".next").on("click",(function(){var t,n;a.stickyMonths?(t=L(a.month1),E(n=L(a.month2))||!a.singleDate&&H(t,n)>=0||(P(t,"month1"),P(n,"month2"),C())):function(t){var n=e(t).parents("table").hasClass("month2"),s=n?a.month2:a.month1;s=L(s),!a.singleMonth&&!a.singleDate&&!n&&H(s,a.month2)>=0||E(s)||(P(s,n?"month2":"month1"),A())}(this)})),n.find(".prev").on("click",(function(){var t,n;a.stickyMonths?(t=U(a.month1),n=U(a.month2),E(t)||!a.singleDate&&H(n,t)<=0||(P(n,"month2"),P(t,"month1"),C())):function(t){var n=e(t).parents("table").hasClass("month2"),s=n?a.month2:a.month1;s=U(s),n&&H(s,a.month1)<=0||E(s)||(P(s,n?"month2":"month1"),A())}(this)})),n.attr("unselectable","on").css("user-select","none").on("selectstart",(function(e){return e.preventDefault(),!1})),n.find(".apply-btn").on("click",(function(){N();var t=R(new Date(a.start))+a.separator+R(new Date(a.end));e(s).trigger("datepicker-apply",{value:t,date1:new Date(a.start),date2:new Date(a.end)})})),n.find("[custom]").on("click",(function(){var t=e(this).attr("custom");a.start=!1,a.end=!1,n.find(".day.checked").removeClass("checked"),a.setValue.call(d,t),S(),Y(!0),C(),a.autoClose&&N()})),n.find("[shortcut]").on("click",(function(){var t,n=e(this).attr("shortcut"),s=new Date,r=!1;if(-1!=n.indexOf("day")){var i=parseInt(n.split(",",2)[1],10);r=new Date((new Date).getTime()+864e5*i),s=new Date(s.getTime()+864e5*(i>0?1:-1))}else if(-1!=n.indexOf("week")){var o;for(o=1==(t=-1!=n.indexOf("prev,")?-1:1)?"monday"==a.startOfWeek?1:0:"monday"==a.startOfWeek?0:6,s=new Date(s.getTime()-864e5);s.getDay()!=o;)s=new Date(s.getTime()+864e5*t);r=new Date(s.getTime()+864e5*t*6)}else if(-1!=n.indexOf("month"))(r=1==(t=-1!=n.indexOf("prev,")?-1:1)?L(s):U(s)).setDate(1),(s=L(r)).setDate(1),s=new Date(s.getTime()-864e5);else if(-1!=n.indexOf("year"))t=-1!=n.indexOf("prev,")?-1:1,(r=new Date).setFullYear(s.getFullYear()+t),r.setMonth(0),r.setDate(1),s.setFullYear(s.getFullYear()+t),s.setMonth(11),s.setDate(31);else if("custom"==n){var d=e(this).html();if(a.customShortcuts&&a.customShortcuts.length>0)for(var l=0;l<a.customShortcuts.length;l++){var u=a.customShortcuts[l];if(u.name==d){var c;if((c=u.dates.call())&&2==c.length&&(r=c[0],s=c[1]),c&&1==c.length){var h=c[0];P(h,"month1"),P(L(h),"month2"),A()}break}}e(".custom-shortcut a").removeClass("active"),e(this).addClass("active")}r&&s&&(T(r,s),S())})),n.find(".time1 input[type=range]").on("change touchmove",(function(t){var a=t.target;v("time1","hour"==a.name?e(a).val().replace(/^(\d{1})$/,"0$1"):void 0,"minute"==a.name?e(a).val().replace(/^(\d{1})$/,"0$1"):void 0)})),n.find(".time2 input[type=range]").on("change touchmove",(function(t){var a=t.target;v("time2","hour"==a.name?e(a).val().replace(/^(\d{1})$/,"0$1"):void 0,"minute"==a.name?e(a).val().replace(/^(\d{1})$/,"0$1"):void 0)}))}.call(this),a.alwaysOpen&&u(0),e(this).data("dateRangePicker",{setStart:function(e){return"string"==typeof e&&(e=t(e,a.format).toDate()),a.end=!1,j(e),this},setEnd:function(e,n){var s=new Date;return s.setTime(a.start),"string"==typeof e&&(e=t(e,a.format).toDate()),T(s,e,n),this},setDateRange:function(e,n,s){"string"==typeof e&&"string"==typeof n&&(e=t(e,a.format).toDate(),n=t(n,a.format).toDate()),T(e,n,s)},clear:function(){a.start=!1,a.end=!1,n.find(".day.checked").removeClass("checked"),n.find(".day.last-date-selected").removeClass("last-date-selected"),n.find(".day.first-date-selected").removeClass("first-date-selected"),n.find(".custom-shortcut a").removeClass("active"),a.setValue.call(d,""),S(),Y(),C()},close:N,open:u,redraw:F,getDatePicker:function(){return n},resetMonthsView:Q,destroy:function(){e(o).off(".datepicker"),e(o).data("dateRangePicker",""),e(o).data("date-picker-opened",null),n.remove(),e(window).off("resize.datepicker",l),e(document).off("click.datepicker",K)}}),e(window).on("resize.datepicker",l),this;function l(){if(!a.inline){var t=e(o).offset();if("relative"==e(a.container).css("position")){var s=e(a.container).offset(),r=Math.max(0,t.left+n.outerWidth()-e("body").width()+16),i=t.left-s.left-r;n.css({top:t.top-s.top+e(a.container).scrollTop()+e(o).outerHeight()+4,left:i<0?5:i})}else t.left<460?n.css({top:t.top+e(o).outerHeight()+parseInt(e("body").css("border-top")||0,10),left:t.left}):n.css({top:t.top+e(o).outerHeight()+parseInt(e("body").css("border-top")||0,10),left:t.left+e(o).width()-n.width()-16})}}function u(t){F(),c(),a.customOpenAnimation?a.customOpenAnimation.call(n.get(0),(function(){e(o).trigger("datepicker-opened",{relatedTarget:n})})):n.slideDown(t,(function(){e(o).trigger("datepicker-opened",{relatedTarget:n})})),e(o).trigger("datepicker-open",{relatedTarget:n}),A(),m(),l()}function c(){var e=a.getValue.call(d),n=e?e.split(a.separator):"";if(n&&(1==n.length&&a.singleDate||n.length>=2)){var s=a.format;s.match(/Do/)&&(s=s.replace(/Do/,"D"),n[0]=n[0].replace(/(\d+)(th|nd|st)/,"$1"),n.length>=2&&(n[1]=n[1].replace(/(\d+)(th|nd|st)/,"$1"))),i=!1,n.length>=2?T(h(n[0],s,t.locale(a.language)),h(n[1],s,t.locale(a.language))):1==n.length&&a.singleDate&&j(h(n[0],s,t.locale(a.language))),i=!0}}function h(e,a,n){return t(e,a,n).isValid()?t(e,a,n).toDate():t().toDate()}function m(){var e=n.find(".gap").css("margin-left");e&&(e=parseInt(e));var t=n.find(".month1").width(),s=(n.find(".gap").width()||0)+(e?2*e:0),r=n.find(".month2").width()||0;n.find(".month-wrapper").width(t+s+r),a.singleMonth&&n.find(".footer").width(t+s+r)}function f(e,a){n.find("."+e+" input[type=range].hour-range").val(t(a).hours()),n.find("."+e+" input[type=range].minute-range").val(t(a).minutes()),v(e,t(a).format("HH"),t(a).format("mm"))}function p(e,n){a[e]=parseInt(t(parseInt(n)).hour(t(a[e+"Time"]).format("HH"),"h").minute(t(a[e+"Time"]).format("mm"),"m").valueOf())}function v(e,s,r){switch(s&&n.find("."+e+" .hour-val").text(s),r&&n.find("."+e+" .minute-val").text(r),e){case"time1":a.start&&i("start",t(a.start)),i("startTime",t(a.startTime||t().valueOf()));break;case"time2":a.end&&i("end",t(a.end)),i("endTime",t(a.endTime||t().valueOf()))}function i(e,t){var n=t.format("HH"),i=t.format("mm");a[e]=t.hour(s||n,"h").minute(r||i,"m").valueOf()}S(),Y(),C()}function g(e){var n=e;return"week-range"===a.batchMode?n="monday"===a.startOfWeek?t(parseInt(e)).startOf("isoweek").valueOf():t(parseInt(e)).startOf("week").valueOf():"month-range"===a.batchMode&&(n=t(parseInt(e)).startOf("month").valueOf()),n}function y(e){var n=e;return"week-range"===a.batchMode?n="monday"===a.startOfWeek?t(parseInt(e)).endOf("isoweek").valueOf():t(parseInt(e)).endOf("week").valueOf():"month-range"===a.batchMode&&(n=t(parseInt(e)).endOf("month").valueOf()),n}function k(n){if(!n.hasClass("invalid")){var s=n.attr("time");if(n.addClass("checked"),a.singleDate?(a.start=s,a.end=!1):"week"===a.batchMode?"monday"===a.startOfWeek?(a.start=t(parseInt(s)).startOf("isoweek").valueOf(),a.end=t(parseInt(s)).endOf("isoweek").valueOf()):(a.end=t(parseInt(s)).endOf("week").valueOf(),a.start=t(parseInt(s)).startOf("week").valueOf()):"workweek"===a.batchMode?(a.start=t(parseInt(s)).day(1).valueOf(),a.end=t(parseInt(s)).day(5).valueOf()):"weekend"===a.batchMode?(a.start=t(parseInt(s)).day(6).valueOf(),a.end=t(parseInt(s)).day(7).valueOf()):"month"===a.batchMode?(a.start=t(parseInt(s)).startOf("month").valueOf(),a.end=t(parseInt(s)).endOf("month").valueOf()):a.start&&a.end||!a.start&&!a.end?(a.start=g(s),a.end=!1):a.start&&(a.end=y(s),a.time.enabled&&p("end",a.end)),a.time.enabled&&(a.start&&p("start",a.start),a.end&&p("end",a.end)),!a.singleDate&&a.start&&a.end&&a.start>a.end){var r=a.end;a.end=y(a.start),a.start=g(r),a.time.enabled&&a.swapTime&&(f("time1",a.start),f("time2",a.end))}a.start=parseInt(a.start),a.end=parseInt(a.end),b(),a.start&&!a.end&&(e(o).trigger("datepicker-first-date-selected",{date1:new Date(a.start)}),D(n)),_(),S(),Y(),C(),M(),e(".custom-shortcut a").removeClass("active")}}function w(e){if(e=parseInt(e,10),a.startDate&&I(e,a.startDate)<0)return!1;if(a.endDate&&I(e,a.endDate)>0)return!1;if(a.start&&!a.end&&!a.singleDate){if(a.maxDays>0&&O(e,a.start)>a.maxDays)return!1;if(a.minDays>0&&O(e,a.start)<a.minDays)return!1;if(a.selectForward&&e<a.start)return!1;if(a.selectBackward&&e>a.start)return!1;if(a.beforeShowDay&&"function"==typeof a.beforeShowDay){for(var t=!0,n=e;O(n,a.start)>1;){if(!a.beforeShowDay(new Date(n))[0]){t=!1;break}if(Math.abs(n-a.start)<864e5)break;n>a.start&&(n-=864e5),n<a.start&&(n+=864e5)}if(!t)return!1}}return!0}function _(){return n.find(".day.invalid.tmp").removeClass("tmp invalid").addClass("valid"),a.start&&!a.end&&n.find(".day.toMonth.valid").each((function(){w(parseInt(e(this).attr("time"),10))?e(this).addClass("valid tmp").removeClass("invalid"):e(this).addClass("invalid tmp").removeClass("valid")})),!0}function D(t){var s=parseInt(t.attr("time")),r="";if(t.hasClass("has-tooltip")&&t.attr("data-tooltip"))r='<span class="tooltip-content">'+t.attr("data-tooltip")+"</span>";else if(!t.hasClass("invalid"))if(a.singleDate)n.find(".day.hovering").removeClass("hovering"),t.addClass("hovering");else if(n.find(".day").each((function(){var t=parseInt(e(this).attr("time"));a.start,a.end;t==s?e(this).addClass("hovering"):e(this).removeClass("hovering"),a.start&&!a.end&&(a.start<t&&s>=t||a.start>t&&s<=t)?e(this).addClass("hovering"):e(this).removeClass("hovering")})),a.start&&!a.end){var i=O(s,a.start);a.hoveringTooltip&&("function"==typeof a.hoveringTooltip?r=a.hoveringTooltip(i,a.start,s):!0===a.hoveringTooltip&&i>1&&(r=i+" "+J("days")))}if(r){var o=t.offset(),d=n.offset(),l=o.left-d.left,u=o.top-d.top;l+=t.width()/2;var c=n.find(".date-range-length-tip"),h=c.css({visibility:"hidden",display:"none"}).html(r).width(),m=c.height();l-=h/2,u-=m,setTimeout((function(){c.css({left:l,top:u,display:"block",visibility:"visible"})}),10)}else n.find(".date-range-length-tip").hide()}function b(){n.find(".day.hovering").removeClass("hovering"),n.find(".date-range-length-tip").hide()}function x(e){var n=e.val(),s=e.attr("name"),r=e.parents("table").hasClass("month1")?"month1":"month2",i="month1"===r?"month2":"month1",o=!!a.startDate&&t(a.startDate),d=!!a.endDate&&t(a.endDate),l=t(a[r])[s](n);o&&l.isSameOrBefore(o)&&(l=o.add("month2"===r?1:0,"month")),d&&l.isSameOrAfter(d)&&(l=d.add(a.singleMonth||"month1"!==r?0:-1,"month")),P(l,r),"month1"===r?(a.stickyMonths||t(l).isSameOrAfter(a[i],"month"))&&P(t(l).add(1,"month"),i):(a.stickyMonths||t(l).isSameOrBefore(a[i],"month"))&&P(t(l).add(-1,"month"),i),A()}function M(){!0===a.singleDate?i&&a.start&&a.autoClose&&N():i&&a.start&&a.end&&a.autoClose&&N()}function S(){var e=Math.ceil((a.end-a.start)/864e5)+1;a.singleDate?a.start&&!a.end?n.find(".drp_top-bar").removeClass("error").addClass("normal"):n.find(".drp_top-bar").removeClass("error").removeClass("normal"):a.maxDays&&e>a.maxDays?(a.start=!1,a.end=!1,n.find(".day").removeClass("checked"),n.find(".drp_top-bar").removeClass("normal").addClass("error").find(".error-top").html(J("less-than").replace("%d",a.maxDays))):a.minDays&&e<a.minDays?(a.start=!1,a.end=!1,n.find(".day").removeClass("checked"),n.find(".drp_top-bar").removeClass("normal").addClass("error").find(".error-top").html(J("more-than").replace("%d",a.minDays))):a.start||a.end?n.find(".drp_top-bar").removeClass("error").addClass("normal"):n.find(".drp_top-bar").removeClass("error").removeClass("normal"),a.singleDate&&a.start&&!a.end||!a.singleDate&&a.start&&a.end?n.find(".apply-btn").removeClass("disabled"):n.find(".apply-btn").addClass("disabled"),a.batchMode&&(a.start&&a.startDate&&I(a.start,a.startDate)<0||a.end&&a.endDate&&I(a.end,a.endDate)>0)&&(a.start=!1,a.end=!1,n.find(".day").removeClass("checked"))}function Y(t,s){var r;n.find(".start-day").html("..."),n.find(".end-day").html("..."),n.find(".selected-days").hide(),a.start&&n.find(".start-day").html(R(new Date(parseInt(a.start)))),a.end&&n.find(".end-day").html(R(new Date(parseInt(a.end)))),a.start&&a.singleDate?(n.find(".apply-btn").removeClass("disabled"),r=R(new Date(a.start)),a.setValue.call(d,r,R(new Date(a.start)),R(new Date(a.end))),i&&!s&&e(o).trigger("datepicker-change",{value:r,date1:new Date(a.start)})):a.start&&a.end?(n.find(".selected-days").show().find(".selected-days-num").html(O(a.end,a.start)),n.find(".apply-btn").removeClass("disabled"),r=R(new Date(a.start))+a.separator+R(new Date(a.end)),a.setValue.call(d,r,R(new Date(a.start)),R(new Date(a.end))),i&&!s&&e(o).trigger("datepicker-change",{value:r,date1:new Date(a.start),date2:new Date(a.end)})):t?n.find(".apply-btn").removeClass("disabled"):n.find(".apply-btn").addClass("disabled")}function O(e,a){return Math.abs(t(e).diff(t(a),"d"))+1}function T(e,t,n){if(e.getTime()>t.getTime()){var s=t;t=e,e=s,s=null}var r=!0;if(a.startDate&&I(e,a.startDate)<0&&(r=!1),a.endDate&&I(t,a.endDate)>0&&(r=!1),!r)return P(a.startDate,"month1"),P(L(a.startDate),"month2"),void A();a.start=e.getTime(),a.end=t.getTime(),a.time.enabled&&(f("time1",e),f("time2",t)),(a.stickyMonths||I(e,t)>0&&0===H(e,t))&&(a.lookBehind?e=U(t):t=L(e)),a.stickyMonths&&!1!==a.endDate&&H(t,a.endDate)>0&&(e=U(e),t=U(t)),a.stickyMonths||0===H(e,t)&&(a.lookBehind?e=U(t):t=L(e)),P(e,"month1"),P(t,"month2"),A(),S(),Y(!1,n),M()}function j(e){var t=!0;if(a.startDate&&I(e,a.startDate)<0&&(t=!1),a.endDate&&I(e,a.endDate)>0&&(t=!1),t){if(a.start=e.getTime(),a.time.enabled&&f("time1",e),P(e,"month1"),!0!==a.singleMonth)P(L(e),"month2");A(),Y(),M()}else P(a.startDate,"month1")}function C(){(a.start||a.end)&&(n.find(".day").each((function(){var n=parseInt(e(this).attr("time")),s=a.start,r=a.end;a.time.enabled&&(n=t(n).startOf("day").valueOf(),s=t(s||t().valueOf()).startOf("day").valueOf(),r=t(r||t().valueOf()).startOf("day").valueOf()),a.start&&a.end&&r>=n&&s<=n||a.start&&!a.end&&t(s).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?e(this).addClass("checked"):e(this).removeClass("checked"),a.start&&t(s).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?e(this).addClass("first-date-selected"):e(this).removeClass("first-date-selected"),a.end&&t(r).format("YYYY-MM-DD")==t(n).format("YYYY-MM-DD")?e(this).addClass("last-date-selected"):e(this).removeClass("last-date-selected")})),n.find(".week-number").each((function(){e(this).attr("data-start-time")==a.startWeek&&e(this).addClass("week-number-selected")})))}function P(s,r){var i=function(e,n){var s=(e=t(e)).get("month"),r='<div class="month-element">'+$(s)+"</div>";if(!a.monthSelect)return r;var i=!!a.startDate&&t(a.startDate).add(a.singleMonth||"month2"!==n?0:1,"month"),o=!!a.endDate&&t(a.endDate).add(a.singleMonth||"month1"!==n?0:-1,"month"),d=i&&e.isSame(i,"year")?i.get("month"):0,l=o&&e.isSame(o,"year")?o.get("month"):11,u=Math.min(d,s),c=Math.max(l,s);if(u===c)return r;return W("month",z({minSelectable:d,maxSelectable:l,minVisible:u,maxVisible:c},s,(function(e){return $(e)})))}(s=t(s).toDate(),r),o=function(e,n){var s=(e=t(e)).get("year"),r='<div class="month-element">'+s+"</div>";if(!a.yearSelect)return r;var i=a.yearSelect&&"function"==typeof a.yearSelect,o=!!a.startDate&&t(a.startDate).add(a.singleMonth||"month2"!==n?0:1,"month"),d=!!a.endDate&&t(a.endDate).add(a.singleMonth||"month1"!==n?0:-1,"month"),l=i?a.yearSelect(s):a.yearSelect.slice(),u=o?Math.max(l[0],o.get("year")):Math.min(l[0],s),c=d?Math.min(l[1],d.get("year")):Math.max(l[1],s),h=Math.min(u,s),m=Math.max(c,s);if(h===m)return r;return W("year",z({minSelectable:u,maxSelectable:c,minVisible:h,maxVisible:m},s))}(s,r);n.find("."+r+" .month-name").html(i+" "+o),n.find("."+r+" tbody").html(function(e){var n=[];e.setDate(1);new Date(e.getTime()-864e5);var s,r,i=new Date,o=e.getDay();0===o&&"monday"===a.startOfWeek&&(o=7);if(o>0)for(var d=o;d>0;d--){r=w((h=new Date(e.getTime()-864e5*d)).getTime()),a.startDate&&I(h,a.startDate)<0&&(r=!1),a.endDate&&I(h,a.endDate)>0&&(r=!1),n.push({date:h,type:"lastMonth",day:h.getDate(),time:h.getTime(),valid:r})}var l=e.getMonth();for(d=0;d<40;d++)r=w((s=t(e).add(d,"days").toDate()).getTime()),a.startDate&&I(s,a.startDate)<0&&(r=!1),a.endDate&&I(s,a.endDate)>0&&(r=!1),n.push({date:s,type:s.getMonth()==l?"toMonth":"nextMonth",day:s.getDate(),time:s.getTime(),valid:r});for(var u=[],c=0;c<6&&"nextMonth"!=n[7*c].type;c++){u.push("<tr>");for(var h=0;h<7;h++){s=n[7*c+("monday"==a.startOfWeek?h+1:h)];var m=t(s.time).format("L")==t(i).format("L");if(s.extraClass="",s.tooltip="",s.valid&&a.beforeShowDay&&"function"==typeof a.beforeShowDay){var f=a.beforeShowDay(t(s.time).toDate());s.valid=f[0],s.extraClass=f[1]||"",s.tooltip=f[2]||"",""!==s.tooltip&&(s.extraClass+=" has-tooltip ")}var p={time:s.time,"data-tooltip":s.tooltip,class:"day "+s.type+" "+s.extraClass+" "+(s.valid?"valid":"invalid")+" "+(m?"real-today":"")};0===h&&a.showWeekNumbers&&u.push('<td><div class="week-number" data-start-time="'+s.time+'">'+a.getWeekNumber(s.date)+"</div></td>"),u.push("<td "+Z({},a.dayTdAttrs,s)+"><div "+Z(p,a.dayDivAttrs,s)+">"+B(s.time,s.day)+"</div></td>")}u.push("</tr>")}return u.join("")}(s)),a[r]=s,_(),n.find(".day").off("click").on("click",(function(t){k(e(this))})),n.find(".day").off("mouseenter").on("mouseenter",(function(t){D(e(this))})),n.find(".day").off("mouseleave").on("mouseleave",(function(e){n.find(".date-range-length-tip").hide(),a.singleDate&&b()})),n.find(".week-number").off("click").on("click",(function(s){var r,i,o,d;r=e(this),d=parseInt(r.attr("data-start-time"),10),a.startWeek?(n.find(".week-number-selected").removeClass("week-number-selected"),i=new Date(d<a.startWeek?d:a.startWeek),o=new Date(d<a.startWeek?a.startWeek:d),a.startWeek=!1,a.start=t(i).day("monday"==a.startOfWeek?1:0).valueOf(),a.end=t(o).day("monday"==a.startOfWeek?7:6).valueOf()):(a.startWeek=d,r.addClass("week-number-selected"),i=new Date(d),a.start=t(i).day("monday"==a.startOfWeek?1:0).valueOf(),a.end=t(i).day("monday"==a.startOfWeek?7:6).valueOf()),_(),S(),Y(),C(),M()})),n.find(".month").off("change").on("change",(function(t){x(e(this))})),n.find(".year").off("change").on("change",(function(t){x(e(this))}))}function z(e,t,a){var n=[];a=a||function(e){return e};for(var s=e.minVisible;s<=e.maxVisible;s++)n.push({value:s,text:a(s),selected:s===t,disabled:s<e.minSelectable||s>e.maxSelectable});return n}function W(e,t){for(var a,n='<div class="select-wrapper"><select class="'+e+'" name="'+e+'">',s=0,r=t.length;s<r;s++){var i=t[s];n+='<option value="'+i.value+'"'+(i.selected?" selected":"")+(i.disabled?" disabled":"")+">"+i.text+"</option>",i.selected&&(a=i.text)}return n+="</select>"+a+"</div>"}function V(e,t){n.find("."+t).append("<div><span>"+J("Time")+': <span class="hour-val">00</span>:<span class="minute-val">00</span></span></div><div class="hour"><label>'+J("Hour")+': <input type="range" class="hour-range" name="hour" min="0" max="23"></label></div><div class="minute"><label>'+J("Minute")+': <input type="range" class="minute-range" name="minute" min="0" max="59"></label></div>'),f(t,e)}function $(e){return J("month-name")[e]}function R(e){return t(e).format(a.format)}function A(){C();var e=parseInt(t(a.month1).format("YYYYMM")),s=parseInt(t(a.month2).format("YYYYMM")),r=Math.abs(e-s);r>1&&89!=r?n.addClass("has-gap").removeClass("no-gap").find(".gap").css("visibility","visible"):n.removeClass("has-gap").addClass("no-gap").find(".gap").css("visibility","hidden");var i=n.find("table.month1").height(),o=n.find("table.month2").height();n.find(".gap").height(Math.max(i,o)+10)}function N(){if(!a.alwaysOpen){var t=function(){e(o).data("date-picker-opened",!1),e(o).trigger("datepicker-closed",{relatedTarget:n})};a.customCloseAnimation?a.customCloseAnimation.call(n.get(0),t):e(n).slideUp(a.duration,t),e(o).trigger("datepicker-close",{relatedTarget:n})}}function F(){P(a.month1,"month1"),P(a.month2,"month2")}function H(e,a){var n=parseInt(t(e).format("YYYYMM"))-parseInt(t(a).format("YYYYMM"));return n>0?1:0===n?0:-1}function I(e,a){var n=parseInt(t(e).format("YYYYMMDD"))-parseInt(t(a).format("YYYYMMDD"));return n>0?1:0===n?0:-1}function L(e){return t(e).add(1,"months").toDate()}function U(e){return t(e).add(-1,"months").toDate()}function G(){var e=a.showWeekNumbers?"<th>"+J("week-number")+"</th>":"";return"monday"==a.startOfWeek?e+"<th>"+J("week-1")+"</th><th>"+J("week-2")+"</th><th>"+J("week-3")+"</th><th>"+J("week-4")+"</th><th>"+J("week-5")+"</th><th>"+J("week-6")+"</th><th>"+J("week-7")+"</th>":e+"<th>"+J("week-7")+"</th><th>"+J("week-1")+"</th><th>"+J("week-2")+"</th><th>"+J("week-3")+"</th><th>"+J("week-4")+"</th><th>"+J("week-5")+"</th><th>"+J("week-6")+"</th>"}function E(e){return e=t(e),!(!a.startDate||!e.endOf("month").isBefore(a.startDate))||!(!a.endDate||!e.startOf("month").isAfter(a.endDate))}function Z(t,a,n){var s=e.extend(!0,{},t);e.each(a,(function(e,t){var a=t(n);for(var r in a)s.hasOwnProperty(r)?s[r]+=a[r]:s[r]=a[r]}));var r="";for(var i in s)s.hasOwnProperty(i)&&(r+=i+'="'+s[i]+'" ');return r}function B(e,t){return a.showDateFilter&&"function"==typeof a.showDateFilter?a.showDateFilter(e,t):t}function J(t){var a=t.toLowerCase(),n=t in r?r[t]:a in r?r[a]:null,s=e.dateRangePickerLanguages.default;return null==n&&(n=t in s?s[t]:a in s?s[a]:""),n}function q(){var e=a.defaultTime?a.defaultTime:new Date;return a.lookBehind?(a.startDate&&H(e,a.startDate)<0&&(e=L(t(a.startDate).toDate())),a.endDate&&H(e,a.endDate)>0&&(e=t(a.endDate).toDate())):(a.startDate&&H(e,a.startDate)<0&&(e=t(a.startDate).toDate()),a.endDate&&H(L(e),a.endDate)>0&&(e=U(t(a.endDate).toDate()))),a.singleDate&&(a.startDate&&H(e,a.startDate)<0&&(e=t(a.startDate).toDate()),a.endDate&&H(e,a.endDate)>0&&(e=t(a.endDate).toDate())),e}function Q(e){e||(e=q()),a.lookBehind?(P(U(e),"month1"),P(e,"month2")):(P(e,"month1"),P(L(e),"month2")),a.singleDate&&P(e,"month1"),C(),A()}function K(t){(function(t,a){return a.contains(t.target)||t.target==a||null!=a.childNodes&&e.inArray(t.target,a.childNodes)>=0})(t,o[0])||n.is(":visible")&&N()}}}));
>>>>>>> master
